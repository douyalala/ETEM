----------
mutation rule: addQualifier;restrict
mutate pos: 537
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 537
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 0.34959936141967773
----------
mutation rule: repBinaryExpr;
mutate pos: 648
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   648
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1.003000020980835
----------
mutation rule: moveStmt;
mutate pos: 885
mutate cmd: ./exefile/moveStmt-mul ./main.c --   885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 97.70971131324768
succeed? True
instantReward: 1.6851187166135853e-05
EndTime: 99.42470264434814
----------
mutation rule: addRepModifier;short
mutate pos: 512
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 512
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.05200958251953
succeed? True
instantReward: 4.263029489012343e-08
EndTime: 149.2531442642212
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 159.56995224952698
----------
mutation rule: addVarDecl;
mutate pos: 754
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   754
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 159.85071539878845
----------
mutation rule: addWhile;
mutate pos: 628
mutate cmd: ./exefile/addWhile-mul ./main.c --   628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 170.33488202095032
----------
mutation rule: repBinaryOp;>,<
mutate pos: 745
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "<" 745
pos_left_this_mutator: [2] ['745', '776']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 180.64476084709167
----------
mutation rule: TurnConstantVar;
mutate pos: 617
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 181.97575187683105
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 585
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 585
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.2385470867157
succeed? True
instantReward: 1.6865397264432564e-05
EndTime: 230.1064031124115
----------
mutation rule: TurnConstantVar;
mutate pos: 766
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   766
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 69.47799563407898
succeed? True
instantReward: 1.6865397264432564e-05
EndTime: 300.3289771080017
----------
mutation rule: delIf;
mutate pos: 758
mutate cmd: ./exefile/delIf-mul ./main.c --   758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.25066661834717
succeed? True
instantReward: 1.6865397264432564e-05
EndTime: 349.3192980289459
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 349.8455753326416
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.01075887680054
succeed? True
instantReward: 8.882368539529773e-08
EndTime: 397.6652328968048
----------
mutation rule: delStmt;
mutate pos: 724
mutate cmd: ./exefile/delStmt-mul ./main.c --   724
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 407.96510124206543
----------
mutation rule: addVarDecl;
mutate pos: 758
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   758
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.79781460762024
succeed? True
instantReward: 0.0
EndTime: 457.5887379646301
----------
mutation rule: delStmt;
mutate pos: 754
mutate cmd: ./exefile/delStmt-mul ./main.c --   754
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.07545828819275
succeed? True
instantReward: 1.6880201211998446e-05
EndTime: 506.42858695983887
----------
mutation rule: addIf;
mutate pos: 896
mutate cmd: ./exefile/addIf-mul ./main.c --   896
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 506.91949248313904
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 506.9830422401428
----------
mutation rule: add2If;
mutate pos: 681
mutate cmd: ./exefile/add2If-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.1338107585907
succeed? True
instantReward: 1.6880201211998446e-05
EndTime: 554.9971890449524
----------
mutation rule: repBinaryOp;-,+
mutate pos: 710
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "+" 710
pos_left_this_mutator: [1] ['710']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 54.101611375808716
succeed? True
instantReward: 1.6880201211998446e-05
EndTime: 610.0249807834625
----------
mutation rule: addLoopIf;
mutate pos: 899
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 84.89975762367249
succeed? True
instantReward: 1.6880201211998446e-05
EndTime: 698.9947657585144
----------
mutation rule: addLoopIf;
mutate pos: 837
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 699.4684336185455
----------
mutation rule: repVarSameScope;
mutate pos: 728
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   728
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 700.1228859424591
----------
mutation rule: repBinaryOp;>,!=
mutate pos: 776
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "!=" 776
pos_left_this_mutator: [2] ['745', '776']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 68.27636575698853
succeed? True
instantReward: 1.6880201211998446e-05
EndTime: 769.7043104171753
----------
mutation rule: addGoto;
mutate pos: 758
mutate cmd: ./exefile/addGoto-mul ./main.c --   758 681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 780.0293033123016
----------
mutation rule: addIf;
mutate pos: 837
mutate cmd: ./exefile/addIf-mul ./main.c --   837
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 780.2612953186035
----------
mutation rule: moveStmt;
mutate pos: 841
mutate cmd: ./exefile/moveStmt-mul ./main.c --   841
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 780.287045955658
----------
mutation rule: repVarSameScope;
mutate pos: 732
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   732
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 790.6391365528107
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 791.2266938686371
----------
mutation rule: optOff;
mutate pos: 681
mutate cmd: ./exefile/optOff-mul ./main.c --   681
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.62816286087036
succeed? True
instantReward: 0.0
EndTime: 840.671665430069
----------
mutation rule: addWhile;
mutate pos: 899
mutate cmd: ./exefile/addWhile-mul ./main.c --   899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.57666039466858
succeed? True
instantReward: 3.926225838436022e-07
EndTime: 888.2792432308197
----------
mutation rule: addGoto;
mutate pos: 896
mutate cmd: ./exefile/addGoto-mul ./main.c --   896 899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 898.6213419437408
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 537
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 537
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 908.9645466804504
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.77962255477905
succeed? True
instantReward: 0.0
EndTime: 958.6523654460907
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 958.7368080615997
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 959.2890138626099
----------
mutation rule: repIntConstant;*-1
mutate pos: 749
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 749
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.27683877944946
succeed? True
instantReward: 0.0
EndTime: 1007.4585390090942
----------
mutation rule: addVarDecl;
mutate pos: 753
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   753
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1007.8034348487854
----------
mutation rule: repIntConstant;-1
mutate pos: 903
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 903
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.90090870857239
succeed? True
instantReward: 0.0
EndTime: 1055.5479083061218
----------
mutation rule: repBinaryOp;-,*
mutate pos: 710
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "*" 710
pos_left_this_mutator: [1] ['710']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.542704582214355
succeed? True
instantReward: 1.6915894174166046e-05
EndTime: 1105.888885974884
----------
mutation rule: add2Loop;
mutate pos: 837
mutate cmd: ./exefile/add2Loop-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1106.1064047813416
----------
mutation rule: addIf;
mutate pos: 754
mutate cmd: ./exefile/addIf-mul ./main.c --   754
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1106.6152737140656
----------
mutation rule: repVarSameScope;
mutate pos: 624
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   624
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1106.7937994003296
----------
mutation rule: repIntConstant;-1
mutate pos: 697
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 697
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.99101376533508
succeed? True
instantReward: 6.86986361479432e-08
EndTime: 1154.807938337326
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1154.851320028305
----------
mutation rule: optOff;
mutate pos: 754
mutate cmd: ./exefile/optOff-mul ./main.c --   754
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.05488967895508
succeed? True
instantReward: 0.0
EndTime: 1203.6963348388672
----------
mutation rule: TurnConstantVar;
mutate pos: 676
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   676
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.84951043128967
succeed? True
instantReward: 1.692161906051171e-05
EndTime: 1251.337147951126
----------
mutation rule: repIfCond;1
mutate pos: 841
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 841
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.327513456344604
succeed? True
instantReward: 1.692161906051171e-05
EndTime: 1299.6302683353424
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.20030879974365
succeed? True
instantReward: 0.0
EndTime: 1347.6949908733368
----------
mutation rule: addRepModifier;long
mutate pos: 512
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 512
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.7136332988739
succeed? True
instantReward: 8.017824714784882e-09
EndTime: 1396.2866849899292
----------
mutation rule: addRepModifier;short
mutate pos: 604
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 604
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.622878551483154
succeed? True
instantReward: 1.692219176227705e-05
EndTime: 1444.7053604125977
----------
mutation rule: delStmt;
mutate pos: 758
mutate cmd: ./exefile/delStmt-mul ./main.c --   758
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1444.7649359703064
----------
mutation rule: addVarDecl;
mutate pos: 907
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   907
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.073296308517456
succeed? True
instantReward: 0.0
EndTime: 1493.7071089744568
----------
mutation rule: addQualifier;volatile
mutate pos: 848
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 848
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1494.4480149745941
----------
mutation rule: dupStmt;
mutate pos: 753
mutate cmd: ./exefile/dupStmt-mul ./main.c --   753
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1495.1970763206482
----------
mutation rule: addIf;
mutate pos: 680
mutate cmd: ./exefile/addIf-mul ./main.c --   680
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1495.7762777805328
----------
mutation rule: optOff;
mutate pos: 681
mutate cmd: ./exefile/optOff-mul ./main.c --   681
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1496.486449956894
----------
mutation rule: optOff;
mutate pos: 681
mutate cmd: ./exefile/optOff-mul ./main.c --   681
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1497.1944828033447
----------
mutation rule: disableLoopUnroll;
mutate pos: 681
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1497.5587713718414
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1498.5397868156433
----------
mutation rule: addRepModifier;short
mutate pos: 512
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 512
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1498.673909664154
----------
mutation rule: addLoopIf;
mutate pos: 758
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   758
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.30456519126892
succeed? True
instantReward: 1.692219176227705e-05
EndTime: 1547.1557168960571
----------
mutation rule: repBinaryExpr;
mutate pos: 776
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   776
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.96073293685913
succeed? True
instantReward: 0.0
EndTime: 1595.9886350631714
----------
mutation rule: addRepModifier;unsigned
mutate pos: 604
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 604
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1596.7807326316833
----------
mutation rule: dupStmt;
mutate pos: 662
mutate cmd: ./exefile/dupStmt-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1597.1525831222534
----------
mutation rule: moveStmt;
mutate pos: 628
mutate cmd: ./exefile/moveStmt-mul ./main.c --   628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1607.5564196109772
----------
mutation rule: add2If;
mutate pos: 680
mutate cmd: ./exefile/add2If-mul ./main.c --   680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1608.5160529613495
----------
mutation rule: delStmt;
mutate pos: 685
mutate cmd: ./exefile/delStmt-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.5342333316803
succeed? True
instantReward: 1.692219176227705e-05
EndTime: 1655.8843441009521
----------
mutation rule: delStmt;
mutate pos: 680
mutate cmd: ./exefile/delStmt-mul ./main.c --   680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1666.2738358974457
----------
mutation rule: delIf;
mutate pos: 758
mutate cmd: ./exefile/delIf-mul ./main.c --   758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1666.3459901809692
----------
mutation rule: dupStmt;
mutate pos: 628
mutate cmd: ./exefile/dupStmt-mul ./main.c --   628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1666.7208044528961
----------
mutation rule: addQualifier;volatile
mutate pos: 512
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 512
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.25280451774597
succeed? True
instantReward: 9.181293055416772e-07
EndTime: 1715.8864915370941
----------
mutation rule: optOff;
mutate pos: 561
mutate cmd: ./exefile/optOff-mul ./main.c --   561
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.279792070388794
succeed? True
instantReward: 1.6976199368485383e-05
EndTime: 1763.9498093128204
----------
mutation rule: add2Loop;
mutate pos: 754
mutate cmd: ./exefile/add2Loop-mul ./main.c --   754
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.81445026397705
succeed? True
instantReward: 5.187532274564515e-09
EndTime: 1813.870676279068
----------
mutation rule: add2Loop;
mutate pos: 753
mutate cmd: ./exefile/add2Loop-mul ./main.c --   753
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1814.8396699428558
----------
mutation rule: delStmt;
mutate pos: 885
mutate cmd: ./exefile/delStmt-mul ./main.c --   885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.326287508010864
succeed? True
instantReward: 1.697648756472286e-05
EndTime: 1862.9938113689423
----------
mutation rule: repBinaryOp;>,>=
mutate pos: 745
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" ">=" 745
pos_left_this_mutator: [2] ['745', '776']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.47900724411011
succeed? True
instantReward: 2.1904773347123426e-08
EndTime: 1911.3098933696747
----------
mutation rule: repRemUnaryOp;post--,pre--
mutate pos: 628
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post--" "pre--" 628
pos_left_this_mutator: [1] ['628']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1912.0839402675629
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1922.522271156311
----------
mutation rule: repIntConstant;+1
mutate pos: 617
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1923.3398706912994
----------
mutation rule: disableLoopUnroll;
mutate pos: 754
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1923.7531034946442
----------
mutation rule: repIntConstant;-1
mutate pos: 766
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 766
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1924.5347731113434
----------
mutation rule: repIfCond;1
mutate pos: 899
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 899
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1934.943929195404
----------
mutation rule: delIf;
mutate pos: 758
mutate cmd: ./exefile/delIf-mul ./main.c --   758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1935.0261039733887
----------
mutation rule: moveStmt;
mutate pos: 680
mutate cmd: ./exefile/moveStmt-mul ./main.c --   680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1935.7987260818481
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1935.867389202118
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1936.5088136196136
----------
mutation rule: repBinaryOp;>,<=
mutate pos: 776
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "<=" 776
pos_left_this_mutator: [2] ['745', '776']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1937.544235944748
----------
mutation rule: repBinaryExpr;
mutate pos: 885
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   885
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1938.313422203064
----------
mutation rule: repVarSameScope;
mutate pos: 878
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   878
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.8001012802124
succeed? True
instantReward: 1.69776404475306e-05
EndTime: 1987.9864509105682
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1998.415135383606
----------
mutation rule: optOff;
mutate pos: 754
mutate cmd: ./exefile/optOff-mul ./main.c --   754
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.190176010131836
succeed? True
instantReward: 0.0
EndTime: 2047.540766954422
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2048.284234523773
----------
mutation rule: TurnConstantVar;
mutate pos: 903
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   903
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2049.0526893138885
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2049.1206619739532
----------
mutation rule: repLoopCond;0
mutate pos: 754
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.44668889045715
succeed? True
instantReward: 1.69776404475306e-05
EndTime: 2096.413811445236
----------
mutation rule: addRepModifier;unsigned
mutate pos: 848
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 848
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.63093376159668
succeed? True
instantReward: 0.0
EndTime: 2145.008424758911
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2146.0718162059784
----------
mutation rule: moveStmt;
mutate pos: 753
mutate cmd: ./exefile/moveStmt-mul ./main.c --   753
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2146.8456647396088
----------
mutation rule: delIf;
mutate pos: 758
mutate cmd: ./exefile/delIf-mul ./main.c --   758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2146.9235796928406
----------
mutation rule: repIfCond;1
mutate pos: 841
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 841
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2146.969911336899
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 585
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 585
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2147.047990322113
----------
mutation rule: add2If;
mutate pos: 758
mutate cmd: ./exefile/add2If-mul ./main.c --   758
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2157.684189081192
----------
mutation rule: add2Loop;
mutate pos: 685
mutate cmd: ./exefile/add2Loop-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2168.32248878479
----------
mutation rule: TurnConstantVar;
mutate pos: 903
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   903
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2169.137950181961
----------
mutation rule: delStmt;
mutate pos: 681
mutate cmd: ./exefile/delStmt-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2179.5882592201233
----------
mutation rule: dupStmt;
mutate pos: 685
mutate cmd: ./exefile/dupStmt-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2180.3937726020813
----------
mutation rule: repIntConstant;-1
mutate pos: 697
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 697
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2180.57009100914
----------
mutation rule: repIfCond;!
mutate pos: 758
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2191.0034172534943
----------
mutation rule: repIfCond;1
mutate pos: 685
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 685
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2201.4717803001404
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2202.966418981552
----------
mutation rule: optOff;
mutate pos: 681
mutate cmd: ./exefile/optOff-mul ./main.c --   681
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2203.7239995002747
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 537
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 537
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2214.1629502773285
----------
mutation rule: addVarDecl;
mutate pos: -1
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   -1
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2214.9787516593933
----------
mutation rule: add2If;
mutate pos: 758
mutate cmd: ./exefile/add2If-mul ./main.c --   758
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.333038568496704
succeed? True
instantReward: 1.69776404475306e-05
EndTime: 2263.377424955368
----------
mutation rule: repIfCond;1
mutate pos: 899
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 899
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2273.7963354587555
----------
mutation rule: repBinaryExpr;
mutate pos: 724
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   724
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.224003076553345
succeed? True
instantReward: 0.0
EndTime: 2323.0357990264893
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2323.1034395694733
----------
mutation rule: optOff;
mutate pos: 754
mutate cmd: ./exefile/optOff-mul ./main.c --   754
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2323.868926048279
----------
mutation rule: dupStmt;
mutate pos: 907
mutate cmd: ./exefile/dupStmt-mul ./main.c --   907
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2324.304873228073
----------
mutation rule: delStmt;
mutate pos: 754
mutate cmd: ./exefile/delStmt-mul ./main.c --   754
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2324.3792490959167
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 537
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 537
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2334.8317034244537
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2335.026083946228
----------
mutation rule: moveStmt;
mutate pos: 680
mutate cmd: ./exefile/moveStmt-mul ./main.c --   680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2345.4649930000305
----------
mutation rule: add2Loop;
mutate pos: 680
mutate cmd: ./exefile/add2Loop-mul ./main.c --   680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2346.4484560489655
----------
mutation rule: optOff;
mutate pos: 561
mutate cmd: ./exefile/optOff-mul ./main.c --   561
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.395615577697754
succeed? True
instantReward: 1.69776404475306e-05
EndTime: 2393.572693347931
----------
mutation rule: TurnConstantVar;
mutate pos: 617
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.09782552719116
succeed? True
instantReward: 2.2537126998122188e-06
EndTime: 2442.604656457901
----------
mutation rule: add2If;
mutate pos: 680
mutate cmd: ./exefile/add2If-mul ./main.c --   680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2443.626747608185
----------
mutation rule: add2Loop;
mutate pos: 724
mutate cmd: ./exefile/add2Loop-mul ./main.c --   724
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.36527943611145
succeed? True
instantReward: 1.707562795621809e-05
EndTime: 2494.0756464004517
----------
mutation rule: dupStmt;
mutate pos: 896
mutate cmd: ./exefile/dupStmt-mul ./main.c --   896
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2494.4944972991943
----------
mutation rule: add2Loop;
mutate pos: 841
mutate cmd: ./exefile/add2Loop-mul ./main.c --   841
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2505.154846429825
----------
mutation rule: addGoto;
mutate pos: 662
mutate cmd: ./exefile/addGoto-mul ./main.c --   662 680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2515.6186003684998
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2526.077561378479
----------
mutation rule: add2If;
mutate pos: 628
mutate cmd: ./exefile/add2If-mul ./main.c --   628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2536.723751783371
----------
mutation rule: repLoopCond;!
mutate pos: 681
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "!" 681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.199217081069946
succeed? True
instantReward: 1.707562795621809e-05
EndTime: 2585.8587720394135
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 537
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 537
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2596.334212064743
----------
mutation rule: delIf;
mutate pos: 758
mutate cmd: ./exefile/delIf-mul ./main.c --   758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2596.4336426258087
----------
mutation rule: addQualifier;volatile
mutate pos: 848
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 848
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.70815443992615
succeed? True
instantReward: 3.5748101730127737e-07
EndTime: 2644.1489794254303
----------
mutation rule: addGoto;
mutate pos: 841
mutate cmd: ./exefile/addGoto-mul ./main.c --   841 899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.920064210891724
succeed? True
instantReward: 1.708992719691014e-05
EndTime: 2693.9556300640106
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2694.134104013443
----------
mutation rule: repIfCond;0
mutate pos: 758
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.54539203643799
succeed? True
instantReward: 1.708992719691014e-05
EndTime: 2742.5471909046173
----------
mutation rule: repLoopCond;1
mutate pos: 681
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2742.566514492035
----------
mutation rule: addLoopIf;
mutate pos: 899
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.57872986793518
succeed? True
instantReward: 0.0
EndTime: 2792.4196405410767
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2793.066648721695
----------
mutation rule: addGoto;
mutate pos: 837
mutate cmd: ./exefile/addGoto-mul ./main.c --   837 685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2793.092494726181
----------
mutation rule: repBinaryExpr;
mutate pos: 648
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   648
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.305009603500366
succeed? True
instantReward: 0.0
EndTime: 2841.342751979828
----------
mutation rule: add2If;
mutate pos: 753
mutate cmd: ./exefile/add2If-mul ./main.c --   753
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2841.986599445343
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.67328071594238
succeed? True
instantReward: 0.0
EndTime: 2890.8712780475616
----------
mutation rule: disableLoopUnroll;
mutate pos: 754
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2891.3232233524323
----------
mutation rule: addWhile;
mutate pos: 681
mutate cmd: ./exefile/addWhile-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.99468421936035
succeed? True
instantReward: 3.417985439382028e-05
EndTime: 2941.4376361370087
----------
mutation rule: addLoopIf;
mutate pos: 662
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2952.283050060272
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2952.9865307807922
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2953.727553844452
----------
mutation rule: addQualifier;volatile
mutate pos: 848
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 848
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2953.9085142612457
----------
mutation rule: add2Loop;
mutate pos: 885
mutate cmd: ./exefile/add2Loop-mul ./main.c --   885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.491567850112915
succeed? True
instantReward: 0.0
EndTime: 3001.696760892868
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3001.9003472328186
----------
mutation rule: addGoto;
mutate pos: 681
mutate cmd: ./exefile/addGoto-mul ./main.c --   681 754
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3012.7641599178314
----------
mutation rule: delIf;
mutate pos: 685
mutate cmd: ./exefile/delIf-mul ./main.c --   685
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3012.8795449733734
----------
mutation rule: disableLoopUnroll;
mutate pos: 754
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3013.3225383758545
----------
mutation rule: repLoopCond;!
mutate pos: 754
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "!" 754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.956502199172974
succeed? True
instantReward: 1.708992719691014e-05
EndTime: 3061.1522891521454
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3071.6854255199432
----------
mutation rule: addQualifier;volatile
mutate pos: 585
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 585
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.94047999382019
succeed? True
instantReward: 3.417985439382028e-05
EndTime: 3120.560780286789
----------
mutation rule: repRemUnaryOp;post--,delete
mutate pos: 628
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post--" "delete" 628
pos_left_this_mutator: [1] ['628']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3131.033233642578
----------
mutation rule: add2Loop;
mutate pos: 837
mutate cmd: ./exefile/add2Loop-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3131.252450942993
----------
mutation rule: addRepModifier;unsigned
mutate pos: 604
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 604
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.8474223613739
succeed? True
instantReward: 6.257917059727383e-06
EndTime: 3179.083790540695
----------
mutation rule: repIfCond;!
mutate pos: 841
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 841
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.99170637130737
succeed? True
instantReward: -4.09219412828188e-05
EndTime: 3228.092479467392
----------
mutation rule: addGoto;
mutate pos: 628
mutate cmd: ./exefile/addGoto-mul ./main.c --   628 754
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3238.572636604309
----------
mutation rule: moveStmt;
mutate pos: 899
mutate cmd: ./exefile/moveStmt-mul ./main.c --   899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3239.067253112793
----------
mutation rule: addVarDecl;
mutate pos: 681
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   681
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3239.5358922481537
----------
mutation rule: addRepModifier;unsigned
mutate pos: 848
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 848
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3239.754432439804
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 537
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 537
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3250.2718691825867
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3250.3729450702667
----------
mutation rule: addVarDecl;
mutate pos: 598
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   598
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.06391382217407
succeed? True
instantReward: 0.0
EndTime: 3300.428423166275
----------
mutation rule: addVarDecl;
mutate pos: 621
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   621
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.03062152862549
succeed? True
instantReward: 0.0
EndTime: 3349.443828344345
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 50.39521384239197
succeed? True
instantReward: 0.0
EndTime: 3401.039982318878
----------
mutation rule: addIf;
mutate pos: 837
mutate cmd: ./exefile/addIf-mul ./main.c --   837
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3401.2564713954926
----------
mutation rule: add2If;
mutate pos: 758
mutate cmd: ./exefile/add2If-mul ./main.c --   758
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.3499698638916
succeed? True
instantReward: 1.7662539519932176e-05
EndTime: 3448.7148790359497
----------
mutation rule: delStmt;
mutate pos: 885
mutate cmd: ./exefile/delStmt-mul ./main.c --   885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3448.8003821372986
----------
mutation rule: optOff;
mutate pos: 754
mutate cmd: ./exefile/optOff-mul ./main.c --   754
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 79.94974303245544
succeed? True
instantReward: 0.0
EndTime: 3529.6941022872925
----------
mutation rule: addRepModifier;short
mutate pos: 848
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 848
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 52.34178566932678
succeed? True
instantReward: 0.0
EndTime: 3582.984734773636
----------
mutation rule: addVarDecl;
mutate pos: 896
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   896
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3583.4622807502747
----------
mutation rule: optOff;
mutate pos: 681
mutate cmd: ./exefile/optOff-mul ./main.c --   681
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3584.2733500003815
----------
mutation rule: TurnConstantVar;
mutate pos: 617
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3584.4640004634857
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3584.709020614624
----------
mutation rule: addIf;
mutate pos: 896
mutate cmd: ./exefile/addIf-mul ./main.c --   896
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3585.3748109340668
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3595.890422821045
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 537
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 537
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3606.4374644756317
