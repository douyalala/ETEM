----------
mutation rule: disableLoopVect;
mutate pos: 1045
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 10.580498218536377
----------
mutation rule: addQualifier;restrict
mutate pos: 766
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 766
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 10.837865114212036
----------
mutation rule: repIfCond;0
mutate pos: 938
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 938
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 21.398714780807495
----------
mutation rule: disableLoopUnroll;
mutate pos: 846
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 21.66952419281006
----------
mutation rule: repBinaryExpr;
mutate pos: 1083
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1083
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 32.360949993133545
----------
mutation rule: repIntConstant;*-1
mutate pos: 954
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 954
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 178.17081999778748
succeed? True
instantReward: 1.2802130274477673e-05
EndTime: 211.3118679523468
----------
mutation rule: add2If;
mutate pos: 1049
mutate cmd: ./exefile/add2If-mul ./main.c --   1049
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.990177631378174
succeed? True
instantReward: 1.2802130274477673e-05
EndTime: 262.3360571861267
----------
mutation rule: addLoopIf;
mutate pos: 1045
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1045
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.38239598274231
succeed? True
instantReward: 1.2802130274477673e-05
EndTime: 310.8949806690216
----------
mutation rule: moveStmt;
mutate pos: 1057
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1057
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 310.9186019897461
----------
mutation rule: repBinaryOp;!=,<
mutate pos: 1166
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "!=" "<" 1166
pos_left_this_mutator: [1] ['1166']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.51061177253723
succeed? True
instantReward: 4.8385435934183356e-08
EndTime: 371.175493478775
----------
mutation rule: addInline;
mutate pos: 593
mutate cmd: ./exefile/addInline-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 371.1968333721161
----------
mutation rule: repIntConstant;*0
mutate pos: 1235
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 1235
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 371.2157919406891
----------
mutation rule: dupStmt;
mutate pos: 1231
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1231
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 371.2413377761841
----------
mutation rule: addWhile;
mutate pos: 842
mutate cmd: ./exefile/addWhile-mul ./main.c --   842
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 381.7463035583496
----------
mutation rule: repIntConstant;+1
mutate pos: 799
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 799
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.20700740814209
succeed? True
instantReward: 1.281180736166451e-05
EndTime: 429.7349681854248
----------
mutation rule: repLoopCond;1
mutate pos: 942
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.916165351867676
succeed? True
instantReward: 2.699476100552031e-06
EndTime: 488.40651988983154
----------
mutation rule: delLoop;
mutate pos: 1045
mutate cmd: ./exefile/delLoop-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 488.6818428039551
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.8213632106781
succeed? True
instantReward: 2.111038542694651e-08
EndTime: 547.3120229244232
----------
mutation rule: addGoto;
mutate pos: 1239
mutate cmd: ./exefile/addGoto-mul ./main.c --   1239 1061
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 547.6393308639526
----------
mutation rule: dupStmt;
mutate pos: 1151
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1151
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 547.9167833328247
----------
mutation rule: addRepModifier;short
mutate pos: 786
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 786
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.274545669555664
succeed? True
instantReward: 1.3265238442661008e-05
EndTime: 595.9702937602997
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.600523948669434
succeed? True
instantReward: 3.695444632619742e-09
EndTime: 654.6006026268005
----------
mutation rule: addGoto;
mutate pos: 927
mutate cmd: ./exefile/addGoto-mul ./main.c --   927 1057
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 654.6200425624847
----------
mutation rule: addIf;
mutate pos: 942
mutate cmd: ./exefile/addIf-mul ./main.c --   942
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 655.1091167926788
----------
mutation rule: delStmt;
mutate pos: 1057
mutate cmd: ./exefile/delStmt-mul ./main.c --   1057
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 655.129426240921
----------
mutation rule: addLoopIf;
mutate pos: 942
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   942
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.96875977516174
succeed? True
instantReward: 0.0
EndTime: 714.1938419342041
----------
mutation rule: repVarSameScope;
mutate pos: 972
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   972
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 724.9809579849243
----------
mutation rule: moveStmt;
mutate pos: 1049
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1049
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 725.0053179264069
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 735.6084384918213
----------
mutation rule: repIfCond;!
mutate pos: 1057
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 1057
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 746.4001545906067
----------
mutation rule: delLoop;
mutate pos: 1061
mutate cmd: ./exefile/delLoop-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 746.4250102043152
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 746.4472117424011
----------
mutation rule: optOff;
mutate pos: 942
mutate cmd: ./exefile/optOff-mul ./main.c --   942
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 757.0117530822754
----------
mutation rule: addLoopIf;
mutate pos: 938
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   938
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 768.0435974597931
----------
mutation rule: addRepModifier;unsigned
mutate pos: 713
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 713
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 778.6512756347656
----------
mutation rule: disableLoopVect;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 789.2627575397491
----------
mutation rule: repLoopCond;0
mutate pos: 942
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 799.8487396240234
----------
mutation rule: addVarDecl;
mutate pos: -1
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   -1
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 810.9825327396393
----------
mutation rule: repBinaryOp;!=,>
mutate pos: 1166
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "!=" ">" 1166
pos_left_this_mutator: [1] ['1166']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 821.5829381942749
----------
mutation rule: delIf;
mutate pos: 1057
mutate cmd: ./exefile/delIf-mul ./main.c --   1057
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 821.6031687259674
----------
mutation rule: disableLoopVect;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 832.1785988807678
----------
mutation rule: addGoto;
mutate pos: 1083
mutate cmd: ./exefile/addGoto-mul ./main.c --   1083 1057
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 842.4983053207397
----------
mutation rule: TurnConstantVar;
mutate pos: 1159
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   1159
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 853.0939724445343
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 853.1165418624878
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 863.9656357765198
----------
mutation rule: delLoop;
mutate pos: 846
mutate cmd: ./exefile/delLoop-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 864.2706096172333
----------
mutation rule: repBinaryExpr;
mutate pos: 1166
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1166
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 874.8691334724426
----------
mutation rule: repIfCond;1
mutate pos: 1094
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1094
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 885.1873595714569
----------
mutation rule: addLoopIf;
mutate pos: 842
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   842
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 895.9147560596466
----------
mutation rule: addLoopIf;
mutate pos: 1239
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1239
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 896.6043856143951
----------
mutation rule: disableLoopVect;
mutate pos: 846
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 907.1950371265411
----------
mutation rule: addVarDecl;
mutate pos: 1151
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1151
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 917.7919034957886
----------
mutation rule: repLoopCond;0
mutate pos: 1045
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.93233299255371
succeed? True
instantReward: 1.3265766363322809e-05
EndTime: 966.5279886722565
----------
mutation rule: addQualifier;const
mutate pos: 693
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 693
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 966.8706035614014
----------
mutation rule: addIf;
mutate pos: 1044
mutate cmd: ./exefile/addIf-mul ./main.c --   1044
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 967.403244972229
----------
mutation rule: add2Loop;
mutate pos: 846
mutate cmd: ./exefile/add2Loop-mul ./main.c --   846
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 977.9314312934875
----------
mutation rule: addQualifier;const
mutate pos: 713
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 713
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 978.2371325492859
----------
mutation rule: moveStmt;
mutate pos: 927
mutate cmd: ./exefile/moveStmt-mul ./main.c --   927
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 978.2602071762085
----------
mutation rule: repBinaryOp;<,!=
mutate pos: 983
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "<" "!=" 983
pos_left_this_mutator: [3] ['820', '983', '961']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.20549821853638
succeed? True
instantReward: 1.9713483609651002e-08
EndTime: 1038.4133937358856
----------
mutation rule: addFuncArg;
mutate pos: 593
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1038.4330780506134
----------
mutation rule: disableLoopUnroll;
mutate pos: 942
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1038.7337124347687
----------
mutation rule: disableLoopUnroll;
mutate pos: 846
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1039.0440378189087
----------
mutation rule: optOff;
mutate pos: 742
mutate cmd: ./exefile/optOff-mul ./main.c --   742
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.10039567947388
succeed? True
instantReward: 1.3268230548774015e-05
EndTime: 1086.8939785957336
----------
mutation rule: addVarDecl;
mutate pos: 842
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   842
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1087.1943726539612
----------
mutation rule: delStmt;
mutate pos: 1049
mutate cmd: ./exefile/delStmt-mul ./main.c --   1049
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.00775742530823
succeed? True
instantReward: 1.3268230548774015e-05
EndTime: 1137.002566576004
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.50578260421753
succeed? True
instantReward: 5.281588488851826e-09
EndTime: 1196.2991707324982
----------
mutation rule: delIf;
mutate pos: 1231
mutate cmd: ./exefile/delIf-mul ./main.c --   1231
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1196.3240630626678
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1196.3949902057648
----------
mutation rule: delIf;
mutate pos: 938
mutate cmd: ./exefile/delIf-mul ./main.c --   938
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1196.4163801670074
----------
mutation rule: addRepModifier;unsigned
mutate pos: 661
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 661
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.769444704055786
succeed? True
instantReward: 6.035604666966609e-06
EndTime: 1256.9424560070038
----------
mutation rule: repRemUnaryOp;post++,delete
mutate pos: 828
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "delete" 828
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1267.2834904193878
----------
mutation rule: add2If;
mutate pos: 927
mutate cmd: ./exefile/add2If-mul ./main.c --   927
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1267.520567893982
----------
mutation rule: addQualifier;volatile
mutate pos: 693
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 693
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1278.114424943924
----------
mutation rule: delLoop;
mutate pos: 846
mutate cmd: ./exefile/delLoop-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1278.4362318515778
----------
mutation rule: addIf;
mutate pos: 1044
mutate cmd: ./exefile/addIf-mul ./main.c --   1044
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1278.9886360168457
----------
mutation rule: delLoop;
mutate pos: 942
mutate cmd: ./exefile/delLoop-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1279.013976097107
----------
mutation rule: repLoopVar;1
mutate pos: 846
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "1" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1279.1286180019379
----------
mutation rule: repLoopVar;2
mutate pos: 942
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "2" 942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1279.2396190166473
----------
mutation rule: addVarDecl;
mutate pos: 1094
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1094
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1289.8512825965881
----------
mutation rule: delStmt;
mutate pos: 1227
mutate cmd: ./exefile/delStmt-mul ./main.c --   1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1289.8766086101532
----------
mutation rule: dupStmt;
mutate pos: 1014
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1014
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1289.9001832008362
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1289.9249992370605
----------
mutation rule: delStmt;
mutate pos: 1083
mutate cmd: ./exefile/delStmt-mul ./main.c --   1083
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1300.26251578331
----------
mutation rule: addLoopIf;
mutate pos: 938
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   938
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1311.2602982521057
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1311.2860894203186
----------
mutation rule: delIf;
mutate pos: 1057
mutate cmd: ./exefile/delIf-mul ./main.c --   1057
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1311.3120727539062
----------
mutation rule: disableLoopVect;
mutate pos: 846
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1321.9243626594543
----------
mutation rule: optOff;
mutate pos: 1117
mutate cmd: ./exefile/optOff-mul ./main.c --   1117
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.04904794692993
succeed? True
instantReward: 1.3872319174319563e-05
EndTime: 1371.8547966480255
----------
mutation rule: disableLoopUnroll;
mutate pos: 846
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1372.1709072589874
----------
mutation rule: repBinaryOp;!=,<
mutate pos: 1166
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "!=" "<" 1166
pos_left_this_mutator: [1] ['1166']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1372.253045797348
----------
mutation rule: addGoto;
mutate pos: 938
mutate cmd: ./exefile/addGoto-mul ./main.c --   938 1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1372.2766902446747
----------
mutation rule: repBinaryOp;!=,<=
mutate pos: 1166
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "!=" "<=" 1166
pos_left_this_mutator: [1] ['1166']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.435710191726685
succeed? True
instantReward: 0.0
EndTime: 1432.575782775879
----------
mutation rule: repVarSameScope;
mutate pos: 972
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   972
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1443.3475859165192
----------
mutation rule: delStmt;
mutate pos: 1014
mutate cmd: ./exefile/delStmt-mul ./main.c --   1014
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1443.3686623573303
----------
mutation rule: addGoto;
mutate pos: 1061
mutate cmd: ./exefile/addGoto-mul ./main.c --   1061 942
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1453.7169966697693
----------
mutation rule: add2If;
mutate pos: 1094
mutate cmd: ./exefile/add2If-mul ./main.c --   1094
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1464.6539046764374
----------
mutation rule: repLoopCond;0
mutate pos: 1061
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.14702796936035
succeed? True
instantReward: 1.3872319174319563e-05
EndTime: 1512.5464720726013
----------
mutation rule: optOff;
mutate pos: 1117
mutate cmd: ./exefile/optOff-mul ./main.c --   1117
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.188385009765625
succeed? True
instantReward: 1.3872319174319563e-05
EndTime: 1561.4846675395966
----------
mutation rule: repIntConstant;*0
mutate pos: 1235
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 1235
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1561.5072493553162
----------
mutation rule: repIfCond;1
mutate pos: 1057
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1057
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1572.0557079315186
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1572.1428985595703
----------
mutation rule: addRepModifier;short
mutate pos: 693
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 693
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.977238178253174
succeed? True
instantReward: 3.05729228648635e-07
EndTime: 1631.8422708511353
----------
mutation rule: add2If;
mutate pos: 846
mutate cmd: ./exefile/add2If-mul ./main.c --   846
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.305843353271484
succeed? True
instantReward: 9.690977555463034e-07
EndTime: 1691.1592309474945
----------
mutation rule: addRepModifier;unsigned
mutate pos: 856
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 856
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1701.7827022075653
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1702.362532377243
----------
mutation rule: repVarSameScope;
mutate pos: 897
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   897
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1702.3889453411102
----------
mutation rule: delStmt;
mutate pos: 938
mutate cmd: ./exefile/delStmt-mul ./main.c --   938
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1702.4124763011932
----------
mutation rule: repBinaryExpr;
mutate pos: 1083
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1083
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1713.050048828125
----------
mutation rule: moveStmt;
mutate pos: 946
mutate cmd: ./exefile/moveStmt-mul ./main.c --   946
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1723.7195279598236
----------
mutation rule: delStmt;
mutate pos: 1057
mutate cmd: ./exefile/delStmt-mul ./main.c --   1057
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1723.7473447322845
----------
mutation rule: addIf;
mutate pos: 927
mutate cmd: ./exefile/addIf-mul ./main.c --   927
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1723.9741411209106
----------
mutation rule: repIntConstant;-1
mutate pos: 706
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 706
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1734.6252686977386
----------
mutation rule: repIfCond;!
mutate pos: 938
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 938
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1745.2636845111847
----------
mutation rule: TurnConstantVar;
mutate pos: 869
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   869
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.9609649181366
succeed? True
instantReward: 1.3970382788488405e-05
EndTime: 1795.0623400211334
----------
mutation rule: repIfCond;0
mutate pos: 946
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 946
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.93831658363342
succeed? True
instantReward: 1.4395646140044193e-06
EndTime: 1853.8530731201172
----------
mutation rule: addGoto;
mutate pos: 938
mutate cmd: ./exefile/addGoto-mul ./main.c --   938 1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1853.8737268447876
----------
mutation rule: repRemUnaryOp;post++,delete
mutate pos: 969
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "delete" 969
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1864.2456078529358
----------
mutation rule: add2If;
mutate pos: 1044
mutate cmd: ./exefile/add2If-mul ./main.c --   1044
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 50.195194482803345
succeed? True
instantReward: 1.4073208832345863e-05
EndTime: 1915.4870166778564
----------
mutation rule: addVarDecl;
mutate pos: 942
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   942
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1915.8384964466095
----------
mutation rule: repLoopVar;1
mutate pos: 1061
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "1" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1915.9492256641388
----------
mutation rule: repVarSameScope;
mutate pos: 1037
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1037
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.70554184913635
succeed? True
instantReward: 1.4073208832345863e-05
EndTime: 1964.5185449123383
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1964.607182264328
----------
mutation rule: addQualifier;const
mutate pos: 693
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 693
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1964.9833557605743
----------
mutation rule: moveStmt;
mutate pos: 846
mutate cmd: ./exefile/moveStmt-mul ./main.c --   846
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1965.4375259876251
----------
mutation rule: addRepModifier;unsigned
mutate pos: 636
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 636
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1965.571718454361
----------
mutation rule: delStmt;
mutate pos: 842
mutate cmd: ./exefile/delStmt-mul ./main.c --   842
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1965.9276971817017
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.78668570518494
succeed? True
instantReward: 3.8408892944939103e-07
EndTime: 2026.4847741127014
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2026.5802474021912
----------
mutation rule: repLoopCond;1
mutate pos: 1045
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.406235218048096
succeed? True
instantReward: 1.409721439043645e-05
EndTime: 2074.830706357956
----------
mutation rule: delIf;
mutate pos: 938
mutate cmd: ./exefile/delIf-mul ./main.c --   938
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2074.852601289749
----------
mutation rule: repLoopCond;0
mutate pos: 1061
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2074.932260990143
----------
mutation rule: repBinaryExpr;
mutate pos: 1166
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1166
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.49255895614624
succeed? True
instantReward: 0.0
EndTime: 2134.1799030303955
----------
mutation rule: addWhile;
mutate pos: 938
mutate cmd: ./exefile/addWhile-mul ./main.c --   938
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.96245718002319
succeed? True
instantReward: 1.409721439043645e-05
EndTime: 2183.2090623378754
----------
mutation rule: TurnConstantVar;
mutate pos: 1159
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   1159
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.79151964187622
succeed? True
instantReward: 0.0
EndTime: 2242.812469482422
----------
mutation rule: repBinaryExpr;
mutate pos: 820
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   820
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.55796766281128
succeed? True
instantReward: 0.0
EndTime: 2301.2210817337036
----------
mutation rule: TurnConstantVar;
mutate pos: 1159
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   1159
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2301.3190734386444
----------
mutation rule: repRemUnaryOp;post++,delete
mutate pos: 969
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "delete" 969
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2311.7191338539124
----------
mutation rule: addLoopIf;
mutate pos: 842
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   842
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2322.7867720127106
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2322.8084845542908
----------
mutation rule: delIf;
mutate pos: 1049
mutate cmd: ./exefile/delIf-mul ./main.c --   1049
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2322.840480566025
----------
mutation rule: addQualifier;const
mutate pos: 636
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 636
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2323.2002012729645
----------
mutation rule: addVarDecl;
mutate pos: 1239
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1239
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2333.8628408908844
----------
mutation rule: TurnConstantVar;
mutate pos: 954
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   954
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.471182107925415
succeed? True
instantReward: 1.409721439043645e-05
EndTime: 2383.2164463996887
----------
mutation rule: addVarDecl;
mutate pos: 1049
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1049
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.95216393470764
succeed? True
instantReward: 0.0
EndTime: 2442.003408908844
----------
mutation rule: addIf;
mutate pos: 938
mutate cmd: ./exefile/addIf-mul ./main.c --   938
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2442.564309835434
----------
mutation rule: repRemUnaryOp;post++,~
mutate pos: 828
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "~" 828
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2452.9788932800293
----------
mutation rule: repBinaryOp;!=,>
mutate pos: 1166
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "!=" ">" 1166
pos_left_this_mutator: [1] ['1166']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2463.639160633087
----------
mutation rule: repIfCond;!
mutate pos: 1231
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 1231
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2474.4009211063385
----------
mutation rule: delIf;
mutate pos: 938
mutate cmd: ./exefile/delIf-mul ./main.c --   938
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2474.4206051826477
----------
mutation rule: addIf;
mutate pos: 942
mutate cmd: ./exefile/addIf-mul ./main.c --   942
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2474.990251302719
----------
mutation rule: delIf;
mutate pos: 1049
mutate cmd: ./exefile/delIf-mul ./main.c --   1049
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2475.035279273987
----------
mutation rule: addIf;
mutate pos: 1045
mutate cmd: ./exefile/addIf-mul ./main.c --   1045
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2475.627013683319
----------
mutation rule: addVarDecl;
mutate pos: 1094
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1094
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2486.357761621475
----------
mutation rule: repIfCond;!
mutate pos: 946
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 946
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2497.020995616913
----------
mutation rule: repLoopCond;0
mutate pos: 1061
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2497.112080335617
----------
mutation rule: repLoopVar;2
mutate pos: 1045
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "2" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2497.2246289253235
----------
mutation rule: delLoop;
mutate pos: 1061
mutate cmd: ./exefile/delLoop-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2497.2477991580963
----------
mutation rule: delStmt;
mutate pos: 1061
mutate cmd: ./exefile/delStmt-mul ./main.c --   1061
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2497.2693576812744
----------
mutation rule: TurnConstantVar;
mutate pos: 1159
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   1159
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2497.3750483989716
----------
mutation rule: addVarDecl;
mutate pos: 1231
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1231
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2508.0666394233704
----------
mutation rule: repVarSameScope;
mutate pos: 1138
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1138
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2508.4606297016144
----------
mutation rule: addFuncArg;
mutate pos: 593
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2508.4802300930023
----------
mutation rule: addGoto;
mutate pos: 938
mutate cmd: ./exefile/addGoto-mul ./main.c --   938 938
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2508.839082956314
----------
mutation rule: delIf;
mutate pos: 1094
mutate cmd: ./exefile/delIf-mul ./main.c --   1094
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2519.604062318802
----------
mutation rule: add2If;
mutate pos: 1227
mutate cmd: ./exefile/add2If-mul ./main.c --   1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2519.8268847465515
----------
mutation rule: add2If;
mutate pos: 1083
mutate cmd: ./exefile/add2If-mul ./main.c --   1083
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.44332766532898
succeed? True
instantReward: 1.409721439043645e-05
EndTime: 2569.370266675949
----------
mutation rule: repRemUnaryOp;post++,pre++
mutate pos: 828
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "pre++" 828
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.463905811309814
succeed? True
instantReward: 0.0
EndTime: 2628.6795539855957
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2629.046908378601
----------
mutation rule: optOff;
mutate pos: 1061
mutate cmd: ./exefile/optOff-mul ./main.c --   1061
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2639.7145533561707
----------
mutation rule: delIf;
mutate pos: 1231
mutate cmd: ./exefile/delIf-mul ./main.c --   1231
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2639.7339684963226
----------
mutation rule: dupStmt;
mutate pos: 1094
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1094
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2650.421669483185
----------
mutation rule: addRepModifier;signed
mutate pos: 693
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 693
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2661.102768421173
----------
mutation rule: TurnConstantVar;
mutate pos: 1079
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   1079
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2671.801144361496
----------
mutation rule: repBinaryExpr;
mutate pos: 961
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   961
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2682.4936084747314
----------
mutation rule: optOff;
mutate pos: 846
mutate cmd: ./exefile/optOff-mul ./main.c --   846
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2693.159885406494
----------
mutation rule: dupStmt;
mutate pos: 1045
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1045
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 50.13130784034729
succeed? True
instantReward: 0.0
EndTime: 2744.1902062892914
----------
mutation rule: moveStmt;
mutate pos: 938
mutate cmd: ./exefile/moveStmt-mul ./main.c --   938
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2744.213103532791
----------
mutation rule: disableLoopVect;
mutate pos: 942
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.46591305732727
succeed? True
instantReward: 0.0
EndTime: 2803.544570684433
----------
mutation rule: repVarSameScope;
mutate pos: 824
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   824
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2813.9666023254395
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2814.50789475441
----------
mutation rule: addLoopIf;
mutate pos: 942
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   942
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2826.6878311634064
----------
mutation rule: repVarSameScope;
mutate pos: 890
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   890
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2837.396063566208
----------
mutation rule: disableLoopVect;
mutate pos: 846
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2848.1162276268005
----------
mutation rule: repBinaryOp;!=,>=
mutate pos: 1166
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "!=" ">=" 1166
pos_left_this_mutator: [1] ['1166']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2858.9352571964264
----------
mutation rule: disableLoopVect;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2869.617091655731
----------
mutation rule: repBinaryExpr;
mutate pos: 983
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   983
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2880.294855117798
----------
mutation rule: repIntConstant;*0
mutate pos: 954
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 954
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 80.61916446685791
succeed? True
instantReward: 1.409721439043645e-05
EndTime: 2961.79842209816
----------
mutation rule: disableLoopUnroll;
mutate pos: 846
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2962.2513823509216
----------
mutation rule: addWhile;
mutate pos: 1049
mutate cmd: ./exefile/addWhile-mul ./main.c --   1049
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 53.79253911972046
succeed? True
instantReward: 2.81944287808729e-05
EndTime: 3017.1580152511597
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3017.18062210083
----------
mutation rule: repLoopCond;0
mutate pos: 1045
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3017.236031770706
----------
mutation rule: add2If;
mutate pos: 1014
mutate cmd: ./exefile/add2If-mul ./main.c --   1014
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3017.458911418915
----------
mutation rule: repVarSameScope;
mutate pos: 965
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   965
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3027.8927762508392
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3029.066655397415
----------
mutation rule: repLoopCond;0
mutate pos: 846
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 81.52353620529175
succeed? True
instantReward: 2.9705790068733514e-06
EndTime: 3121.537994623184
----------
mutation rule: repLoopVar;0
mutate pos: 846
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "0" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3121.6469807624817
----------
mutation rule: disableLoopUnroll;
mutate pos: 942
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3122.048530101776
----------
mutation rule: addQualifier;volatile
mutate pos: 786
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 786
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.3764009475708
succeed? True
instantReward: 1.4226369999430946e-05
EndTime: 3172.2508704662323
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3172.3815200328827
----------
mutation rule: delStmt;
mutate pos: 1151
mutate cmd: ./exefile/delStmt-mul ./main.c --   1151
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 51.10321569442749
succeed? True
instantReward: 1.4226369999430946e-05
EndTime: 3224.8711335659027
----------
mutation rule: addGoto;
mutate pos: 942
mutate cmd: ./exefile/addGoto-mul ./main.c --   942 1049
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 51.5243501663208
succeed? True
instantReward: 1.4226369999430946e-05
EndTime: 3277.2262721061707
----------
mutation rule: add2Loop;
mutate pos: 942
mutate cmd: ./exefile/add2Loop-mul ./main.c --   942
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 64.20298910140991
succeed? True
instantReward: 0.0
EndTime: 3352.7609071731567
----------
mutation rule: addVarDecl;
mutate pos: 1239
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1239
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.30396509170532
succeed? True
instantReward: 0.0
EndTime: 3412.8779635429382
----------
mutation rule: repBinaryOp;<,>=
mutate pos: 961
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "<" ">=" 961
pos_left_this_mutator: [3] ['820', '983', '961']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.1762752532959
succeed? True
instantReward: 1.4226369999430946e-05
EndTime: 3461.0136857032776
----------
mutation rule: TurnConstantVar;
mutate pos: 954
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   954
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3461.0679886341095
----------
mutation rule: addGoto;
mutate pos: 842
mutate cmd: ./exefile/addGoto-mul ./main.c --   842 1049
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 52.681535482406616
succeed? True
instantReward: 1.4226369999430946e-05
EndTime: 3514.910930633545
----------
mutation rule: addLoopIf;
mutate pos: 1061
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1061
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.62554574012756
succeed? True
instantReward: 1.4226369999430946e-05
EndTime: 3578.682407617569
----------
mutation rule: optOff;
mutate pos: 1061
mutate cmd: ./exefile/optOff-mul ./main.c --   1061
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 50.83702540397644
succeed? True
instantReward: 0.0
EndTime: 3640.466996908188
