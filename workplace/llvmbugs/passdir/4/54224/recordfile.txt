----------
mutation rule: add2If;
mutate pos: 837
mutate cmd: ./exefile/add2If-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 0.3634798526763916
----------
mutation rule: TurnConstantVar;
mutate pos: 617
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1.9507238864898682
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 585
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 585
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 73.53027248382568
succeed? True
instantReward: 1.6851187166135853e-05
EndTime: 76.41804528236389
----------
mutation rule: add2Loop;
mutate pos: 753
mutate cmd: ./exefile/add2Loop-mul ./main.c --   753
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 72.02829909324646
succeed? True
instantReward: 7.668150697497567e-09
EndTime: 149.47422122955322
----------
mutation rule: addVarDecl;
mutate pos: 841
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   841
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 150.14412140846252
----------
mutation rule: TurnConstantVar;
mutate pos: 766
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   766
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 61.79280495643616
succeed? True
instantReward: 1.6853743216368354e-05
EndTime: 212.69082021713257
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 223.05783939361572
----------
mutation rule: repIntConstant;+1
mutate pos: 676
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 676
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.23086619377136
succeed? True
instantReward: 0.0
EndTime: 270.12383675575256
----------
mutation rule: addLoopIf;
mutate pos: 841
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   841
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.624109506607056
succeed? True
instantReward: 1.6853743216368354e-05
EndTime: 318.85642981529236
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 319.38412070274353
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 45.91734004020691
succeed? True
instantReward: 2.8405823529275382e-09
EndTime: 366.1157691478729
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 366.77760314941406
----------
mutation rule: repLoopCond;0
mutate pos: 754
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.08704590797424
succeed? True
instantReward: 1.685431133283894e-05
EndTime: 413.6281635761261
----------
mutation rule: optOff;
mutate pos: 681
mutate cmd: ./exefile/optOff-mul ./main.c --   681
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 45.716490030288696
succeed? True
instantReward: 0.0
EndTime: 460.1937930583954
----------
mutation rule: delIf;
mutate pos: 758
mutate cmd: ./exefile/delIf-mul ./main.c --   758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.36028599739075
succeed? True
instantReward: 1.685431133283894e-05
EndTime: 509.3211953639984
----------
mutation rule: delIf;
mutate pos: 841
mutate cmd: ./exefile/delIf-mul ./main.c --   841
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 509.34248423576355
----------
mutation rule: addVarDecl;
mutate pos: 885
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   885
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.115482330322266
succeed? True
instantReward: 0.0
EndTime: 556.247460603714
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 557.0791568756104
----------
mutation rule: repVarSameScope;
mutate pos: 861
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   861
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 557.0945978164673
----------
mutation rule: repVarSameScope;
mutate pos: 878
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   878
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 557.1101396083832
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.80035758018494
succeed? True
instantReward: 1.685431133283894e-05
EndTime: 604.6886177062988
----------
mutation rule: TurnConstantVar;
mutate pos: 676
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   676
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.24158048629761
succeed? True
instantReward: 1.685431133283894e-05
EndTime: 653.6943063735962
----------
mutation rule: repLoopCond;!
mutate pos: 681
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "!" 681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.88101673126221
succeed? True
instantReward: 1.685431133283894e-05
EndTime: 700.3439695835114
----------
mutation rule: addIf;
mutate pos: 837
mutate cmd: ./exefile/addIf-mul ./main.c --   837
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 700.5591993331909
----------
mutation rule: addLoopIf;
mutate pos: 662
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 711.3001146316528
----------
mutation rule: addVarDecl;
mutate pos: 754
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   754
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 711.6012880802155
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 721.9951515197754
----------
mutation rule: delStmt;
mutate pos: 885
mutate cmd: ./exefile/delStmt-mul ./main.c --   885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.19680213928223
succeed? True
instantReward: 1.685431133283894e-05
EndTime: 769.9292168617249
----------
mutation rule: add2If;
mutate pos: 754
mutate cmd: ./exefile/add2If-mul ./main.c --   754
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.975393772125244
succeed? True
instantReward: 1.685431133283894e-05
EndTime: 817.9096326828003
----------
mutation rule: repIfCond;0
mutate pos: 685
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 685
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.49468398094177
succeed? True
instantReward: 1.685431133283894e-05
EndTime: 865.2494652271271
----------
mutation rule: repRemUnaryOp;~,post--
mutate pos: 868
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post--" 868
pos_left_this_mutator: [4] ['718', '868', '701', '642']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 875.6016817092896
----------
mutation rule: repBinaryOp;>,>=
mutate pos: 776
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" ">=" 776
pos_left_this_mutator: [2] ['745', '776']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.28886318206787
succeed? True
instantReward: 1.846596383830025e-08
EndTime: 924.770854473114
----------
mutation rule: dupStmt;
mutate pos: 837
mutate cmd: ./exefile/dupStmt-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 924.789274930954
----------
mutation rule: repBinaryExpr;
mutate pos: 885
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   885
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.73044276237488
succeed? True
instantReward: 0.0
EndTime: 972.4191217422485
----------
mutation rule: addGoto;
mutate pos: 841
mutate cmd: ./exefile/addGoto-mul ./main.c --   841 685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 982.7777545452118
----------
mutation rule: add2Loop;
mutate pos: 628
mutate cmd: ./exefile/add2Loop-mul ./main.c --   628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.334503412246704
succeed? True
instantReward: 1.6855731791595732e-05
EndTime: 1031.3119509220123
----------
mutation rule: addQualifier;const
mutate pos: 512
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1031.6501507759094
----------
mutation rule: addQualifier;volatile
mutate pos: 537
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 537
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.30371570587158
succeed? True
instantReward: 1.6855731791595732e-05
EndTime: 1079.6943402290344
----------
mutation rule: addGoto;
mutate pos: 754
mutate cmd: ./exefile/addGoto-mul ./main.c --   754 758
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1090.1073789596558
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1090.6700158119202
----------
mutation rule: repIntConstant;-1
mutate pos: 766
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 766
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 45.789284229278564
succeed? True
instantReward: 4.6966170957885283e-07
EndTime: 1137.3713896274567
----------
mutation rule: addIf;
mutate pos: 896
mutate cmd: ./exefile/addIf-mul ./main.c --   896
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1137.9050152301788
----------
mutation rule: delStmt;
mutate pos: 899
mutate cmd: ./exefile/delStmt-mul ./main.c --   899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.78290390968323
succeed? True
instantReward: 1.6887042572234325e-05
EndTime: 1186.4165184497833
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.094067096710205
succeed? True
instantReward: 0.0
EndTime: 1233.3834445476532
----------
mutation rule: moveStmt;
mutate pos: 885
mutate cmd: ./exefile/moveStmt-mul ./main.c --   885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1243.7523868083954
----------
mutation rule: add2If;
mutate pos: 685
mutate cmd: ./exefile/add2If-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.1508309841156
succeed? True
instantReward: 1.6887042572234325e-05
EndTime: 1289.9232416152954
----------
mutation rule: repRemUnaryOp;~,post++
mutate pos: 701
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post++" 701
pos_left_this_mutator: [4] ['718', '868', '701', '642']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1290.2709233760834
----------
mutation rule: repIfCond;0
mutate pos: 841
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 841
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.06483340263367
succeed? True
instantReward: 1.6887042572234325e-05
EndTime: 1337.1482033729553
----------
mutation rule: delStmt;
mutate pos: 907
mutate cmd: ./exefile/delStmt-mul ./main.c --   907
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.43815875053406
succeed? True
instantReward: 1.7553323121435004e-06
EndTime: 1385.4244227409363
----------
mutation rule: dupStmt;
mutate pos: 758
mutate cmd: ./exefile/dupStmt-mul ./main.c --   758
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.22114872932434
succeed? True
instantReward: 5.192643838134933e-09
EndTime: 1433.5534641742706
----------
mutation rule: add2If;
mutate pos: 885
mutate cmd: ./exefile/add2If-mul ./main.c --   885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.374600887298584
succeed? True
instantReward: 1.6984849514233304e-05
EndTime: 1482.8793852329254
----------
mutation rule: moveStmt;
mutate pos: 841
mutate cmd: ./exefile/moveStmt-mul ./main.c --   841
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.246657371520996
succeed? True
instantReward: 1.6984849514233304e-05
EndTime: 1529.9556167125702
----------
mutation rule: repRemUnaryOp;post--,~
mutate pos: 628
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post--" "~" 628
pos_left_this_mutator: [1] ['628']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1540.3471837043762
----------
mutation rule: addLoopIf;
mutate pos: 754
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   754
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.11178684234619
succeed? True
instantReward: 0.0
EndTime: 1587.7641520500183
----------
mutation rule: add2If;
mutate pos: 685
mutate cmd: ./exefile/add2If-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.17070722579956
succeed? True
instantReward: 1.6984849514233304e-05
EndTime: 1635.9788632392883
----------
mutation rule: TurnConstantVar;
mutate pos: 903
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   903
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.6611487865448
succeed? True
instantReward: 5.453202232472403e-08
EndTime: 1684.5377807617188
----------
mutation rule: addGoto;
mutate pos: 681
mutate cmd: ./exefile/addGoto-mul ./main.c --   681 841
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1694.9951374530792
----------
mutation rule: addRepModifier;short
mutate pos: 848
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 848
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.60929036140442
succeed? True
instantReward: 4.733102621588131e-07
EndTime: 1742.524824142456
----------
mutation rule: addLoopIf;
mutate pos: 907
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   907
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.332818031311035
succeed? True
instantReward: 0.0
EndTime: 1790.1589510440826
----------
mutation rule: addGoto;
mutate pos: 907
mutate cmd: ./exefile/addGoto-mul ./main.c --   907 753
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1800.5638718605042
----------
mutation rule: repRemUnaryOp;post--,pre--
mutate pos: 628
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post--" "pre--" 628
pos_left_this_mutator: [1] ['628']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.51684856414795
succeed? True
instantReward: 1.5196790640676283e-07
EndTime: 1848.0348184108734
----------
mutation rule: repBinaryExpr;
mutate pos: 648
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   648
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.68132662773132
succeed? True
instantReward: 0.0
EndTime: 1895.6554584503174
----------
mutation rule: repLoopCond;0
mutate pos: 754
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1895.6839356422424
----------
mutation rule: addLoopIf;
mutate pos: 685
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1906.492728471756
----------
mutation rule: add2If;
mutate pos: 685
mutate cmd: ./exefile/add2If-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.52798247337341
succeed? True
instantReward: 1.701722142808522e-05
EndTime: 1954.1049938201904
----------
mutation rule: addLoopIf;
mutate pos: 899
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1964.9213995933533
----------
mutation rule: add2Loop;
mutate pos: 837
mutate cmd: ./exefile/add2Loop-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1965.146241426468
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1965.2329051494598
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1975.6422612667084
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.923219203948975
succeed? True
instantReward: 2.6776868293910787e-07
EndTime: 2024.533143043518
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 585
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 585
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2024.591106414795
----------
mutation rule: moveStmt;
mutate pos: 681
mutate cmd: ./exefile/moveStmt-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2035.0291488170624
----------
mutation rule: delIf;
mutate pos: 758
mutate cmd: ./exefile/delIf-mul ./main.c --   758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2035.08065700531
----------
mutation rule: addWhile;
mutate pos: 907
mutate cmd: ./exefile/addWhile-mul ./main.c --   907
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.86963939666748
succeed? True
instantReward: 0.0
EndTime: 2083.051298379898
----------
mutation rule: addRepModifier;unsigned
mutate pos: 604
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 604
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.72323298454285
succeed? True
instantReward: 4.167327803311638e-06
EndTime: 2130.7062385082245
----------
mutation rule: add2If;
mutate pos: 662
mutate cmd: ./exefile/add2If-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.511746644973755
succeed? True
instantReward: 0.0
EndTime: 2178.655267238617
----------
mutation rule: addGoto;
mutate pos: 724
mutate cmd: ./exefile/addGoto-mul ./main.c --   724 628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2189.098882675171
----------
mutation rule: repBinaryExpr;
mutate pos: 724
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   724
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.298712730407715
succeed? True
instantReward: 0.0
EndTime: 2237.4334921836853
----------
mutation rule: TurnConstantVar;
mutate pos: 749
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   749
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.036232471466064
succeed? True
instantReward: 1.7218816722914803e-05
EndTime: 2285.356369972229
----------
mutation rule: moveStmt;
mutate pos: 681
mutate cmd: ./exefile/moveStmt-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2295.7893919944763
----------
mutation rule: addQualifier;volatile
mutate pos: 604
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 604
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.504860401153564
succeed? True
instantReward: 1.7218816722914803e-05
EndTime: 2342.2088644504547
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2342.3477880954742
----------
mutation rule: addQualifier;const
mutate pos: 537
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 537
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2342.826589345932
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2343.6744124889374
----------
mutation rule: delIf;
mutate pos: 685
mutate cmd: ./exefile/delIf-mul ./main.c --   685
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.816652059555054
succeed? True
instantReward: 1.7218816722914803e-05
EndTime: 2391.372740983963
----------
mutation rule: repIfCond;0
mutate pos: 841
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 841
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2391.457850217819
----------
mutation rule: add2If;
mutate pos: 685
mutate cmd: ./exefile/add2If-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2392.515963077545
----------
mutation rule: add2Loop;
mutate pos: 758
mutate cmd: ./exefile/add2Loop-mul ./main.c --   758
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2403.1777992248535
----------
mutation rule: disableLoopUnroll;
mutate pos: 754
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2403.6665182113647
----------
mutation rule: optOff;
mutate pos: 561
mutate cmd: ./exefile/optOff-mul ./main.c --   561
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.64203643798828
succeed? True
instantReward: 1.7218816722914803e-05
EndTime: 2450.2036294937134
----------
mutation rule: delStmt;
mutate pos: 680
mutate cmd: ./exefile/delStmt-mul ./main.c --   680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2460.6667098999023
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 585
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 585
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2460.745785713196
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2463.3885045051575
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2473.8382663726807
----------
mutation rule: delIf;
mutate pos: 685
mutate cmd: ./exefile/delIf-mul ./main.c --   685
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2473.966564178467
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2474.136905670166
----------
mutation rule: dupStmt;
mutate pos: 907
mutate cmd: ./exefile/dupStmt-mul ./main.c --   907
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2474.601147174835
----------
mutation rule: dupStmt;
mutate pos: 758
mutate cmd: ./exefile/dupStmt-mul ./main.c --   758
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2474.736405134201
----------
mutation rule: repIntConstant;*-1
mutate pos: 617
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2485.1685338020325
----------
mutation rule: disableLoopUnroll;
mutate pos: 681
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2485.6283531188965
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 585
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 585
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2485.7033360004425
----------
mutation rule: delStmt;
mutate pos: 837
mutate cmd: ./exefile/delStmt-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2485.727087020874
----------
mutation rule: addVarDecl;
mutate pos: 681
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   681
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2486.1730699539185
----------
mutation rule: addRepModifier;signed
mutate pos: 512
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 512
pos_left_this_mutator: [4] ['512', '585', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.57207894325256
succeed? True
instantReward: 0.0
EndTime: 2533.7249500751495
----------
mutation rule: delIf;
mutate pos: 841
mutate cmd: ./exefile/delIf-mul ./main.c --   841
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2533.748817205429
----------
mutation rule: addQualifier;volatile
mutate pos: 585
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 585
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.38534069061279
succeed? True
instantReward: 1.7218816722914803e-05
EndTime: 2582.0125303268433
----------
mutation rule: dupStmt;
mutate pos: 681
mutate cmd: ./exefile/dupStmt-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2592.460152387619
----------
mutation rule: add2If;
mutate pos: 662
mutate cmd: ./exefile/add2If-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.268879652023315
succeed? True
instantReward: 0.0
EndTime: 2639.931736469269
----------
mutation rule: delStmt;
mutate pos: 724
mutate cmd: ./exefile/delStmt-mul ./main.c --   724
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2650.3930699825287
----------
mutation rule: addLoopIf;
mutate pos: 681
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.28989553451538
succeed? True
instantReward: 1.7218816722914803e-05
EndTime: 2696.976498365402
----------
mutation rule: delStmt;
mutate pos: 899
mutate cmd: ./exefile/delStmt-mul ./main.c --   899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2697.0295147895813
----------
mutation rule: addIf;
mutate pos: 754
mutate cmd: ./exefile/addIf-mul ./main.c --   754
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2697.671516418457
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 585
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 585
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2697.7578494548798
----------
mutation rule: addRepModifier;unsigned
mutate pos: 848
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 848
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.701685190200806
succeed? True
instantReward: 0.0
EndTime: 2745.480890274048
----------
mutation rule: add2Loop;
mutate pos: 899
mutate cmd: ./exefile/add2Loop-mul ./main.c --   899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2756.1379446983337
----------
mutation rule: delIf;
mutate pos: 899
mutate cmd: ./exefile/delIf-mul ./main.c --   899
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2756.204811811447
----------
mutation rule: repLoopCond;0
mutate pos: 681
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.67533540725708
succeed? True
instantReward: 3.4437633445829606e-05
EndTime: 2804.8006892204285
----------
mutation rule: delStmt;
mutate pos: 681
mutate cmd: ./exefile/delStmt-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2815.287321329117
----------
mutation rule: repBinaryOp;>,>=
mutate pos: 776
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" ">=" 776
pos_left_this_mutator: [2] ['745', '776']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2815.4355325698853
----------
mutation rule: repVarSameScope;
mutate pos: 624
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   624
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.32756567001343
succeed? True
instantReward: 1.7218816722914803e-05
EndTime: 2864.7847151756287
----------
mutation rule: addGoto;
mutate pos: 899
mutate cmd: ./exefile/addGoto-mul ./main.c --   899 724
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2875.2515754699707
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2885.7461428642273
----------
mutation rule: repBinaryOp;>,>=
mutate pos: 776
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" ">=" 776
pos_left_this_mutator: [2] ['745', '776']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2885.8805384635925
----------
mutation rule: repIfCond;0
mutate pos: 685
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 685
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2885.9957830905914
----------
mutation rule: addIf;
mutate pos: 753
mutate cmd: ./exefile/addIf-mul ./main.c --   753
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2886.6747875213623
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 585
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 585
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2886.7625575065613
----------
mutation rule: repBinaryOp;-,/
mutate pos: 710
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "/" 710
pos_left_this_mutator: [1] ['710']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.1719126701355
succeed? True
instantReward: 1.7218816722914803e-05
EndTime: 2934.888377904892
----------
mutation rule: TurnConstantVar;
mutate pos: 617
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.59316349029541
succeed? True
instantReward: -1.401032858890257e-05
EndTime: 2982.4459176063538
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.529499769210815
succeed? True
instantReward: 0.0
EndTime: 3029.896115064621
----------
mutation rule: addVarDecl;
mutate pos: 753
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   753
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3030.347382545471
----------
mutation rule: repBinaryExpr;
mutate pos: 776
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   776
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.257564544677734
succeed? True
instantReward: 0.0
EndTime: 3078.5886178016663
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 585
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 585
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3078.6778106689453
----------
mutation rule: addIf;
mutate pos: 680
mutate cmd: ./exefile/addIf-mul ./main.c --   680
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3079.375194311142
----------
mutation rule: repBinaryExpr;
mutate pos: 745
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   745
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.78404760360718
succeed? True
instantReward: 0.0
EndTime: 3127.1195583343506
----------
mutation rule: repVarSameScope;
mutate pos: 635
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   635
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3127.134483575821
----------
mutation rule: add2If;
mutate pos: 907
mutate cmd: ./exefile/add2If-mul ./main.c --   907
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.88070034980774
succeed? True
instantReward: 1.8610331370991044e-07
EndTime: 3175.201907634735
----------
mutation rule: TurnConstantVar;
mutate pos: 697
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   697
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.81797122955322
succeed? True
instantReward: 0.0
EndTime: 3221.9415402412415
----------
mutation rule: repLoopCond;1
mutate pos: 681
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3221.9607768058777
----------
mutation rule: delStmt;
mutate pos: 837
mutate cmd: ./exefile/delStmt-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3221.98118519783
----------
mutation rule: TurnConstantVar;
mutate pos: 697
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   697
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3222.051096200943
----------
mutation rule: repIfCond;!
mutate pos: 899
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 899
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3232.544084072113
----------
mutation rule: addIf;
mutate pos: 896
mutate cmd: ./exefile/addIf-mul ./main.c --   896
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3233.320667028427
----------
mutation rule: addIf;
mutate pos: 837
mutate cmd: ./exefile/addIf-mul ./main.c --   837
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3233.5470700263977
----------
mutation rule: addGoto;
mutate pos: 680
mutate cmd: ./exefile/addGoto-mul ./main.c --   680 628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 45.8838005065918
succeed? True
instantReward: 1.862323527390469e-07
EndTime: 3280.4553875923157
----------
mutation rule: repBinaryExpr;
mutate pos: 745
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   745
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3280.6493813991547
----------
mutation rule: optOff;
mutate pos: 754
mutate cmd: ./exefile/optOff-mul ./main.c --   754
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.94804120063782
succeed? True
instantReward: 0.0
EndTime: 3328.5729579925537
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 45.01573467254639
succeed? True
instantReward: 0.0
EndTime: 3374.5115649700165
----------
mutation rule: moveStmt;
mutate pos: 754
mutate cmd: ./exefile/moveStmt-mul ./main.c --   754
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3374.5329296588898
----------
mutation rule: repBinaryExpr;
mutate pos: 745
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   745
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3374.7122917175293
----------
mutation rule: disableLoopUnroll;
mutate pos: 754
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3375.165503025055
----------
mutation rule: add2Loop;
mutate pos: 681
mutate cmd: ./exefile/add2Loop-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 67.58005452156067
succeed? True
instantReward: 3.7261967042500135e-08
EndTime: 3443.9947447776794
----------
mutation rule: addGoto;
mutate pos: 907
mutate cmd: ./exefile/addGoto-mul ./main.c --   907 896
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3454.5056188106537
----------
mutation rule: disableLoopUnroll;
mutate pos: 754
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3455.002801179886
----------
mutation rule: repVarSameScope;
mutate pos: 732
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   732
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3455.0224912166595
----------
mutation rule: delStmt;
mutate pos: 758
mutate cmd: ./exefile/delStmt-mul ./main.c --   758
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3455.084491968155
----------
mutation rule: dupStmt;
mutate pos: 680
mutate cmd: ./exefile/dupStmt-mul ./main.c --   680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3455.9499127864838
----------
mutation rule: repBinaryOp;>,<=
mutate pos: 776
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "<=" 776
pos_left_this_mutator: [2] ['745', '776']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3456.8138530254364
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3456.941821575165
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3457.7091886997223
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3458.508528470993
----------
mutation rule: delStmt;
mutate pos: 662
mutate cmd: ./exefile/delStmt-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3458.9772725105286
----------
mutation rule: delIf;
mutate pos: 899
mutate cmd: ./exefile/delIf-mul ./main.c --   899
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3459.0386176109314
----------
mutation rule: delIf;
mutate pos: 899
mutate cmd: ./exefile/delIf-mul ./main.c --   899
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3459.096704006195
----------
mutation rule: addGoto;
mutate pos: 896
mutate cmd: ./exefile/addGoto-mul ./main.c --   896 680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3469.5895895957947
----------
mutation rule: optOff;
mutate pos: 754
mutate cmd: ./exefile/optOff-mul ./main.c --   754
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3470.4423537254333
----------
mutation rule: TurnConstantVar;
mutate pos: 697
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   697
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3470.519879579544
----------
mutation rule: optOff;
mutate pos: 754
mutate cmd: ./exefile/optOff-mul ./main.c --   754
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3471.375081062317
----------
mutation rule: repIfCond;0
mutate pos: 758
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.40951204299927
succeed? True
instantReward: 1.7335529167027822e-05
EndTime: 3519.645437479019
----------
mutation rule: addLoopIf;
mutate pos: 685
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3530.5556445121765
----------
mutation rule: repBinaryOp;-,%
mutate pos: 710
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "%" 710
pos_left_this_mutator: [1] ['710']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.849533796310425
succeed? True
instantReward: 3.4671058334055645e-05
EndTime: 3578.5282990932465
----------
mutation rule: repBinaryOp;-,/
mutate pos: 710
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "/" 710
pos_left_this_mutator: [1] ['710']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3578.584545612335
----------
mutation rule: repIntConstant;*-1
mutate pos: 903
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 903
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 71.7195405960083
succeed? True
instantReward: 0.0
EndTime: 3651.2729382514954
