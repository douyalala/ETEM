----------
mutation rule: addVarDecl;
mutate pos: 754
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   754
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1.28141450881958
----------
mutation rule: addVarDecl;
mutate pos: 680
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   680
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1.5632288455963135
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 537
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 537
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 12.578908443450928
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 13.24410891532898
----------
mutation rule: addQualifier;volatile
mutate pos: 604
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 604
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 214.36347937583923
succeed? True
instantReward: 1.6851187166135853e-05
EndTime: 229.29079604148865
----------
mutation rule: repLoopCond;!
mutate pos: 681
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "!" 681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.97078466415405
succeed? True
instantReward: 1.6851187166135853e-05
EndTime: 278.981148481369
----------
mutation rule: repIfCond;0
mutate pos: 841
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 841
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.85649228096008
succeed? True
instantReward: 1.6851187166135853e-05
EndTime: 326.5715012550354
----------
mutation rule: disableLoopUnroll;
mutate pos: 681
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 326.8514277935028
----------
mutation rule: TurnConstantVar;
mutate pos: 766
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   766
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.998191118240356
succeed? True
instantReward: 1.6851187166135853e-05
EndTime: 373.56499099731445
----------
mutation rule: delIf;
mutate pos: 758
mutate cmd: ./exefile/delIf-mul ./main.c --   758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.63570594787598
succeed? True
instantReward: 1.6851187166135853e-05
EndTime: 420.9173617362976
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.97301387786865
succeed? True
instantReward: 1.6851187166135853e-05
EndTime: 470.6327621936798
----------
mutation rule: addGoto;
mutate pos: 907
mutate cmd: ./exefile/addGoto-mul ./main.c --   907 896
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 480.94039368629456
----------
mutation rule: repBinaryExpr;
mutate pos: 710
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   710
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.56859016418457
succeed? True
instantReward: 1.8176050874411844e-08
EndTime: 529.3164131641388
----------
mutation rule: repIntConstant;+1
mutate pos: 766
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 766
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.94674801826477
succeed? True
instantReward: 2.6182341166322435e-07
EndTime: 578.0642437934875
----------
mutation rule: add2If;
mutate pos: 754
mutate cmd: ./exefile/add2If-mul ./main.c --   754
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.25756812095642
succeed? True
instantReward: 1.6886187098953058e-05
EndTime: 626.3417165279388
----------
mutation rule: repBinaryExpr;
mutate pos: 745
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   745
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.58948087692261
succeed? True
instantReward: 0.0
EndTime: 674.777174949646
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 585
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 585
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.87196230888367
succeed? True
instantReward: 1.6886187098953058e-05
EndTime: 724.5900447368622
----------
mutation rule: delIf;
mutate pos: 758
mutate cmd: ./exefile/delIf-mul ./main.c --   758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 724.6284780502319
----------
mutation rule: delStmt;
mutate pos: 628
mutate cmd: ./exefile/delStmt-mul ./main.c --   628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 734.9539251327515
----------
mutation rule: dupStmt;
mutate pos: 754
mutate cmd: ./exefile/dupStmt-mul ./main.c --   754
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 745.2969334125519
----------
mutation rule: optOff;
mutate pos: 754
mutate cmd: ./exefile/optOff-mul ./main.c --   754
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.607234477996826
succeed? True
instantReward: 0.0
EndTime: 792.6758098602295
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 50.014774560928345
succeed? True
instantReward: 1.484048352395765e-07
EndTime: 843.519257068634
----------
mutation rule: dupStmt;
mutate pos: 685
mutate cmd: ./exefile/dupStmt-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.36627531051636
succeed? True
instantReward: 5.713087780986762e-09
EndTime: 892.718756198883
----------
mutation rule: addQualifier;const
mutate pos: 604
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 604
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 893.0222885608673
----------
mutation rule: addIf;
mutate pos: 681
mutate cmd: ./exefile/addIf-mul ./main.c --   681
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 893.5346057415009
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 893.6088225841522
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.79294300079346
succeed? True
instantReward: 0.0
EndTime: 945.2048668861389
----------
mutation rule: TurnConstantVar;
mutate pos: 766
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   766
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 945.2635290622711
----------
mutation rule: addIf;
mutate pos: 753
mutate cmd: ./exefile/addIf-mul ./main.c --   753
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 945.8142993450165
----------
mutation rule: addRepModifier;short
mutate pos: 604
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 604
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.73891043663025
succeed? True
instantReward: 1.6901598891255113e-05
EndTime: 996.3959443569183
----------
mutation rule: repRemUnaryOp;post--,pre++
mutate pos: 628
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post--" "pre++" 628
pos_left_this_mutator: [1] ['628']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 57.4540228843689
succeed? True
instantReward: 0.0
EndTime: 1054.7450904846191
----------
mutation rule: add2Loop;
mutate pos: 899
mutate cmd: ./exefile/add2Loop-mul ./main.c --   899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1065.2953443527222
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.400060176849365
succeed? True
instantReward: 0.0
EndTime: 1114.5445003509521
----------
mutation rule: repBinaryOp;>,<=
mutate pos: 776
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "<=" 776
pos_left_this_mutator: [2] ['745', '776']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 50.2017023563385
succeed? True
instantReward: 4.965158131258932e-06
EndTime: 1165.613278388977
----------
mutation rule: repVarSameScope;
mutate pos: 878
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   878
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 51.1172661781311
succeed? True
instantReward: 0.0
EndTime: 1217.5288019180298
----------
mutation rule: delIf;
mutate pos: 685
mutate cmd: ./exefile/delIf-mul ./main.c --   685
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.84166407585144
succeed? True
instantReward: 1.735297690318774e-05
EndTime: 1267.1794867515564
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 537
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 537
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1277.53950548172
----------
mutation rule: repVarSameScope;
mutate pos: 631
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   631
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1287.9252049922943
----------
mutation rule: delStmt;
mutate pos: 680
mutate cmd: ./exefile/delStmt-mul ./main.c --   680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1298.288625240326
----------
mutation rule: repIntConstant;*-1
mutate pos: 903
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 903
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 50.98371410369873
succeed? True
instantReward: 0.0
EndTime: 1350.3117015361786
----------
mutation rule: optOff;
mutate pos: 754
mutate cmd: ./exefile/optOff-mul ./main.c --   754
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.68233132362366
succeed? True
instantReward: 0.0
EndTime: 1400.8646867275238
----------
mutation rule: addGoto;
mutate pos: 628
mutate cmd: ./exefile/addGoto-mul ./main.c --   628 885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1411.2324376106262
----------
mutation rule: delIf;
mutate pos: 758
mutate cmd: ./exefile/delIf-mul ./main.c --   758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1411.286978006363
----------
mutation rule: addRepModifier;signed
mutate pos: 604
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 604
pos_left_this_mutator: [4] ['512', '585', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.69387221336365
succeed? True
instantReward: 0.0
EndTime: 1459.8572285175323
----------
mutation rule: addQualifier;volatile
mutate pos: 537
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 537
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.794665813446045
succeed? True
instantReward: 1.735297690318774e-05
EndTime: 1509.4546840190887
----------
mutation rule: delIf;
mutate pos: 899
mutate cmd: ./exefile/delIf-mul ./main.c --   899
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.1797559261322
succeed? True
instantReward: 1.735297690318774e-05
EndTime: 1557.447800397873
----------
mutation rule: repIntConstant;-1
mutate pos: 676
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 676
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.19407868385315
succeed? True
instantReward: 1.735297690318774e-05
EndTime: 1605.4997045993805
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1615.8855204582214
----------
mutation rule: repLoopCond;1
mutate pos: 681
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1615.9141120910645
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.29959583282471
succeed? True
instantReward: 0.0
EndTime: 1664.1110219955444
----------
mutation rule: repBinaryOp;-,%
mutate pos: 710
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "%" 710
pos_left_this_mutator: [1] ['710']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.203582525253296
succeed? True
instantReward: 0.0
EndTime: 1712.3104655742645
----------
mutation rule: addRepModifier;short
mutate pos: 848
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 848
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.021275997161865
succeed? True
instantReward: 3.5279471366538506e-07
EndTime: 1760.224793434143
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.98514747619629
succeed? True
instantReward: 0.0
EndTime: 1808.0974235534668
----------
mutation rule: addLoopIf;
mutate pos: 628
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1818.869286775589
----------
mutation rule: addRepModifier;long
mutate pos: 848
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 848
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.89247131347656
succeed? True
instantReward: 0.0
EndTime: 1867.6651709079742
----------
mutation rule: add2Loop;
mutate pos: 680
mutate cmd: ./exefile/add2Loop-mul ./main.c --   680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1868.6089096069336
----------
mutation rule: addVarDecl;
mutate pos: -1
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   -1
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1869.4333770275116
----------
mutation rule: add2Loop;
mutate pos: 841
mutate cmd: ./exefile/add2Loop-mul ./main.c --   841
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.415308475494385
succeed? True
instantReward: 3.475299310153087e-05
EndTime: 1918.075538635254
----------
mutation rule: addLoopIf;
mutate pos: 685
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.69299650192261
succeed? True
instantReward: 0.0
EndTime: 1968.9693114757538
----------
mutation rule: moveStmt;
mutate pos: 754
mutate cmd: ./exefile/moveStmt-mul ./main.c --   754
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1979.3826265335083
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.81234645843506
succeed? True
instantReward: 0.0
EndTime: 2028.0794749259949
----------
mutation rule: add2If;
mutate pos: 685
mutate cmd: ./exefile/add2If-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.541552782058716
succeed? True
instantReward: 3.475299310153087e-05
EndTime: 2077.665291070938
----------
mutation rule: optOff;
mutate pos: 681
mutate cmd: ./exefile/optOff-mul ./main.c --   681
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.753528356552124
succeed? True
instantReward: 5.7370097043211304e-09
EndTime: 2125.308329820633
----------
mutation rule: repBinaryOp;>,!=
mutate pos: 776
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "!=" 776
pos_left_this_mutator: [2] ['745', '776']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.14584469795227
succeed? True
instantReward: 0.0
EndTime: 2174.416475534439
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2174.586354970932
----------
mutation rule: repIntConstant;-1
mutate pos: 697
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 697
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.125648975372314
succeed? True
instantReward: 1.1478207880488093e-07
EndTime: 2222.5651075839996
----------
mutation rule: repBinaryExpr;
mutate pos: 710
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   710
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2222.6724331378937
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2222.8311903476715
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2222.9878776073456
----------
mutation rule: repVarSameScope;
mutate pos: 889
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   889
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2233.438259124756
----------
mutation rule: moveStmt;
mutate pos: 885
mutate cmd: ./exefile/moveStmt-mul ./main.c --   885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.10648560523987
succeed? True
instantReward: 0.0
EndTime: 2282.428128004074
----------
mutation rule: repBinaryOp;-,*
mutate pos: 710
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "*" 710
pos_left_this_mutator: [1] ['710']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.93133091926575
succeed? True
instantReward: 1.738283966068697e-05
EndTime: 2331.235171318054
----------
mutation rule: disableLoopUnroll;
mutate pos: 754
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2331.6450374126434
----------
mutation rule: disableLoopUnroll;
mutate pos: 681
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2332.0715811252594
----------
mutation rule: repVarSameScope;
mutate pos: 624
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   624
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.97228717803955
succeed? True
instantReward: 1.738283966068697e-05
EndTime: 2380.165294408798
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2380.931188106537
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.80861139297485
succeed? True
instantReward: 0.0
EndTime: 2429.561566591263
----------
mutation rule: optOff;
mutate pos: 754
mutate cmd: ./exefile/optOff-mul ./main.c --   754
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.10076951980591
succeed? True
instantReward: 0.0
EndTime: 2479.56835269928
----------
mutation rule: disableLoopUnroll;
mutate pos: 681
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2479.997326850891
----------
mutation rule: TurnConstantVar;
mutate pos: 617
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2480.8684618473053
----------
mutation rule: repIntConstant;-1
mutate pos: 903
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 903
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2481.717081308365
----------
mutation rule: add2If;
mutate pos: 907
mutate cmd: ./exefile/add2If-mul ./main.c --   907
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2482.7545232772827
----------
mutation rule: addWhile;
mutate pos: 628
mutate cmd: ./exefile/addWhile-mul ./main.c --   628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2493.403250694275
----------
mutation rule: dupStmt;
mutate pos: 685
mutate cmd: ./exefile/dupStmt-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2493.7733964920044
----------
mutation rule: TurnConstantVar;
mutate pos: 676
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   676
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 50.09923982620239
succeed? True
instantReward: 1.738283966068697e-05
EndTime: 2544.7337560653687
----------
mutation rule: addVarDecl;
mutate pos: 724
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   724
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.91698241233826
succeed? True
instantReward: 0.0
EndTime: 2592.572806596756
----------
mutation rule: disableLoopUnroll;
mutate pos: 681
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2592.9946982860565
----------
mutation rule: repBinaryExpr;
mutate pos: 710
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   710
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2593.1291077136993
----------
mutation rule: repLoopCond;1
mutate pos: 681
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2593.1471548080444
----------
mutation rule: addLoopIf;
mutate pos: 724
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   724
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2604.0454909801483
----------
mutation rule: repIfCond;!
mutate pos: 841
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 841
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2604.8444101810455
----------
mutation rule: repVarSameScope;
mutate pos: 861
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   861
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2615.327851295471
----------
mutation rule: repRemUnaryOp;~,post++
mutate pos: 868
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post++" 868
pos_left_this_mutator: [4] ['718', '868', '701', '642']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2625.8148777484894
----------
mutation rule: repRemUnaryOp;~,post++
mutate pos: 718
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post++" 718
pos_left_this_mutator: [4] ['718', '868', '701', '642']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2626.2677404880524
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2636.7740411758423
----------
mutation rule: addIf;
mutate pos: 680
mutate cmd: ./exefile/addIf-mul ./main.c --   680
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2637.4757075309753
----------
mutation rule: repBinaryOp;-,*
mutate pos: 710
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "*" 710
pos_left_this_mutator: [1] ['710']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2637.5528326034546
----------
mutation rule: delIf;
mutate pos: 685
mutate cmd: ./exefile/delIf-mul ./main.c --   685
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2637.6561510562897
----------
mutation rule: repIntConstant;-1
mutate pos: 697
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 697
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2637.7879691123962
----------
mutation rule: delStmt;
mutate pos: 907
mutate cmd: ./exefile/delStmt-mul ./main.c --   907
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2638.5651202201843
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2640.5363960266113
----------
mutation rule: addWhile;
mutate pos: 753
mutate cmd: ./exefile/addWhile-mul ./main.c --   753
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2641.560495376587
----------
mutation rule: dupStmt;
mutate pos: 628
mutate cmd: ./exefile/dupStmt-mul ./main.c --   628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2642.0128724575043
----------
mutation rule: repIntConstant;*0
mutate pos: 697
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 697
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.23573088645935
succeed? True
instantReward: 1.738283966068697e-05
EndTime: 2690.2864072322845
----------
mutation rule: repBinaryExpr;
mutate pos: 648
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   648
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.92522978782654
succeed? True
instantReward: 0.0
EndTime: 2738.1583213806152
----------
mutation rule: repIfCond;0
mutate pos: 899
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 899
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.97824501991272
succeed? True
instantReward: 3.476567932137394e-05
EndTime: 2787.015809774399
----------
mutation rule: addRepModifier;short
mutate pos: 604
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 604
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2787.118649959564
----------
mutation rule: addIf;
mutate pos: 754
mutate cmd: ./exefile/addIf-mul ./main.c --   754
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2787.7694272994995
----------
mutation rule: repRemUnaryOp;post--,post++
mutate pos: 628
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post--" "post++" 628
pos_left_this_mutator: [1] ['628']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.553446769714355
succeed? True
instantReward: 0.0
EndTime: 2836.4283332824707
----------
mutation rule: TurnConstantVar;
mutate pos: 617
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.35899376869202
succeed? True
instantReward: -1.6809150579995204e-05
EndTime: 2885.763182401657
----------
mutation rule: addVarDecl;
mutate pos: 680
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   680
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2886.2195024490356
----------
mutation rule: addRepModifier;signed
mutate pos: 848
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 848
pos_left_this_mutator: [4] ['512', '585', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.35992169380188
succeed? True
instantReward: 0.0
EndTime: 2933.572992324829
----------
mutation rule: repIntConstant;+1
mutate pos: 676
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 676
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2934.4569866657257
----------
mutation rule: add2If;
mutate pos: 754
mutate cmd: ./exefile/add2If-mul ./main.c --   754
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.94386696815491
succeed? True
instantReward: 0.0
EndTime: 2983.4994328022003
----------
mutation rule: dupStmt;
mutate pos: 758
mutate cmd: ./exefile/dupStmt-mul ./main.c --   758
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.920347690582275
succeed? True
instantReward: 7.271999737839055e-09
EndTime: 3032.4144287109375
----------
mutation rule: addVarDecl;
mutate pos: 621
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   621
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3033.2464475631714
----------
mutation rule: repVarSameScope;
mutate pos: 861
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   861
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3043.720694065094
----------
mutation rule: addGoto;
mutate pos: 837
mutate cmd: ./exefile/addGoto-mul ./main.c --   837 724
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3043.7521159648895
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3043.856794834137
----------
mutation rule: addWhile;
mutate pos: 753
mutate cmd: ./exefile/addWhile-mul ./main.c --   753
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3044.889683008194
----------
mutation rule: add2Loop;
mutate pos: 685
mutate cmd: ./exefile/add2Loop-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3055.584687232971
----------
mutation rule: repIfCond;0
mutate pos: 685
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 685
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.331345319747925
succeed? True
instantReward: 0.0
EndTime: 3103.838479757309
----------
mutation rule: repBinaryOp;-,*
mutate pos: 710
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "*" 710
pos_left_this_mutator: [1] ['710']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3103.9224717617035
----------
mutation rule: repIntConstant;-1
mutate pos: 617
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3114.412808895111
----------
mutation rule: repLoopCond;1
mutate pos: 754
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3114.43687582016
----------
mutation rule: repVarSameScope;
mutate pos: 861
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   861
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3114.4600026607513
----------
mutation rule: addRepModifier;unsigned
mutate pos: 848
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 848
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.790364503860474
succeed? True
instantReward: 0.0
EndTime: 3162.232285261154
----------
mutation rule: disableLoopUnroll;
mutate pos: 754
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3162.7113296985626
----------
mutation rule: addIf;
mutate pos: 896
mutate cmd: ./exefile/addIf-mul ./main.c --   896
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3163.3801460266113
----------
mutation rule: add2Loop;
mutate pos: 662
mutate cmd: ./exefile/add2Loop-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3174.097337961197
----------
mutation rule: dupStmt;
mutate pos: 837
mutate cmd: ./exefile/dupStmt-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3174.1257927417755
----------
mutation rule: addQualifier;restrict
mutate pos: 604
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 604
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3174.581140756607
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3175.418410539627
----------
mutation rule: repIfCond;0
mutate pos: 685
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 685
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3175.5161747932434
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3176.2066683769226
----------
mutation rule: repBinaryOp;>,<=
mutate pos: 745
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "<=" 745
pos_left_this_mutator: [2] ['745', '776']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3186.700852394104
----------
mutation rule: add2If;
mutate pos: 662
mutate cmd: ./exefile/add2If-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.14573526382446
succeed? True
instantReward: 5.222113911711461e-05
EndTime: 3237.1482560634613
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.79508113861084
succeed? True
instantReward: 0.0
EndTime: 3286.827249288559
----------
mutation rule: dupStmt;
mutate pos: 907
mutate cmd: ./exefile/dupStmt-mul ./main.c --   907
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3287.441825866699
----------
mutation rule: repBinaryExpr;
mutate pos: 745
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   745
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3287.672918319702
----------
mutation rule: repBinaryExpr;
mutate pos: 885
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   885
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3288.5316128730774
----------
mutation rule: dupStmt;
mutate pos: 885
mutate cmd: ./exefile/dupStmt-mul ./main.c --   885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3289.012849330902
----------
mutation rule: repRemUnaryOp;post--,pre--
mutate pos: 628
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post--" "pre--" 628
pos_left_this_mutator: [1] ['628']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3289.913430213928
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3300.416436433792
----------
mutation rule: delStmt;
mutate pos: 896
mutate cmd: ./exefile/delStmt-mul ./main.c --   896
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 50.915985345840454
succeed? True
instantReward: 3.4814092744743074e-05
EndTime: 3352.2934448719025
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3362.791782617569
----------
mutation rule: optOff;
mutate pos: 754
mutate cmd: ./exefile/optOff-mul ./main.c --   754
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.02401089668274
succeed? True
instantReward: 0.0
EndTime: 3410.7460148334503
----------
mutation rule: moveStmt;
mutate pos: 685
mutate cmd: ./exefile/moveStmt-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3411.717423915863
----------
mutation rule: addRepModifier;signed
mutate pos: 848
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 848
pos_left_this_mutator: [4] ['512', '585', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3411.969544649124
----------
mutation rule: addQualifier;volatile
mutate pos: 537
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 537
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3412.082620859146
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3412.8226976394653
----------
mutation rule: TurnConstantVar;
mutate pos: 697
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   697
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.37210488319397
succeed? True
instantReward: 1.7407046372371537e-05
EndTime: 3460.045334815979
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3460.2754061222076
----------
mutation rule: add2If;
mutate pos: 680
mutate cmd: ./exefile/add2If-mul ./main.c --   680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.74574136734009
succeed? True
instantReward: 0.0
EndTime: 3511.1814143657684
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3511.864756822586
----------
mutation rule: moveStmt;
mutate pos: 899
mutate cmd: ./exefile/moveStmt-mul ./main.c --   899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3512.3712532520294
----------
mutation rule: repBinaryExpr;
mutate pos: 648
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   648
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3512.5887060165405
----------
mutation rule: repVarSameScope;
mutate pos: 666
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   666
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.46781849861145
succeed? True
instantReward: -1.7407046372371537e-05
EndTime: 3560.976993560791
----------
mutation rule: addQualifier;restrict
mutate pos: 604
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 604
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3561.4744865894318
----------
mutation rule: delStmt;
mutate pos: 680
mutate cmd: ./exefile/delStmt-mul ./main.c --   680
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3572.0086262226105
----------
mutation rule: addQualifier;const
mutate pos: 604
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 604
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3572.5097131729126
----------
mutation rule: add2Loop;
mutate pos: 662
mutate cmd: ./exefile/add2Loop-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3583.296670436859
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3583.546579837799
----------
mutation rule: addGoto;
mutate pos: 841
mutate cmd: ./exefile/addGoto-mul ./main.c --   841 685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3594.0374417304993
----------
mutation rule: delStmt;
mutate pos: 753
mutate cmd: ./exefile/delStmt-mul ./main.c --   753
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.595179319381714
succeed? True
instantReward: 0.0
EndTime: 3641.6162695884705
