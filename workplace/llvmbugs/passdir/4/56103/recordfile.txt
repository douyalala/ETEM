----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 0.6693813800811768
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1.3374512195587158
----------
mutation rule: repBinaryOp;>,==
mutate pos: 1080
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "==" 1080
pos_left_this_mutator: [1] ['1080']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 74.41486620903015
succeed? True
instantReward: 1.59821000479463e-05
EndTime: 76.47204208374023
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 65.03607535362244
succeed? True
instantReward: 1.53261412043945e-09
EndTime: 142.31134128570557
----------
mutation rule: dupStmt;
mutate pos: 800
mutate cmd: ./exefile/dupStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 142.59069538116455
----------
mutation rule: dupStmt;
mutate pos: 1153
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 143.2473065853119
----------
mutation rule: repVarSameScope;
mutate pos: 588
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   588
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 143.58647203445435
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 151.79351925849915
----------
mutation rule: addQualifier;restrict
mutate pos: 575
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 575
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 152.17403531074524
----------
mutation rule: repRemUnaryOp;~,post++
mutate pos: 1060
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post++" 1060
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 152.63645267486572
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 152.70191073417664
----------
mutation rule: remModifierQualifier;short
mutate pos: 921
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 921
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 63.51492929458618
succeed? True
instantReward: 0.0
EndTime: 217.0823473930359
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 217.3593373298645
----------
mutation rule: remModifierQualifier;short
mutate pos: 621
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 621
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 71.08200669288635
succeed? True
instantReward: 3.831964000925998e-09
EndTime: 289.28610730171204
----------
mutation rule: add2If;
mutate pos: 838
mutate cmd: ./exefile/add2If-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 290.19534158706665
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 290.8747498989105
----------
mutation rule: remModifierQualifier;short
mutate pos: 598
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 598
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.98803997039795
succeed? True
instantReward: 1.5983888240653422e-05
EndTime: 339.6054835319519
----------
mutation rule: addRepModifier;signed
mutate pos: 921
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 921
pos_left_this_mutator: [10] ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.45844578742981
succeed? True
instantReward: 1.5983888240653422e-05
EndTime: 387.979772567749
----------
mutation rule: TurnConstantVar;
mutate pos: 900
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   900
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.29304003715515
succeed? True
instantReward: 1.5983888240653422e-05
EndTime: 438.0331280231476
----------
mutation rule: repIfCond;1
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.16953659057617
succeed? True
instantReward: 1.5983888240653422e-05
EndTime: 486.1211431026459
----------
mutation rule: delStmt;
mutate pos: 1141
mutate cmd: ./exefile/delStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 486.142902135849
----------
mutation rule: delStmt;
mutate pos: 1141
mutate cmd: ./exefile/delStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 486.1676046848297
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 486.3822500705719
----------
mutation rule: addLoopIf;
mutate pos: 838
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.66486620903015
succeed? True
instantReward: 1.4325460388851102e-07
EndTime: 535.3198707103729
----------
mutation rule: repBinaryExpr;
mutate pos: 1019
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1019
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.20511269569397
succeed? True
instantReward: 0.0
EndTime: 585.4267613887787
----------
mutation rule: dupStmt;
mutate pos: 800
mutate cmd: ./exefile/dupStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 585.7541491985321
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.91942620277405
succeed? True
instantReward: 1.9726200460579418e-08
EndTime: 636.5394682884216
----------
mutation rule: repRemUnaryOp;~,pre--
mutate pos: 944
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre--" 944
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.78570485115051
succeed? True
instantReward: 1.600717121270329e-05
EndTime: 687.2653603553772
----------
mutation rule: repRemUnaryOp;~,post--
mutate pos: 944
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post--" 944
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.732909202575684
succeed? True
instantReward: 1.600717121270329e-05
EndTime: 737.7453603744507
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 737.8141465187073
----------
mutation rule: addVarDecl;
mutate pos: 772
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   772
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.769002199172974
succeed? True
instantReward: 0.0
EndTime: 787.445464849472
----------
mutation rule: repRemUnaryOp;~,post--
mutate pos: 1060
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post--" 1060
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 787.7541923522949
----------
mutation rule: optOff;
mutate pos: 859
mutate cmd: ./exefile/optOff-mul ./main.c --   859
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.59328889846802
succeed? True
instantReward: 1.600717121270329e-05
EndTime: 838.0410556793213
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.42004108428955
succeed? True
instantReward: 3.2415881081382435e-06
EndTime: 887.3223586082458
----------
mutation rule: TurnConstantVar;
mutate pos: 824
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   824
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.396080493927
succeed? True
instantReward: 5.069107386453044e-08
EndTime: 937.5898985862732
----------
mutation rule: addGoto;
mutate pos: 838
mutate cmd: ./exefile/addGoto-mul ./main.c --   838 1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 937.9060082435608
----------
mutation rule: addVarDecl;
mutate pos: 914
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   914
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.86386799812317
succeed? True
instantReward: 5.337733129952803e-09
EndTime: 987.633216381073
----------
mutation rule: TurnConstantVar;
mutate pos: 984
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   984
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 988.3722791671753
----------
mutation rule: optOff;
mutate pos: 859
mutate cmd: ./exefile/optOff-mul ./main.c --   859
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.27420926094055
succeed? True
instantReward: 1.6336932904216562e-05
EndTime: 1037.41161775589
----------
mutation rule: repBinaryOp;^,|
mutate pos: 1031
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "^" "|" 1031
pos_left_this_mutator: [1] ['1031']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.94519352912903
succeed? True
instantReward: 2.5872668310260457e-07
EndTime: 1087.2736885547638
----------
mutation rule: addVarDecl;
mutate pos: 800
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   800
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1087.9893412590027
----------
mutation rule: repBinaryOp;>,==
mutate pos: 1080
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "==" 1080
pos_left_this_mutator: [1] ['1080']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1088.0342602729797
----------
mutation rule: addVarDecl;
mutate pos: 1153
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1153
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1088.746419429779
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1089.3066673278809
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 553
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 553
pos_left_this_mutator: [2] ['553', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.50886249542236
succeed? True
instantReward: 1.6360453511771345e-05
EndTime: 1139.7772281169891
----------
mutation rule: repBinaryOp;>>,<<
mutate pos: 954
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">>" "<<" 954
pos_left_this_mutator: [1] ['954']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 51.49755597114563
succeed? True
instantReward: 1.6360453511771345e-05
EndTime: 1192.1010313034058
----------
mutation rule: dupStmt;
mutate pos: 838
mutate cmd: ./exefile/dupStmt-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1192.448884487152
----------
mutation rule: repRemUnaryOp;~,post++
mutate pos: 1060
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post++" 1060
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1192.7916989326477
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1192.8157489299774
----------
mutation rule: add2Loop;
mutate pos: 1145
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.64135980606079
succeed? True
instantReward: 1.6360453511771345e-05
EndTime: 1242.542388677597
----------
mutation rule: repVarSameScope;
mutate pos: 775
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   775
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.6759819984436
succeed? True
instantReward: 0.0
EndTime: 1292.1104755401611
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.290154457092285
succeed? True
instantReward: 0.0
EndTime: 1341.2505989074707
----------
mutation rule: delStmt;
mutate pos: 1141
mutate cmd: ./exefile/delStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1341.2828447818756
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1341.371396780014
----------
mutation rule: addLoopIf;
mutate pos: 1153
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1352.137567281723
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1352.728405714035
----------
mutation rule: add2Loop;
mutate pos: 800
mutate cmd: ./exefile/add2Loop-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.69715213775635
succeed? True
instantReward: 0.0
EndTime: 1402.5054779052734
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1403.0954432487488
----------
mutation rule: add2If;
mutate pos: 914
mutate cmd: ./exefile/add2If-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.67686700820923
succeed? True
instantReward: 1.6360453511771345e-05
EndTime: 1453.8184146881104
----------
mutation rule: repVarSameScope;
mutate pos: 588
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   588
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.515801191329956
succeed? True
instantReward: 1.6360453511771345e-05
EndTime: 1504.1669602394104
----------
mutation rule: addRepModifier;short
mutate pos: 967
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 967
pos_left_this_mutator: [4] ['512', '537', '575', '967']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.91998314857483
succeed? True
instantReward: 1.6360453511771345e-05
EndTime: 1554.9434461593628
----------
mutation rule: remModifierQualifier;long
mutate pos: 575
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "long" 575
pos_left_this_mutator: [3] ['537', '575', '967']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.74774432182312
succeed? True
instantReward: 1.6360453511771345e-05
EndTime: 1604.5553793907166
----------
mutation rule: add2If;
mutate pos: 1141
mutate cmd: ./exefile/add2If-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1604.778989315033
----------
mutation rule: repBinaryExpr;
mutate pos: 800
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   800
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.88052201271057
succeed? True
instantReward: 0.0
EndTime: 1655.581021308899
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1655.79887008667
----------
mutation rule: addRepModifier;short
mutate pos: 512
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 512
pos_left_this_mutator: [4] ['512', '537', '575', '967']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.6820592880249
succeed? True
instantReward: 6.712228565927117e-07
EndTime: 1705.4131021499634
----------
mutation rule: repBinaryExpr;
mutate pos: 1052
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1052
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.66227197647095
succeed? True
instantReward: 0.0
EndTime: 1756.9632906913757
----------
mutation rule: addLoopIf;
mutate pos: 800
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.64179253578186
succeed? True
instantReward: 0.0
EndTime: 1806.8903050422668
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 553
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 553
pos_left_this_mutator: [2] ['553', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1806.93505859375
----------
mutation rule: addLoopIf;
mutate pos: 914
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1817.7344589233398
----------
mutation rule: repIntConstant;*0
mutate pos: 1149
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 1149
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1817.7605094909668
----------
mutation rule: add2Loop;
mutate pos: 1153
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1818.7648515701294
----------
mutation rule: add2If;
mutate pos: 1141
mutate cmd: ./exefile/add2If-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1818.9869837760925
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1819.6982333660126
----------
mutation rule: add2Loop;
mutate pos: 1141
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1819.9196088314056
----------
mutation rule: addWhile;
mutate pos: 1141
mutate cmd: ./exefile/addWhile-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1820.1431052684784
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1820.2979514598846
----------
mutation rule: addLoopIf;
mutate pos: 914
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.48224949836731
succeed? True
instantReward: 1.6397743670470943e-05
EndTime: 1871.0388147830963
----------
mutation rule: addRepModifier;long
mutate pos: 598
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 598
pos_left_this_mutator: [7] ['512', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.81954336166382
succeed? True
instantReward: 1.6397743670470943e-05
EndTime: 1920.7185428142548
----------
mutation rule: TurnConstantVar;
mutate pos: 984
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   984
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.25408577919006
succeed? True
instantReward: 2.96041590006665e-07
EndTime: 1970.8505990505219
----------
mutation rule: addLoopIf;
mutate pos: 1145
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.00146985054016
succeed? True
instantReward: 1.6412545749971278e-05
EndTime: 2021.026638507843
----------
mutation rule: addGoto;
mutate pos: 1145
mutate cmd: ./exefile/addGoto-mul ./main.c --   1145 914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2031.4450964927673
----------
mutation rule: addQualifier;restrict
mutate pos: 652
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 652
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2031.8616394996643
----------
mutation rule: moveStmt;
mutate pos: 1141
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2031.8884673118591
----------
mutation rule: delStmt;
mutate pos: 838
mutate cmd: ./exefile/delStmt-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.34006595611572
succeed? True
instantReward: 6.223608897606026e-08
EndTime: 2081.1473960876465
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.485007762908936
succeed? True
instantReward: 0.0
EndTime: 2131.5438063144684
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2131.6709792613983
----------
mutation rule: delStmt;
mutate pos: 1145
mutate cmd: ./exefile/delStmt-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2131.6940319538116
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2131.717711210251
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2131.8364627361298
----------
mutation rule: addWhile;
mutate pos: 914
mutate cmd: ./exefile/addWhile-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.71991324424744
succeed? True
instantReward: 1.6415509373255853e-05
EndTime: 2181.593569993973
----------
mutation rule: addRepModifier;unsigned
mutate pos: 682
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 682
pos_left_this_mutator: [9] ['967', '512', '537', '575', '598', '621', '652', '682', '759']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.68569040298462
succeed? True
instantReward: 0.0
EndTime: 2233.2013370990753
----------
mutation rule: add2Loop;
mutate pos: 1153
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2234.177588224411
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.31743550300598
succeed? True
instantReward: 1.6415509373255853e-05
EndTime: 2283.3705492019653
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2283.4896247386932
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.6116406917572
succeed? True
instantReward: 1.6415509373255853e-05
EndTime: 2332.8891694545746
----------
mutation rule: repVarSameScope;
mutate pos: 880
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   880
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2333.3005793094635
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2333.5295901298523
----------
mutation rule: delStmt;
mutate pos: 800
mutate cmd: ./exefile/delStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.102521896362305
succeed? True
instantReward: 3.880735076420682e-08
EndTime: 2383.595846414566
----------
mutation rule: moveStmt;
mutate pos: 800
mutate cmd: ./exefile/moveStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2383.6234226226807
----------
mutation rule: addVarDecl;
mutate pos: -1
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   -1
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.50928449630737
succeed? True
instantReward: 0.0
EndTime: 2433.0376756191254
----------
mutation rule: add2If;
mutate pos: 1145
mutate cmd: ./exefile/add2If-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.734519958496094
succeed? True
instantReward: 1.641712634620436e-05
EndTime: 2482.852730035782
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2482.8768088817596
----------
mutation rule: addWhile;
mutate pos: 1145
mutate cmd: ./exefile/addWhile-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2493.602921962738
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2493.8157815933228
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2493.83908700943
----------
mutation rule: dupStmt;
mutate pos: 914
mutate cmd: ./exefile/dupStmt-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2494.2765550613403
----------
mutation rule: repBinaryOp;>,<
mutate pos: 1080
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "<" 1080
pos_left_this_mutator: [1] ['1080']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.10077524185181
succeed? True
instantReward: 1.641712634620436e-05
EndTime: 2545.390805244446
----------
mutation rule: repBinaryOp;-,%
mutate pos: 1019
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "%" 1019
pos_left_this_mutator: [2] ['1019', '994']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.183061599731445
succeed? True
instantReward: 1.641712634620436e-05
EndTime: 2596.4767215251923
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.821924924850464
succeed? True
instantReward: 1.641712634620436e-05
EndTime: 2646.161078453064
----------
mutation rule: addRepModifier;unsigned
mutate pos: 598
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 598
pos_left_this_mutator: [9] ['967', '512', '537', '575', '598', '621', '652', '682', '759']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.37032437324524
succeed? True
instantReward: 1.641712634620436e-05
EndTime: 2695.45844745636
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2695.48149561882
----------
mutation rule: repBinaryExpr;
mutate pos: 1031
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1031
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.2855327129364
succeed? True
instantReward: 0.0
EndTime: 2745.7333188056946
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2745.9593620300293
----------
mutation rule: optOff;
mutate pos: 859
mutate cmd: ./exefile/optOff-mul ./main.c --   859
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.91019892692566
succeed? True
instantReward: 1.641712634620436e-05
EndTime: 2795.705532312393
----------
mutation rule: addGoto;
mutate pos: 1145
mutate cmd: ./exefile/addGoto-mul ./main.c --   1145 1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2796.1506996154785
----------
mutation rule: repIfCond;!
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.71788144111633
succeed? True
instantReward: 6.963500143558317e-07
EndTime: 2846.875951051712
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2847.5989089012146
----------
mutation rule: delStmt;
mutate pos: 800
mutate cmd: ./exefile/delStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2847.939143896103
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.44062328338623
succeed? True
instantReward: 1.6440338013349554e-05
EndTime: 2897.128381252289
----------
mutation rule: addRepModifier;short
mutate pos: 537
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 537
pos_left_this_mutator: [4] ['512', '537', '575', '967']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.73371624946594
succeed? True
instantReward: 1.6440338013349554e-05
EndTime: 2946.7953436374664
----------
mutation rule: repIntConstant;+1
mutate pos: 824
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 824
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 51.11026692390442
succeed? True
instantReward: 0.0
EndTime: 2999.293532848358
----------
mutation rule: repIntConstant;-1
mutate pos: 1149
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 1149
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.886962890625
succeed? True
instantReward: 5.454589377567372e-07
EndTime: 3051.166615962982
----------
mutation rule: remModifierQualifier;short
mutate pos: 682
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 682
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3051.363603591919
----------
mutation rule: repVarSameScope;
mutate pos: 775
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   775
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3051.8194811344147
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3052.0002570152283
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 52.801541805267334
succeed? True
instantReward: 0.0
EndTime: 3105.781136751175
----------
mutation rule: add2If;
mutate pos: 1145
mutate cmd: ./exefile/add2If-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.68058443069458
succeed? True
instantReward: 0.0
EndTime: 3155.635799407959
----------
mutation rule: addGoto;
mutate pos: 1153
mutate cmd: ./exefile/addGoto-mul ./main.c --   1153 1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3166.15159201622
----------
mutation rule: addLoopIf;
mutate pos: 838
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.60783004760742
succeed? True
instantReward: 0.0
EndTime: 3216.193512201309
----------
mutation rule: repVarSameScope;
mutate pos: 1066
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1066
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.26818108558655
succeed? True
instantReward: 1.6457383605154452e-05
EndTime: 3265.6028532981873
----------
mutation rule: repIfCond;!
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3265.8362810611725
----------
mutation rule: dupStmt;
mutate pos: 800
mutate cmd: ./exefile/dupStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3266.308021068573
----------
mutation rule: repIfCond;!
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3266.559086084366
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3266.728203058243
----------
mutation rule: repRemUnaryOp;~,post--
mutate pos: 1060
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post--" 1060
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3267.1934440135956
----------
mutation rule: addWhile;
mutate pos: 1145
mutate cmd: ./exefile/addWhile-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3277.8991074562073
----------
mutation rule: repRemUnaryOp;~,post--
mutate pos: 944
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post--" 944
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3277.9376904964447
----------
mutation rule: repBinaryOp;^,|
mutate pos: 1031
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "^" "|" 1031
pos_left_this_mutator: [1] ['1031']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3278.1777334213257
----------
mutation rule: addLoopIf;
mutate pos: 1145
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 51.99142861366272
succeed? True
instantReward: 1.6457383605154452e-05
EndTime: 3331.4944145679474
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3331.5157742500305
----------
mutation rule: repBinaryOp;>,!=
mutate pos: 1080
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "!=" 1080
pos_left_this_mutator: [1] ['1080']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 52.061930418014526
succeed? True
instantReward: 0.0
EndTime: 3384.7014734745026
----------
mutation rule: addLoopIf;
mutate pos: 1153
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.745017528533936
succeed? True
instantReward: 3.501513317061538e-07
EndTime: 3435.8396089076996
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3436.015884876251
----------
mutation rule: TurnConstantVar;
mutate pos: 824
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   824
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3436.210798025131
----------
mutation rule: repVarSameScope;
mutate pos: 1002
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1002
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 69.9473180770874
succeed? True
instantReward: 1.6467682173734046e-05
EndTime: 3507.087393283844
----------
mutation rule: TurnConstantVar;
mutate pos: 984
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   984
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3507.311774253845
----------
mutation rule: addLoopIf;
mutate pos: 838
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 52.015636682510376
succeed? True
instantReward: 0.0
EndTime: 3560.7775206565857
----------
mutation rule: repVarSameScope;
mutate pos: 1066
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1066
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3560.7978434562683
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 63.78379583358765
succeed? True
instantReward: 0.0
EndTime: 3625.664454460144
