----------
mutation rule: delIf;
mutate pos: 938
mutate cmd: ./exefile/delIf-mul ./main.c --   938
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 0.021773576736450195
----------
mutation rule: add2If;
mutate pos: 846
mutate cmd: ./exefile/add2If-mul ./main.c --   846
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 10.793941974639893
----------
mutation rule: delIf;
mutate pos: 1057
mutate cmd: ./exefile/delIf-mul ./main.c --   1057
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 10.81879711151123
----------
mutation rule: addLoopIf;
mutate pos: 1239
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1239
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 11.476558685302734
----------
mutation rule: dupStmt;
mutate pos: 1094
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1094
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 22.072547674179077
----------
mutation rule: moveStmt;
mutate pos: 927
mutate cmd: ./exefile/moveStmt-mul ./main.c --   927
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 22.096699714660645
----------
mutation rule: moveStmt;
mutate pos: 1083
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1083
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 32.78459334373474
----------
mutation rule: addVarDecl;
mutate pos: 842
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   842
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 33.12448024749756
----------
mutation rule: repLoopCond;0
mutate pos: 846
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 43.79208445549011
----------
mutation rule: delIf;
mutate pos: 1231
mutate cmd: ./exefile/delIf-mul ./main.c --   1231
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 44.07716679573059
----------
mutation rule: delLoop;
mutate pos: 942
mutate cmd: ./exefile/delLoop-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 44.119903802871704
----------
mutation rule: addFuncArg;
mutate pos: 593
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 44.15211725234985
----------
mutation rule: addVarDecl;
mutate pos: 842
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   842
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 44.897807598114014
----------
mutation rule: addQualifier;volatile
mutate pos: 661
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 661
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 55.62397027015686
----------
mutation rule: optOff;
mutate pos: 742
mutate cmd: ./exefile/optOff-mul ./main.c --   742
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 58.23396348953247
succeed? True
instantReward: 1.2802130274477673e-05
EndTime: 114.92289757728577
----------
mutation rule: disableLoopUnroll;
mutate pos: 1045
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 115.19983744621277
----------
mutation rule: addGoto;
mutate pos: 1227
mutate cmd: ./exefile/addGoto-mul ./main.c --   1227 1231
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 115.22720384597778
----------
mutation rule: add2Loop;
mutate pos: 842
mutate cmd: ./exefile/add2Loop-mul ./main.c --   842
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 125.72269868850708
----------
mutation rule: dupStmt;
mutate pos: 927
mutate cmd: ./exefile/dupStmt-mul ./main.c --   927
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 125.81504774093628
----------
mutation rule: repLoopCond;!
mutate pos: 1061
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "!" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 67.31844568252563
succeed? True
instantReward: 1.2802130274477673e-05
EndTime: 193.95249676704407
----------
mutation rule: repVarSameScope;
mutate pos: 809
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   809
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 204.26431846618652
----------
mutation rule: moveStmt;
mutate pos: 1094
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1094
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 204.2956690788269
----------
mutation rule: disableLoopUnroll;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 204.58993577957153
----------
mutation rule: addIf;
mutate pos: 1227
mutate cmd: ./exefile/addIf-mul ./main.c --   1227
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 204.8133225440979
----------
mutation rule: moveStmt;
mutate pos: 1087
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1087
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 215.125394821167
----------
mutation rule: delLoop;
mutate pos: 846
mutate cmd: ./exefile/delLoop-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 215.41576099395752
----------
mutation rule: add2If;
mutate pos: 938
mutate cmd: ./exefile/add2If-mul ./main.c --   938
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 71.82317519187927
succeed? True
instantReward: 1.7101956899574522e-07
EndTime: 298.1993465423584
----------
mutation rule: add2Loop;
mutate pos: 1061
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1061
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 308.6973674297333
----------
mutation rule: delStmt;
mutate pos: 946
mutate cmd: ./exefile/delStmt-mul ./main.c --   946
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 308.72411608695984
----------
mutation rule: dupStmt;
mutate pos: 1094
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1094
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.63363718986511
succeed? True
instantReward: 0.0
EndTime: 369.1343457698822
----------
mutation rule: addWhile;
mutate pos: 1227
mutate cmd: ./exefile/addWhile-mul ./main.c --   1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 369.3417751789093
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 379.94849944114685
----------
mutation rule: addQualifier;const
mutate pos: 713
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 713
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 380.2350597381592
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 380.265020608902
----------
mutation rule: repLoopVar;0
mutate pos: 942
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "0" 942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 380.3741867542267
----------
mutation rule: addRepModifier;unsigned
mutate pos: 786
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 786
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 76.56454849243164
succeed? True
instantReward: 1.284488516672661e-05
EndTime: 457.64508056640625
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.803669929504395
succeed? True
instantReward: 1.0726210971845535e-08
EndTime: 518.2464847564697
----------
mutation rule: optOff;
mutate pos: 1045
mutate cmd: ./exefile/optOff-mul ./main.c --   1045
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 528.8314146995544
----------
mutation rule: TurnConstantVar;
mutate pos: 799
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   799
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.70476460456848
succeed? True
instantReward: 1.2847030408920977e-05
EndTime: 579.3246717453003
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.411630392074585
succeed? True
instantReward: 2.9709459293880214e-09
EndTime: 639.5192732810974
----------
mutation rule: moveStmt;
mutate pos: 942
mutate cmd: ./exefile/moveStmt-mul ./main.c --   942
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 639.54834151268
----------
mutation rule: moveStmt;
mutate pos: 1045
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1045
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 649.8780813217163
----------
mutation rule: TurnConstantVar;
mutate pos: 1235
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   1235
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 660.5120100975037
----------
mutation rule: moveStmt;
mutate pos: 927
mutate cmd: ./exefile/moveStmt-mul ./main.c --   927
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 660.5364606380463
----------
mutation rule: repVarSameScope;
mutate pos: 1213
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1213
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 660.5595796108246
----------
mutation rule: repLoopVar;0
mutate pos: 846
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "0" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 660.6713881492615
----------
mutation rule: TurnConstantVar;
mutate pos: 1159
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   1159
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 671.2746784687042
----------
mutation rule: addQualifier;const
mutate pos: 636
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 636
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 671.5861206054688
----------
mutation rule: repBinaryOp;<,>=
mutate pos: 820
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "<" ">=" 820
pos_left_this_mutator: [3] ['820', '983', '961']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 685.2263028621674
----------
mutation rule: delStmt;
mutate pos: 1227
mutate cmd: ./exefile/delStmt-mul ./main.c --   1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 685.2566137313843
----------
mutation rule: disableLoopVect;
mutate pos: 1045
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 695.9221158027649
----------
mutation rule: add2If;
mutate pos: 1049
mutate cmd: ./exefile/add2If-mul ./main.c --   1049
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.18061923980713
succeed? True
instantReward: 1.2847525566575878e-05
EndTime: 746.1077773571014
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 746.1285853385925
----------
mutation rule: repLoopVar;1
mutate pos: 846
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "1" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 746.2384791374207
----------
mutation rule: add2If;
mutate pos: 927
mutate cmd: ./exefile/add2If-mul ./main.c --   927
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 746.4583501815796
----------
mutation rule: repLoopVar;2
mutate pos: 1061
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "2" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 746.565744638443
----------
mutation rule: addInline;
mutate pos: 593
mutate cmd: ./exefile/addInline-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 746.5871977806091
----------
mutation rule: repLoopVar;1
mutate pos: 846
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "1" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 746.6991047859192
----------
mutation rule: repLoopCond;0
mutate pos: 942
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.030678272247314
succeed? True
instantReward: 3.4492129510991105e-06
EndTime: 806.5002946853638
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 806.5694177150726
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 807.1001129150391
----------
mutation rule: delLoop;
mutate pos: 1061
mutate cmd: ./exefile/delLoop-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 807.1271169185638
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 807.2029564380646
----------
mutation rule: repBinaryOp;!=,>
mutate pos: 1166
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "!=" ">" 1166
pos_left_this_mutator: [1] ['1166']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 817.8004667758942
----------
mutation rule: delIf;
mutate pos: 1057
mutate cmd: ./exefile/delIf-mul ./main.c --   1057
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 817.8297345638275
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 817.849996805191
----------
mutation rule: addIf;
mutate pos: 1045
mutate cmd: ./exefile/addIf-mul ./main.c --   1045
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 818.3545801639557
----------
mutation rule: addGoto;
mutate pos: 1044
mutate cmd: ./exefile/addGoto-mul ./main.c --   1044 846
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 50.194408893585205
succeed? True
instantReward: 1.3340270273875748e-05
EndTime: 869.3445110321045
----------
mutation rule: moveStmt;
mutate pos: 1045
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1045
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 879.6764879226685
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 879.7492055892944
----------
mutation rule: addRepModifier;signed
mutate pos: 661
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 661
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 51.600403785705566
succeed? True
instantReward: 8.542898714513345e-09
EndTime: 942.125848531723
----------
mutation rule: repBinaryExpr;
mutate pos: 820
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   820
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 952.747156381607
----------
mutation rule: disableLoopUnroll;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 953.0720255374908
----------
mutation rule: TurnConstantVar;
mutate pos: 706
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   706
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 953.3886921405792
----------
mutation rule: addVarDecl;
mutate pos: 946
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   946
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 964.0096282958984
----------
mutation rule: repVarSameScope;
mutate pos: 897
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   897
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 964.038658618927
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 964.1228682994843
----------
mutation rule: addLoopIf;
mutate pos: 1227
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 964.5310053825378
----------
mutation rule: delStmt;
mutate pos: 1239
mutate cmd: ./exefile/delStmt-mul ./main.c --   1239
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 975.2099778652191
----------
mutation rule: addWhile;
mutate pos: 1014
mutate cmd: ./exefile/addWhile-mul ./main.c --   1014
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 975.4242684841156
----------
mutation rule: repBinaryExpr;
mutate pos: 983
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   983
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 986.0437836647034
----------
mutation rule: moveStmt;
mutate pos: 1061
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1061
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 986.0786604881287
----------
mutation rule: repBinaryExpr;
mutate pos: 983
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   983
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 996.721964597702
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 997.2758388519287
----------
mutation rule: delStmt;
mutate pos: 946
mutate cmd: ./exefile/delStmt-mul ./main.c --   946
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 997.301038980484
----------
mutation rule: repLoopVar;1
mutate pos: 1061
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "1" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 997.4145641326904
----------
mutation rule: addInline;
mutate pos: 593
mutate cmd: ./exefile/addInline-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 997.4371702671051
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1008.0509667396545
----------
mutation rule: addQualifier;const
mutate pos: 661
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 661
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1008.3922741413116
----------
mutation rule: repIntConstant;*-1
mutate pos: 813
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 813
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1019.1076908111572
----------
mutation rule: addRepModifier;long
mutate pos: 677
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 677
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1029.7505431175232
----------
mutation rule: repLoopCond;1
mutate pos: 1045
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.469035625457764
succeed? True
instantReward: 1.3341338136215062e-05
EndTime: 1080.044408082962
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.21056318283081
succeed? True
instantReward: 4.805957541856982e-09
EndTime: 1140.7023282051086
----------
mutation rule: repRemUnaryOp;post++,pre++
mutate pos: 969
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "pre++" 969
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1151.3264591693878
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1152.6275615692139
----------
mutation rule: addFuncArg;
mutate pos: 593
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1152.654304265976
----------
mutation rule: addWhile;
mutate pos: 1231
mutate cmd: ./exefile/addWhile-mul ./main.c --   1231
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1163.478473186493
----------
mutation rule: optOff;
mutate pos: 1117
mutate cmd: ./exefile/optOff-mul ./main.c --   1117
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.12412905693054
succeed? True
instantReward: 1.3341872131497491e-05
EndTime: 1213.4664061069489
----------
mutation rule: addInline;
mutate pos: 593
mutate cmd: ./exefile/addInline-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1213.4951224327087
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1213.5668466091156
----------
mutation rule: delLoop;
mutate pos: 846
mutate cmd: ./exefile/delLoop-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1213.884211063385
----------
mutation rule: repBinaryOp;<,==
mutate pos: 820
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "<" "==" 820
pos_left_this_mutator: [3] ['820', '983', '961']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.832879066467285
succeed? True
instantReward: 6.029898840928641e-06
EndTime: 1273.5268907546997
----------
mutation rule: addVarDecl;
mutate pos: 1049
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1049
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1284.1635723114014
----------
mutation rule: delLoop;
mutate pos: 846
mutate cmd: ./exefile/delLoop-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1284.4993917942047
----------
mutation rule: delIf;
mutate pos: 1057
mutate cmd: ./exefile/delIf-mul ./main.c --   1057
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1284.5256876945496
----------
mutation rule: addRepModifier;short
mutate pos: 786
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 786
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.27838158607483
succeed? True
instantReward: 1.3944862015590355e-05
EndTime: 1333.5477032661438
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1333.633619070053
----------
mutation rule: delLoop;
mutate pos: 1045
mutate cmd: ./exefile/delLoop-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1333.94624209404
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1334.0481629371643
----------
mutation rule: repLoopCond;1
mutate pos: 1045
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1334.0980241298676
----------
mutation rule: repBinaryExpr;
mutate pos: 983
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   983
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.98575782775879
succeed? True
instantReward: 0.0
EndTime: 1394.8831961154938
----------
mutation rule: moveStmt;
mutate pos: 1094
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1094
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1394.9104752540588
----------
mutation rule: add2Loop;
mutate pos: 1045
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1045
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.35495972633362
succeed? True
instantReward: 1.3944862015590355e-05
EndTime: 1444.2364597320557
----------
mutation rule: optOff;
mutate pos: 846
mutate cmd: ./exefile/optOff-mul ./main.c --   846
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.928085803985596
succeed? True
instantReward: 0.0
EndTime: 1504.9783053398132
----------
mutation rule: addLoopIf;
mutate pos: 938
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   938
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1516.004008769989
----------
mutation rule: disableLoopVect;
mutate pos: 942
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1526.6795845031738
----------
mutation rule: addVarDecl;
mutate pos: 1057
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1057
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1527.0327558517456
----------
mutation rule: addRepModifier;short
mutate pos: 661
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 661
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1537.682318687439
----------
mutation rule: disableLoopVect;
mutate pos: 846
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1548.3576500415802
----------
mutation rule: addQualifier;const
mutate pos: 713
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 713
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1548.7124922275543
----------
mutation rule: addWhile;
mutate pos: 1239
mutate cmd: ./exefile/addWhile-mul ./main.c --   1239
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1559.5727667808533
----------
mutation rule: addFuncArg;
mutate pos: 593
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1559.6022517681122
----------
mutation rule: addQualifier;restrict
mutate pos: 766
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 766
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1559.9444525241852
----------
mutation rule: optOff;
mutate pos: 846
mutate cmd: ./exefile/optOff-mul ./main.c --   846
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1570.5654709339142
----------
mutation rule: addInline;
mutate pos: 593
mutate cmd: ./exefile/addInline-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1570.5980994701385
----------
mutation rule: delLoop;
mutate pos: 942
mutate cmd: ./exefile/delLoop-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1570.6295139789581
----------
mutation rule: repRemUnaryOp;post++,~
mutate pos: 828
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "~" 828
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1581.006344795227
----------
mutation rule: addVarDecl;
mutate pos: 1061
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1061
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1591.6789727210999
----------
mutation rule: repLoopCond;1
mutate pos: 942
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1602.3394885063171
----------
mutation rule: delStmt;
mutate pos: 1227
mutate cmd: ./exefile/delStmt-mul ./main.c --   1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1602.3706917762756
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1602.4839000701904
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1613.1550750732422
----------
mutation rule: repIfCond;1
mutate pos: 1049
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1049
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.91826581954956
succeed? True
instantReward: 1.3944862015590355e-05
EndTime: 1662.9449043273926
----------
mutation rule: dupStmt;
mutate pos: 1087
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1087
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1663.3466336727142
----------
mutation rule: repLoopCond;1
mutate pos: 1061
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1673.7583634853363
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1673.8490905761719
----------
mutation rule: addWhile;
mutate pos: 1049
mutate cmd: ./exefile/addWhile-mul ./main.c --   1049
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.097530364990234
succeed? True
instantReward: 1.3944862015590355e-05
EndTime: 1723.9779710769653
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1724.0860486030579
----------
mutation rule: TurnConstantVar;
mutate pos: 799
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   799
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1724.1259841918945
----------
mutation rule: repVarSameScope;
mutate pos: 1068
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1068
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1734.497772693634
----------
mutation rule: delLoop;
mutate pos: 1045
mutate cmd: ./exefile/delLoop-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1734.8689894676208
----------
mutation rule: addWhile;
mutate pos: 1083
mutate cmd: ./exefile/addWhile-mul ./main.c --   1083
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.61448073387146
succeed? True
instantReward: 1.3944862015590355e-05
EndTime: 1783.5456998348236
----------
mutation rule: addInline;
mutate pos: 593
mutate cmd: ./exefile/addInline-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1783.5676355361938
----------
mutation rule: TurnConstantVar;
mutate pos: 1079
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   1079
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.6180624961853
succeed? True
instantReward: 1.3426295668398378e-07
EndTime: 1844.0743749141693
----------
mutation rule: addVarDecl;
mutate pos: 1083
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1083
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.92081952095032
succeed? True
instantReward: 0.0
EndTime: 1903.8239243030548
----------
mutation rule: dupStmt;
mutate pos: 1045
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1045
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.007824659347534
succeed? True
instantReward: 1.3953812879369287e-05
EndTime: 1953.684865951538
----------
mutation rule: addQualifier;const
mutate pos: 661
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 661
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1954.0438604354858
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1954.1480226516724
----------
mutation rule: repIntConstant;-1
mutate pos: 1235
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 1235
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 52.46467590332031
succeed? True
instantReward: 0.0
EndTime: 2017.4570381641388
----------
mutation rule: delLoop;
mutate pos: 1061
mutate cmd: ./exefile/delLoop-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2017.4824106693268
----------
mutation rule: addRepModifier;long
mutate pos: 693
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 693
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.345375776290894
succeed? True
instantReward: 2.182871768265256e-07
EndTime: 2075.689317703247
----------
mutation rule: addVarDecl;
mutate pos: 1227
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1227
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2075.7132444381714
----------
mutation rule: delLoop;
mutate pos: 1045
mutate cmd: ./exefile/delLoop-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2076.081805229187
----------
mutation rule: repIntConstant;*0
mutate pos: 813
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 813
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2086.856958627701
----------
mutation rule: delIf;
mutate pos: 938
mutate cmd: ./exefile/delIf-mul ./main.c --   938
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2086.8859944343567
----------
mutation rule: repIntConstant;-1
mutate pos: 813
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 813
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2097.6823296546936
----------
mutation rule: addWhile;
mutate pos: 1061
mutate cmd: ./exefile/addWhile-mul ./main.c --   1061
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2108.302926301956
----------
mutation rule: repBinaryExpr;
mutate pos: 983
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   983
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2108.439641714096
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2119.1443552970886
----------
mutation rule: addGoto;
mutate pos: 1049
mutate cmd: ./exefile/addGoto-mul ./main.c --   1049 946
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.59976530075073
succeed? True
instantReward: 1.3967455827920945e-05
EndTime: 2168.666989803314
----------
mutation rule: add2Loop;
mutate pos: 842
mutate cmd: ./exefile/add2Loop-mul ./main.c --   842
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2179.2730448246
----------
mutation rule: dupStmt;
mutate pos: 1044
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1044
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.11964273452759
succeed? True
instantReward: 0.0
EndTime: 2239.2677857875824
----------
mutation rule: repLoopCond;1
mutate pos: 846
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2249.6727674007416
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2249.848735809326
----------
mutation rule: addVarDecl;
mutate pos: 1044
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1044
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2250.225149154663
----------
mutation rule: addGoto;
mutate pos: 846
mutate cmd: ./exefile/addGoto-mul ./main.c --   846 1231
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2250.608528137207
----------
mutation rule: repIntConstant;*0
mutate pos: 779
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 779
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2261.3739359378815
----------
mutation rule: addWhile;
mutate pos: 1044
mutate cmd: ./exefile/addWhile-mul ./main.c --   1044
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.23734760284424
succeed? True
instantReward: 1.3967455827920945e-05
EndTime: 2311.6537063121796
----------
mutation rule: repIfCond;1
mutate pos: 1057
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1057
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2322.2545249462128
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2322.513867855072
----------
mutation rule: repBinaryExpr;
mutate pos: 820
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   820
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 50.13670063018799
succeed? True
instantReward: 0.0
EndTime: 2383.5128750801086
----------
mutation rule: repIfCond;0
mutate pos: 946
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 946
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2394.20739030838
----------
mutation rule: delLoop;
mutate pos: 942
mutate cmd: ./exefile/delLoop-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2394.235556125641
----------
mutation rule: repBinaryOp;<,>=
mutate pos: 961
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "<" ">=" 961
pos_left_this_mutator: [3] ['820', '983', '961']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.1502788066864
succeed? True
instantReward: 1.3967455827920945e-05
EndTime: 2444.257260322571
----------
mutation rule: delStmt;
mutate pos: 1061
mutate cmd: ./exefile/delStmt-mul ./main.c --   1061
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2444.2799537181854
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2444.4178624153137
----------
mutation rule: TurnConstantVar;
mutate pos: 1159
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   1159
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.58715796470642
succeed? True
instantReward: 0.0
EndTime: 2503.802232027054
----------
mutation rule: repLoopVar;0
mutate pos: 1045
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "0" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2503.9086344242096
----------
mutation rule: addWhile;
mutate pos: 1151
mutate cmd: ./exefile/addWhile-mul ./main.c --   1151
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2514.896001815796
----------
mutation rule: addWhile;
mutate pos: 1083
mutate cmd: ./exefile/addWhile-mul ./main.c --   1083
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2525.5346586704254
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2525.7281255722046
----------
mutation rule: delLoop;
mutate pos: 1045
mutate cmd: ./exefile/delLoop-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2526.1263546943665
----------
mutation rule: repLoopCond;1
mutate pos: 1061
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2536.5719754695892
----------
mutation rule: repLoopCond;1
mutate pos: 942
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2547.322944164276
----------
mutation rule: moveStmt;
mutate pos: 1087
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1087
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2558.13587641716
----------
mutation rule: disableLoopVect;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2568.8397903442383
----------
mutation rule: delStmt;
mutate pos: 1231
mutate cmd: ./exefile/delStmt-mul ./main.c --   1231
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2568.8670098781586
----------
mutation rule: addWhile;
mutate pos: 1044
mutate cmd: ./exefile/addWhile-mul ./main.c --   1044
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.933913707733154
succeed? True
instantReward: 1.3967455827920945e-05
EndTime: 2618.9641926288605
----------
mutation rule: delStmt;
mutate pos: 1049
mutate cmd: ./exefile/delStmt-mul ./main.c --   1049
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.800365686416626
succeed? True
instantReward: 1.3967455827920945e-05
EndTime: 2669.6612713336945
----------
mutation rule: TurnConstantVar;
mutate pos: 1235
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   1235
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.89785599708557
succeed? True
instantReward: 5.326919394569316e-08
EndTime: 2728.4892897605896
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2729.18688082695
----------
mutation rule: delIf;
mutate pos: 1094
mutate cmd: ./exefile/delIf-mul ./main.c --   1094
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.368226766586304
succeed? True
instantReward: 2.475642549717419e-06
EndTime: 2789.5383200645447
----------
mutation rule: add2If;
mutate pos: 1227
mutate cmd: ./exefile/add2If-mul ./main.c --   1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2789.753168106079
----------
mutation rule: add2If;
mutate pos: 1151
mutate cmd: ./exefile/add2If-mul ./main.c --   1151
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2790.379225730896
----------
mutation rule: disableLoopUnroll;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2790.8046617507935
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2790.995536327362
----------
mutation rule: repVarSameScope;
mutate pos: 1030
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1030
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.48886466026306
succeed? True
instantReward: 1.4087880196666808e-05
EndTime: 2840.376988887787
----------
mutation rule: addWhile;
mutate pos: 1231
mutate cmd: ./exefile/addWhile-mul ./main.c --   1231
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2840.979693174362
----------
mutation rule: addVarDecl;
mutate pos: 873
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   873
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.572744846343994
succeed? True
instantReward: 0.0
EndTime: 2901.448281764984
----------
mutation rule: disableLoopVect;
mutate pos: 942
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2912.167845726013
----------
mutation rule: repLoopVar;1
mutate pos: 846
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "1" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2912.281252145767
----------
mutation rule: addGoto;
mutate pos: 1094
mutate cmd: ./exefile/addGoto-mul ./main.c --   1094 1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2912.3062994480133
----------
mutation rule: repBinaryExpr;
mutate pos: 1166
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1166
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2923.024567604065
----------
mutation rule: dupStmt;
mutate pos: 1227
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2923.0526111125946
----------
mutation rule: addWhile;
mutate pos: 1083
mutate cmd: ./exefile/addWhile-mul ./main.c --   1083
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2933.717507839203
----------
mutation rule: optOff;
mutate pos: 1117
mutate cmd: ./exefile/optOff-mul ./main.c --   1117
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.68873643875122
succeed? True
instantReward: 1.4087880196666808e-05
EndTime: 2983.2497234344482
----------
mutation rule: repIntConstant;+1
mutate pos: 1079
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 1079
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2993.6859188079834
----------
mutation rule: repBinaryExpr;
mutate pos: 983
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   983
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2993.885303258896
----------
mutation rule: repBinaryOp;!=,>=
mutate pos: 1166
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "!=" ">=" 1166
pos_left_this_mutator: [1] ['1166']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 51.128963470458984
succeed? True
instantReward: 2.604011355191436e-07
EndTime: 3056.0147666931152
----------
mutation rule: add2Loop;
mutate pos: 1061
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1061
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.74968457221985
succeed? True
instantReward: 1.409920198516764e-05
EndTime: 3105.911374092102
----------
mutation rule: repRemUnaryOp;post++,pre--
mutate pos: 828
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "pre--" 828
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.75384163856506
succeed? True
instantReward: 3.817150485285617e-08
EndTime: 3168.4815559387207
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3168.6710679531097
----------
mutation rule: dupStmt;
mutate pos: 842
mutate cmd: ./exefile/dupStmt-mul ./main.c --   842
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3169.0959231853485
----------
mutation rule: optOff;
mutate pos: 593
mutate cmd: ./exefile/optOff-mul ./main.c --   593
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3179.6780953407288
----------
mutation rule: repBinaryExpr;
mutate pos: 961
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   961
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3190.4620690345764
----------
mutation rule: addIf;
mutate pos: 1090
mutate cmd: ./exefile/addIf-mul ./main.c --   1090
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3191.105490207672
----------
mutation rule: dupStmt;
mutate pos: 946
mutate cmd: ./exefile/dupStmt-mul ./main.c --   946
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3191.131007194519
----------
mutation rule: repLoopVar;2
mutate pos: 1045
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "2" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3191.2457683086395
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3202.043506860733
----------
mutation rule: delLoop;
mutate pos: 942
mutate cmd: ./exefile/delLoop-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3202.0727047920227
----------
mutation rule: repLoopCond;!
mutate pos: 942
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "!" 942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3212.8280646800995
----------
mutation rule: repLoopCond;!
mutate pos: 846
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "!" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3226.4752011299133
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3226.6689772605896
----------
mutation rule: addFuncArg;
mutate pos: 593
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3226.690643787384
----------
mutation rule: addFuncArg;
mutate pos: 593
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3226.7107384204865
----------
mutation rule: repVarSameScope;
mutate pos: 824
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   824
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3237.1595690250397
----------
mutation rule: addVarDecl;
mutate pos: 1049
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1049
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3247.9444150924683
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3247.9734041690826
----------
mutation rule: delIf;
mutate pos: 1231
mutate cmd: ./exefile/delIf-mul ./main.c --   1231
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3247.9943475723267
----------
mutation rule: dupStmt;
mutate pos: 1151
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1151
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3248.4427456855774
----------
mutation rule: optOff;
mutate pos: 846
mutate cmd: ./exefile/optOff-mul ./main.c --   846
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3259.1428306102753
----------
mutation rule: repLoopVar;2
mutate pos: 846
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "2" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3259.2584438323975
----------
mutation rule: repLoopVar;1
mutate pos: 846
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "1" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3259.36852478981
----------
mutation rule: repBinaryExpr;
mutate pos: 1083
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1083
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3270.1008172035217
----------
mutation rule: delIf;
mutate pos: 946
mutate cmd: ./exefile/delIf-mul ./main.c --   946
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3270.133321046829
----------
mutation rule: addWhile;
mutate pos: 1045
mutate cmd: ./exefile/addWhile-mul ./main.c --   1045
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3281.092784166336
----------
mutation rule: add2Loop;
mutate pos: 1057
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1057
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3291.7984302043915
----------
mutation rule: delLoop;
mutate pos: 1061
mutate cmd: ./exefile/delLoop-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3291.828518629074
----------
mutation rule: dupStmt;
mutate pos: 946
mutate cmd: ./exefile/dupStmt-mul ./main.c --   946
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3291.854275226593
----------
mutation rule: repBinaryOp;!=,==
mutate pos: 1166
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "!=" "==" 1166
pos_left_this_mutator: [1] ['1166']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3302.706699848175
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3302.922884941101
----------
mutation rule: dupStmt;
mutate pos: 1061
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1061
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3302.947761774063
----------
mutation rule: repIntConstant;*-1
mutate pos: 813
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 813
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3313.7587463855743
----------
mutation rule: repLoopCond;0
mutate pos: 846
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3324.6377906799316
----------
mutation rule: repLoopVar;0
mutate pos: 1045
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "0" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3324.7618844509125
----------
mutation rule: addIf;
mutate pos: 1057
mutate cmd: ./exefile/addIf-mul ./main.c --   1057
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3325.41699385643
----------
mutation rule: TurnConstantVar;
mutate pos: 976
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   976
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3336.165457725525
----------
mutation rule: addWhile;
mutate pos: 1083
mutate cmd: ./exefile/addWhile-mul ./main.c --   1083
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3347.1259241104126
----------
mutation rule: moveStmt;
mutate pos: 1044
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1044
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3357.905342578888
----------
mutation rule: addGoto;
mutate pos: 1061
mutate cmd: ./exefile/addGoto-mul ./main.c --   1061 1049
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 50.99724864959717
succeed? True
instantReward: 1.4100792464536508e-05
EndTime: 3409.868677854538
----------
mutation rule: moveStmt;
mutate pos: 1014
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1014
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3409.895468711853
----------
mutation rule: repVarSameScope;
mutate pos: 809
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   809
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3420.3851046562195
----------
mutation rule: dupStmt;
mutate pos: 1045
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1045
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3420.4695098400116
----------
mutation rule: repRemUnaryOp;post++,~
mutate pos: 828
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "~" 828
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3430.9358155727386
----------
mutation rule: delStmt;
mutate pos: 1239
mutate cmd: ./exefile/delStmt-mul ./main.c --   1239
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 70.53185987472534
succeed? True
instantReward: 9.569861695808203e-07
EndTime: 3512.421575307846
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3523.2072286605835
----------
mutation rule: addQualifier;restrict
mutate pos: 677
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 677
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3523.644795656204
----------
mutation rule: disableLoopUnroll;
mutate pos: 846
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3524.0877091884613
----------
mutation rule: delLoop;
mutate pos: 1045
mutate cmd: ./exefile/delLoop-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3524.5275485515594
----------
mutation rule: moveStmt;
mutate pos: 1014
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1014
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3524.55353808403
----------
mutation rule: add2Loop;
mutate pos: 1231
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1231
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3525.193587779999
----------
mutation rule: addIf;
mutate pos: 1053
mutate cmd: ./exefile/addIf-mul ./main.c --   1053
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3525.824942588806
----------
mutation rule: addWhile;
mutate pos: 946
mutate cmd: ./exefile/addWhile-mul ./main.c --   946
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3536.4950416088104
----------
mutation rule: dupStmt;
mutate pos: 1231
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1231
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3536.52477312088
----------
mutation rule: addLoopIf;
mutate pos: 927
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   927
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3536.930904865265
----------
mutation rule: repRemUnaryOp;post++,pre++
mutate pos: 1041
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "pre++" 1041
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.905457735061646
succeed? True
instantReward: 1.4139071911319742e-05
EndTime: 3587.8104639053345
----------
mutation rule: repVarSameScope;
mutate pos: 890
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   890
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.467310428619385
succeed? True
instantReward: 0.0
EndTime: 3647.190147638321
