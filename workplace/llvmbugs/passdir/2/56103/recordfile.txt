----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 0.01802992820739746
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 0.8961334228515625
----------
mutation rule: repRemUnaryOp;~,pre++
mutate pos: 944
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre++" 944
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 70.93993473052979
succeed? True
instantReward: 1.59821000479463e-05
EndTime: 72.56342244148254
----------
mutation rule: TurnConstantVar;
mutate pos: 737
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   737
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.3617684841156
succeed? True
instantReward: 1.59821000479463e-05
EndTime: 122.65434837341309
----------
mutation rule: remModifierQualifier;short
mutate pos: 682
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 682
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 51.001532316207886
succeed? True
instantReward: 7.152770828487264e-09
EndTime: 174.4769685268402
----------
mutation rule: repIntConstant;-1
mutate pos: 737
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 737
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 75.03135776519775
succeed? True
instantReward: 6.956744701907636e-08
EndTime: 250.3729853630066
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 51.80737042427063
succeed? True
instantReward: 1.600128010240819e-05
EndTime: 302.96135234832764
----------
mutation rule: moveStmt;
mutate pos: 1145
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 303.0053131580353
----------
mutation rule: repVarSameScope;
mutate pos: 665
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   665
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.56961011886597
succeed? True
instantReward: 1.2052053089103344e-07
EndTime: 354.31204438209534
----------
mutation rule: addRepModifier;unsigned
mutate pos: 537
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 537
pos_left_this_mutator: [9] ['967', '512', '537', '575', '598', '621', '652', '682', '759']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.990994930267334
succeed? True
instantReward: 1.60253842085864e-05
EndTime: 405.0298161506653
----------
mutation rule: addLoopIf;
mutate pos: 1141
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 405.44024419784546
----------
mutation rule: dupStmt;
mutate pos: 1153
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 405.72867250442505
----------
mutation rule: add2Loop;
mutate pos: 914
mutate cmd: ./exefile/add2Loop-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 416.24772810935974
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.402812242507935
succeed? True
instantReward: 0.0
EndTime: 465.5201289653778
----------
mutation rule: repIntConstant;*0
mutate pos: 737
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 737
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 465.5845763683319
----------
mutation rule: remModifierQualifier;short
mutate pos: 598
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 598
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.38369417190552
succeed? True
instantReward: 1.60253842085864e-05
EndTime: 514.6772031784058
----------
mutation rule: addQualifier;restrict
mutate pos: 682
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 682
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 514.9895670413971
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.23220634460449
succeed? True
instantReward: 2.1266867645849383e-06
EndTime: 566.044159412384
----------
mutation rule: dupStmt;
mutate pos: 1145
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 566.0686185359955
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 566.8179302215576
----------
mutation rule: repRemUnaryOp;~,pre++
mutate pos: 1060
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre++" 1060
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 567.1281599998474
----------
mutation rule: addGoto;
mutate pos: 914
mutate cmd: ./exefile/addGoto-mul ./main.c --   914 838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 567.432516336441
----------
mutation rule: repIntConstant;-1
mutate pos: 824
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 824
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 568.1381287574768
----------
mutation rule: add2Loop;
mutate pos: 838
mutate cmd: ./exefile/add2Loop-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 569.0233685970306
----------
mutation rule: repRemUnaryOp;~,pre--
mutate pos: 944
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre--" 944
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.84170079231262
succeed? True
instantReward: 1.6329196603527108e-05
EndTime: 617.7808048725128
----------
mutation rule: addGoto;
mutate pos: 838
mutate cmd: ./exefile/addGoto-mul ./main.c --   838 838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 618.081796169281
----------
mutation rule: add2Loop;
mutate pos: 1145
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 628.6169009208679
----------
mutation rule: addVarDecl;
mutate pos: 1141
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1141
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 628.649619102478
----------
mutation rule: addVarDecl;
mutate pos: 914
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   914
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.47775387763977
succeed? True
instantReward: 0.0
EndTime: 679.9095635414124
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 680.5825562477112
----------
mutation rule: repRemUnaryOp;~,delete
mutate pos: 1060
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "delete" 1060
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 51.199278354644775
succeed? True
instantReward: 1.6329196603527108e-05
EndTime: 732.7322783470154
----------
mutation rule: addRepModifier;signed
mutate pos: 537
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 537
pos_left_this_mutator: [10] ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.58645296096802
succeed? True
instantReward: 0.0
EndTime: 781.1547918319702
----------
mutation rule: add2Loop;
mutate pos: 1141
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 781.3639371395111
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 782.0919511318207
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 782.8558480739594
----------
mutation rule: repVarSameScope;
mutate pos: 775
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   775
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 783.1908235549927
----------
mutation rule: delStmt;
mutate pos: 838
mutate cmd: ./exefile/delStmt-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 783.9013938903809
----------
mutation rule: repVarSameScope;
mutate pos: 779
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   779
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 784.2049353122711
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 784.2840950489044
----------
mutation rule: add2If;
mutate pos: 838
mutate cmd: ./exefile/add2If-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 784.8126859664917
----------
mutation rule: addLoopIf;
mutate pos: 800
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 785.8943173885345
----------
mutation rule: remModifierQualifier;short
mutate pos: 652
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 652
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 785.9633917808533
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 786.0386211872101
----------
mutation rule: repVarSameScope;
mutate pos: 1066
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1066
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.07208299636841
succeed? True
instantReward: 1.6329196603527108e-05
EndTime: 835.8636672496796
----------
mutation rule: dupStmt;
mutate pos: 1153
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 836.1811602115631
----------
mutation rule: repIntConstant;*0
mutate pos: 984
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 984
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.73449087142944
succeed? True
instantReward: 0.0
EndTime: 885.7110426425934
----------
mutation rule: add2If;
mutate pos: 1153
mutate cmd: ./exefile/add2If-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 51.124778509140015
succeed? True
instantReward: 1.0138712312244918e-07
EndTime: 937.8954789638519
----------
mutation rule: repBinaryOp;>,<=
mutate pos: 1080
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "<=" 1080
pos_left_this_mutator: [1] ['1080']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.8597993850708
succeed? True
instantReward: 2.406303473009516e-07
EndTime: 987.8827786445618
----------
mutation rule: repVarSameScope;
mutate pos: 1066
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1066
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 988.5815472602844
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 988.6797721385956
----------
mutation rule: repBinaryOp;>,==
mutate pos: 1080
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "==" 1080
pos_left_this_mutator: [1] ['1080']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.036036252975464
succeed? True
instantReward: 1.6363398350569445e-05
EndTime: 1038.5443649291992
----------
mutation rule: addVarDecl;
mutate pos: 772
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   772
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.927183389663696
succeed? True
instantReward: 0.0
EndTime: 1088.3884456157684
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1088.4750287532806
----------
mutation rule: repRemUnaryOp;~,pre--
mutate pos: 944
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre--" 944
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1088.5121533870697
----------
mutation rule: remModifierQualifier;long
mutate pos: 575
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "long" 575
pos_left_this_mutator: [3] ['537', '575', '967']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.632187604904175
succeed? True
instantReward: 1.6363398350569445e-05
EndTime: 1137.9276750087738
----------
mutation rule: addRepModifier;long
mutate pos: 759
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 759
pos_left_this_mutator: [7] ['512', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.68667006492615
succeed? True
instantReward: 0.0
EndTime: 1188.4767923355103
----------
mutation rule: addLoopIf;
mutate pos: 1141
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1188.878937959671
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1188.9050154685974
----------
mutation rule: delStmt;
mutate pos: 838
mutate cmd: ./exefile/delStmt-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1189.614515542984
----------
mutation rule: moveStmt;
mutate pos: 838
mutate cmd: ./exefile/moveStmt-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1189.965708732605
----------
mutation rule: add2Loop;
mutate pos: 800
mutate cmd: ./exefile/add2Loop-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1190.87606215477
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1191.4582493305206
----------
mutation rule: repIfCond;0
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.0074987411499
succeed? True
instantReward: 1.6363398350569445e-05
EndTime: 1240.2493331432343
----------
mutation rule: repIntConstant;-1
mutate pos: 900
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 900
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 51.44752216339111
succeed? True
instantReward: 1.6363398350569445e-05
EndTime: 1292.44695186615
----------
mutation rule: addWhile;
mutate pos: 1141
mutate cmd: ./exefile/addWhile-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1292.6631064414978
----------
mutation rule: remModifierQualifier;short
mutate pos: 652
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 652
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1292.7484650611877
----------
mutation rule: addQualifier;volatile
mutate pos: 575
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 575
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.450852394104004
succeed? True
instantReward: 1.2377232826279788e-07
EndTime: 1344.0537340641022
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1344.6486189365387
----------
mutation rule: addRepModifier;signed
mutate pos: 921
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 921
pos_left_this_mutator: [10] ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.58192014694214
succeed? True
instantReward: 1.6372239231159647e-05
EndTime: 1394.234697818756
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.787328243255615
succeed? True
instantReward: 0.0
EndTime: 1443.9907684326172
----------
mutation rule: addVarDecl;
mutate pos: -1
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   -1
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.71511125564575
succeed? True
instantReward: 0.0
EndTime: 1493.5969123840332
----------
mutation rule: delStmt;
mutate pos: 1153
mutate cmd: ./exefile/delStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1494.3405549526215
----------
mutation rule: add2If;
mutate pos: 914
mutate cmd: ./exefile/add2If-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.476054668426514
succeed? True
instantReward: 1.6372239231159647e-05
EndTime: 1543.848788022995
----------
mutation rule: moveStmt;
mutate pos: 914
mutate cmd: ./exefile/moveStmt-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.19244194030762
succeed? True
instantReward: 1.6372239231159647e-05
EndTime: 1594.9089920520782
----------
mutation rule: repIfCond;1
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.30360770225525
succeed? True
instantReward: 1.6372239231159647e-05
EndTime: 1645.199947834015
----------
mutation rule: TurnConstantVar;
mutate pos: 984
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   984
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.19577717781067
succeed? True
instantReward: 2.704425732102532e-07
EndTime: 1695.344638824463
----------
mutation rule: repVarSameScope;
mutate pos: 1002
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1002
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.75435018539429
succeed? True
instantReward: 1.6387263818560216e-05
EndTime: 1746.1366095542908
----------
mutation rule: addVarDecl;
mutate pos: 838
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   838
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 52.85180640220642
succeed? True
instantReward: 0.0
EndTime: 1799.9297361373901
----------
mutation rule: addWhile;
mutate pos: 1141
mutate cmd: ./exefile/addWhile-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1800.1542029380798
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.96506953239441
succeed? True
instantReward: 5.6135483807780856e-08
EndTime: 1849.9812817573547
----------
mutation rule: repIntConstant;*-1
mutate pos: 824
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 824
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.28559851646423
succeed? True
instantReward: 0.0
EndTime: 1899.2012169361115
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1899.4195430278778
----------
mutation rule: addVarDecl;
mutate pos: -1
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   -1
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1899.589384317398
----------
mutation rule: dupStmt;
mutate pos: 800
mutate cmd: ./exefile/dupStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1899.981705904007
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1900.0098099708557
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.28357291221619
succeed? True
instantReward: 1.639021831770799e-05
EndTime: 1950.1426548957825
----------
mutation rule: add2Loop;
mutate pos: 1145
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1960.7603397369385
----------
mutation rule: remModifierQualifier;short
mutate pos: 682
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 682
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1960.906616449356
----------
mutation rule: moveStmt;
mutate pos: 1141
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1960.933854341507
----------
mutation rule: repBinaryOp;|,&
mutate pos: 1052
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "|" "&" 1052
pos_left_this_mutator: [1] ['1052']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.56694507598877
succeed? True
instantReward: 1.639021831770799e-05
EndTime: 2011.5153467655182
----------
mutation rule: repBinaryOp;^,&
mutate pos: 1031
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "^" "&" 1031
pos_left_this_mutator: [1] ['1031']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.75615859031677
succeed? True
instantReward: 1.639021831770799e-05
EndTime: 2061.136258840561
----------
mutation rule: repBinaryOp;>,<
mutate pos: 1080
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "<" 1080
pos_left_this_mutator: [1] ['1080']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.17831873893738
succeed? True
instantReward: 0.0
EndTime: 2111.3790950775146
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 921
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 921
pos_left_this_mutator: [2] ['553', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.39113688468933
succeed? True
instantReward: 1.639021831770799e-05
EndTime: 2161.8263568878174
----------
mutation rule: add2If;
mutate pos: 1141
mutate cmd: ./exefile/add2If-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2162.0391144752502
----------
mutation rule: repBinaryOp;-,+
mutate pos: 1019
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "+" 1019
pos_left_this_mutator: [2] ['1019', '994']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.28908562660217
succeed? True
instantReward: 0.0
EndTime: 2212.2386400699615
----------
mutation rule: repVarSameScope;
mutate pos: 775
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   775
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2212.6591277122498
----------
mutation rule: dupStmt;
mutate pos: 914
mutate cmd: ./exefile/dupStmt-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2213.081705093384
----------
mutation rule: TurnConstantVar;
mutate pos: 1149
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   1149
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.28078079223633
succeed? True
instantReward: 1.2024919289291302e-06
EndTime: 2263.337080478668
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.13299012184143
succeed? True
instantReward: 0.0
EndTime: 2313.4197070598602
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2313.44491314888
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2313.6123456954956
----------
mutation rule: add2Loop;
mutate pos: 914
mutate cmd: ./exefile/add2Loop-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.539806842803955
succeed? True
instantReward: 3.288500115097504e-05
EndTime: 2363.2466962337494
----------
mutation rule: repRemUnaryOp;~,delete
mutate pos: 1039
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "delete" 1039
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.54902505874634
succeed? True
instantReward: 3.288500115097504e-05
EndTime: 2413.883147239685
----------
mutation rule: add2If;
mutate pos: 914
mutate cmd: ./exefile/add2If-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.13778901100159
succeed? True
instantReward: 1.644250057548752e-05
EndTime: 2465.107386112213
----------
mutation rule: delStmt;
mutate pos: 914
mutate cmd: ./exefile/delStmt-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.1885290145874
succeed? True
instantReward: 0.0
EndTime: 2514.2028312683105
----------
mutation rule: moveStmt;
mutate pos: 800
mutate cmd: ./exefile/moveStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.608314752578735
succeed? True
instantReward: 0.0
EndTime: 2563.7870790958405
----------
mutation rule: repIntConstant;*0
mutate pos: 984
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 984
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2563.8879618644714
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2564.0609228610992
----------
mutation rule: repBinaryOp;-,+
mutate pos: 994
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "+" 994
pos_left_this_mutator: [2] ['1019', '994']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.995739459991455
succeed? True
instantReward: 0.0
EndTime: 2614.9536113739014
----------
mutation rule: addWhile;
mutate pos: 914
mutate cmd: ./exefile/addWhile-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2625.6202960014343
----------
mutation rule: repBinaryOp;-,%
mutate pos: 994
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "%" 994
pos_left_this_mutator: [2] ['1019', '994']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.69222903251648
succeed? True
instantReward: 0.0
EndTime: 2676.1518535614014
----------
mutation rule: addQualifier;restrict
mutate pos: 652
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 652
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2676.59818649292
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.753653049468994
succeed? True
instantReward: 1.644250057548752e-05
EndTime: 2727.288953065872
----------
mutation rule: add2If;
mutate pos: 1145
mutate cmd: ./exefile/add2If-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.75572180747986
succeed? True
instantReward: 0.0
EndTime: 2777.1511685848236
----------
mutation rule: repIntConstant;+1
mutate pos: 1149
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 1149
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.512319564819336
succeed? True
instantReward: 0.0
EndTime: 2828.664395093918
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2829.8944845199585
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2830.1046357154846
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2830.305820941925
----------
mutation rule: repIntConstant;+1
mutate pos: 737
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 737
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.05570602416992
succeed? True
instantReward: 3.288500115097504e-05
EndTime: 2881.2544565200806
----------
mutation rule: add2Loop;
mutate pos: 1145
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2891.9560253620148
----------
mutation rule: moveStmt;
mutate pos: 800
mutate cmd: ./exefile/moveStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2891.987314939499
----------
mutation rule: addQualifier;restrict
mutate pos: 682
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 682
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2892.4381909370422
----------
mutation rule: addLoopIf;
mutate pos: 800
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.80697703361511
succeed? True
instantReward: 0.0
EndTime: 2943.6348254680634
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2943.6594200134277
----------
mutation rule: repIfCond;0
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2943.7051179409027
----------
mutation rule: repIfCond;!
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.439000368118286
succeed? True
instantReward: 8.381168387777693e-09
EndTime: 2994.116076231003
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2994.340920448303
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2994.5379860401154
----------
mutation rule: dupStmt;
mutate pos: 1153
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2994.990218639374
----------
mutation rule: add2If;
mutate pos: 800
mutate cmd: ./exefile/add2If-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.157087087631226
succeed? True
instantReward: 0.0
EndTime: 3044.3474476337433
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3044.582996606827
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3044.7893443107605
----------
mutation rule: repVarSameScope;
mutate pos: 820
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   820
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.95884132385254
succeed? True
instantReward: 1.6442770935758092e-05
EndTime: 3094.6677482128143
----------
mutation rule: TurnConstantVar;
mutate pos: 737
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   737
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3094.7020404338837
----------
mutation rule: add2If;
mutate pos: 1145
mutate cmd: ./exefile/add2If-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.176958084106445
succeed? True
instantReward: 1.6442770935758092e-05
EndTime: 3144.1055595874786
----------
mutation rule: repVarSameScope;
mutate pos: 779
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   779
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 51.63132667541504
succeed? True
instantReward: 0.0
EndTime: 3196.749849796295
----------
mutation rule: add2If;
mutate pos: 800
mutate cmd: ./exefile/add2If-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.618611574172974
succeed? True
instantReward: 8.922182334961115e-09
EndTime: 3246.6223204135895
----------
mutation rule: add2Loop;
mutate pos: 914
mutate cmd: ./exefile/add2Loop-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3257.330058336258
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3258.065999984741
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3258.29109787941
----------
mutation rule: addRepModifier;long
mutate pos: 598
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 598
pos_left_this_mutator: [7] ['512', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 68.32065963745117
succeed? True
instantReward: 1.644304130491976e-05
EndTime: 3327.5185713768005
----------
mutation rule: repIfCond;!
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3327.722610473633
----------
mutation rule: add2If;
mutate pos: 1153
mutate cmd: ./exefile/add2If-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.67522835731506
succeed? True
instantReward: 1.8386009943910722e-08
EndTime: 3378.6586043834686
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.2899751663208
succeed? True
instantReward: 1.644358206991811e-05
EndTime: 3428.8029766082764
----------
mutation rule: add2If;
mutate pos: 1141
mutate cmd: ./exefile/add2If-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3429.028598546982
----------
mutation rule: addQualifier;restrict
mutate pos: 967
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 967
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3429.51930308342
----------
mutation rule: repBinaryOp;>,!=
mutate pos: 1080
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "!=" 1080
pos_left_this_mutator: [1] ['1080']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 70.12614274024963
succeed? True
instantReward: 0.0
EndTime: 3500.7846109867096
----------
mutation rule: repVarSameScope;
mutate pos: 634
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   634
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3500.806438446045
----------
mutation rule: dupStmt;
mutate pos: 1141
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3500.832503557205
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 79.45063257217407
succeed? True
instantReward: 0.0
EndTime: 3581.339727163315
----------
mutation rule: addQualifier;restrict
mutate pos: 759
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 759
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3581.854528427124
----------
mutation rule: repBinaryOp;|,^
mutate pos: 1052
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "|" "^" 1052
pos_left_this_mutator: [1] ['1052']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 51.05953359603882
succeed? True
instantReward: -1.644358206991811e-05
EndTime: 3633.809576511383
