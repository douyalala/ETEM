----------
mutation rule: addGoto;
mutate pos: 842
mutate cmd: ./exefile/addGoto-mul ./main.c --   842 1239
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 0.2591404914855957
----------
mutation rule: moveStmt;
mutate pos: 927
mutate cmd: ./exefile/moveStmt-mul ./main.c --   927
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 0.2795288562774658
----------
mutation rule: repBinaryOp;!=,==
mutate pos: 1166
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "!=" "==" 1166
pos_left_this_mutator: [1] ['1166']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 10.922425031661987
----------
mutation rule: repIfCond;1
mutate pos: 1231
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1231
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 71.03042554855347
succeed? True
instantReward: 1.2802130274477673e-05
EndTime: 82.89591836929321
----------
mutation rule: repLoopCond;!
mutate pos: 1045
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "!" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.27621650695801
succeed? True
instantReward: 1.2802130274477673e-05
EndTime: 132.85992217063904
----------
mutation rule: addVarDecl;
mutate pos: 1087
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1087
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 70.2429792881012
succeed? True
instantReward: 1.3111898885639537e-09
EndTime: 213.83948302268982
----------
mutation rule: addGoto;
mutate pos: 1061
mutate cmd: ./exefile/addGoto-mul ./main.c --   1061 1049
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.134326219558716
succeed? True
instantReward: 1.2802458071949814e-05
EndTime: 262.7436029911041
----------
mutation rule: optOff;
mutate pos: 742
mutate cmd: ./exefile/optOff-mul ./main.c --   742
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.47506666183472
succeed? True
instantReward: 1.2802458071949814e-05
EndTime: 311.95681142807007
----------
mutation rule: addWhile;
mutate pos: 1151
mutate cmd: ./exefile/addWhile-mul ./main.c --   1151
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 322.4777674674988
----------
mutation rule: repBinaryExpr;
mutate pos: 983
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   983
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 67.8969521522522
succeed? True
instantReward: 9.834301864335409e-10
EndTime: 401.1578571796417
----------
mutation rule: repIfCond;!
mutate pos: 938
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 938
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 98.8340892791748
succeed? True
instantReward: 2.229030135046824e-07
EndTime: 510.7168056964874
----------
mutation rule: repBinaryExpr;
mutate pos: 961
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   961
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.38189458847046
succeed? True
instantReward: 0.0
EndTime: 568.8514425754547
----------
mutation rule: delStmt;
mutate pos: 1094
mutate cmd: ./exefile/delStmt-mul ./main.c --   1094
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 579.5650675296783
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 590.2140679359436
----------
mutation rule: addWhile;
mutate pos: 938
mutate cmd: ./exefile/addWhile-mul ./main.c --   938
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 601.0828995704651
----------
mutation rule: repLoopCond;!
mutate pos: 846
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "!" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 614.6327018737793
----------
mutation rule: add2Loop;
mutate pos: 1239
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1239
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 615.1607480049133
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 625.7655253410339
----------
mutation rule: disableLoopVect;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 636.4185707569122
----------
mutation rule: delIf;
mutate pos: 938
mutate cmd: ./exefile/delIf-mul ./main.c --   938
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 636.5872809886932
----------
mutation rule: repLoopVar;2
mutate pos: 1061
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "2" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 636.697770357132
----------
mutation rule: addQualifier;restrict
mutate pos: 713
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 713
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 637.0098912715912
----------
mutation rule: dupStmt;
mutate pos: 1061
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1061
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 637.0325245857239
----------
mutation rule: optOff;
mutate pos: 846
mutate cmd: ./exefile/optOff-mul ./main.c --   846
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 647.6868233680725
----------
mutation rule: addLoopIf;
mutate pos: 938
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   938
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 658.695455789566
----------
mutation rule: addGoto;
mutate pos: 942
mutate cmd: ./exefile/addGoto-mul ./main.c --   942 1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 658.7218260765076
----------
mutation rule: repVarSameScope;
mutate pos: 809
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   809
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 669.0851547718048
----------
mutation rule: repLoopCond;!
mutate pos: 942
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "!" 942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 679.72975730896
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 690.3514416217804
----------
mutation rule: repVarSameScope;
mutate pos: 965
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   965
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 700.7172865867615
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 701.2713179588318
----------
mutation rule: disableLoopUnroll;
mutate pos: 846
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 701.5872800350189
----------
mutation rule: dupStmt;
mutate pos: 1239
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1239
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 701.8883736133575
----------
mutation rule: moveStmt;
mutate pos: 1044
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1044
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 712.51145195961
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 723.109573841095
----------
mutation rule: addLoopIf;
mutate pos: 1057
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1057
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 733.8841404914856
----------
mutation rule: add2Loop;
mutate pos: 842
mutate cmd: ./exefile/add2Loop-mul ./main.c --   842
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 744.4397966861725
----------
mutation rule: addRepModifier;signed
mutate pos: 856
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 856
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 755.0810983181
----------
mutation rule: addWhile;
mutate pos: 846
mutate cmd: ./exefile/addWhile-mul ./main.c --   846
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 765.630366563797
----------
mutation rule: delLoop;
mutate pos: 1061
mutate cmd: ./exefile/delLoop-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 765.6515572071075
----------
mutation rule: dupStmt;
mutate pos: 1083
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1083
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 765.9556293487549
----------
mutation rule: repLoopVar;0
mutate pos: 1061
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "0" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 766.0641465187073
----------
mutation rule: add2If;
mutate pos: 1227
mutate cmd: ./exefile/add2If-mul ./main.c --   1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 766.2788045406342
----------
mutation rule: delLoop;
mutate pos: 1045
mutate cmd: ./exefile/delLoop-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 766.567464351654
----------
mutation rule: repRemUnaryOp;post++,delete
mutate pos: 969
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "delete" 969
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 776.8867943286896
----------
mutation rule: repIfCond;!
mutate pos: 1049
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 1049
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.422712326049805
succeed? True
instantReward: 1.2839772479231669e-05
EndTime: 825.1717703342438
----------
mutation rule: addLoopIf;
mutate pos: 1061
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1061
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 835.8867607116699
----------
mutation rule: addFuncArg;
mutate pos: 593
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 835.91454911232
----------
mutation rule: TurnConstantVar;
mutate pos: 706
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   706
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 836.2285118103027
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.38099765777588
succeed? True
instantReward: 3.4621882648126767e-09
EndTime: 893.386881351471
----------
mutation rule: repIfCond;0
mutate pos: 1057
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 1057
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.84211730957031
succeed? True
instantReward: 1.2840267077555214e-05
EndTime: 941.0650091171265
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 50.64090275764465
succeed? True
instantReward: 1.611679913024152e-07
EndTime: 1002.5209364891052
----------
mutation rule: addWhile;
mutate pos: 1227
mutate cmd: ./exefile/addWhile-mul ./main.c --   1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1002.7316243648529
----------
mutation rule: repVarSameScope;
mutate pos: 950
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   950
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1013.0624692440033
----------
mutation rule: addRepModifier;unsigned
mutate pos: 661
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 661
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1023.7241520881653
----------
mutation rule: add2If;
mutate pos: 1044
mutate cmd: ./exefile/add2If-mul ./main.c --   1044
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1034.5930194854736
----------
mutation rule: addRepModifier;short
mutate pos: 636
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 636
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1045.2688374519348
----------
mutation rule: repIfCond;0
mutate pos: 938
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 938
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1055.8855001926422
----------
mutation rule: addQualifier;restrict
mutate pos: 512
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 512
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1055.9072573184967
----------
mutation rule: addQualifier;volatile
mutate pos: 766
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 766
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.91433358192444
succeed? True
instantReward: 1.2860413076468015e-05
EndTime: 1102.5709116458893
----------
mutation rule: add2If;
mutate pos: 1057
mutate cmd: ./exefile/add2If-mul ./main.c --   1057
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.88735008239746
succeed? True
instantReward: 1.6375948841374725e-08
EndTime: 1160.5065078735352
----------
mutation rule: repBinaryExpr;
mutate pos: 1083
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1083
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1171.155501127243
----------
mutation rule: repBinaryExpr;
mutate pos: 961
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   961
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1171.221275806427
----------
mutation rule: repIfCond;0
mutate pos: 1049
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 1049
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.10925078392029
succeed? True
instantReward: 1.286223262633928e-05
EndTime: 1219.176399230957
----------
mutation rule: repVarSameScope;
mutate pos: 950
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   950
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1229.5483040809631
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1229.6127665042877
----------
mutation rule: repLoopVar;1
mutate pos: 1045
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "1" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1229.7229588031769
----------
mutation rule: addQualifier;restrict
mutate pos: 512
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 512
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1229.7474870681763
----------
mutation rule: repVarSameScope;
mutate pos: 1030
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1030
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.72691535949707
succeed? True
instantReward: 1.286223262633928e-05
EndTime: 1277.267150402069
----------
mutation rule: delIf;
mutate pos: 938
mutate cmd: ./exefile/delIf-mul ./main.c --   938
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1277.2912437915802
----------
mutation rule: addIf;
mutate pos: 927
mutate cmd: ./exefile/addIf-mul ./main.c --   927
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1277.515765428543
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.99703645706177
succeed? True
instantReward: 2.366145143137049e-08
EndTime: 1337.3365485668182
----------
mutation rule: repIfCond;1
mutate pos: 1094
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1094
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1347.704785823822
----------
mutation rule: repLoopVar;0
mutate pos: 1061
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "0" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1347.817797422409
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.2461633682251
succeed? True
instantReward: 0.0
EndTime: 1404.8049519062042
----------
mutation rule: addIf;
mutate pos: 1045
mutate cmd: ./exefile/addIf-mul ./main.c --   1045
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1405.351261138916
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1405.4437246322632
----------
mutation rule: repBinaryExpr;
mutate pos: 961
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   961
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1405.5148403644562
----------
mutation rule: repBinaryOp;<,!=
mutate pos: 820
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "<" "!=" 820
pos_left_this_mutator: [3] ['820', '983', '961']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1421.9368131160736
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1422.029231786728
----------
mutation rule: addIf;
mutate pos: 942
mutate cmd: ./exefile/addIf-mul ./main.c --   942
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1422.583966255188
----------
mutation rule: addQualifier;restrict
mutate pos: 713
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 713
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1422.9229094982147
----------
mutation rule: moveStmt;
mutate pos: 942
mutate cmd: ./exefile/moveStmt-mul ./main.c --   942
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1422.9467685222626
----------
mutation rule: addRepModifier;unsigned
mutate pos: 766
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 766
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.3580048084259
succeed? True
instantReward: 1.2864383667378496e-05
EndTime: 1470.1428740024567
----------
mutation rule: repVarSameScope;
mutate pos: 1138
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1138
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1470.4727861881256
----------
mutation rule: repVarSameScope;
mutate pos: 1004
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1004
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1470.4948978424072
----------
mutation rule: addQualifier;const
mutate pos: 713
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 713
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1470.8298742771149
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1470.9181668758392
----------
mutation rule: TurnConstantVar;
mutate pos: 1159
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   1159
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.487988233566284
succeed? True
instantReward: 0.0
EndTime: 1529.2138335704803
----------
mutation rule: disableLoopUnroll;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1529.5947003364563
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1540.2234380245209
----------
mutation rule: disableLoopVect;
mutate pos: 1045
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1550.8472323417664
----------
mutation rule: disableLoopUnroll;
mutate pos: 846
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1551.1820492744446
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1551.2055778503418
----------
mutation rule: add2Loop;
mutate pos: 942
mutate cmd: ./exefile/add2Loop-mul ./main.c --   942
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.37670421600342
succeed? True
instantReward: 1.2864383667378496e-05
EndTime: 1599.610321521759
----------
mutation rule: repBinaryExpr;
mutate pos: 961
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   961
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1599.699954032898
----------
mutation rule: add2If;
mutate pos: 1231
mutate cmd: ./exefile/add2If-mul ./main.c --   1231
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1600.23362159729
----------
mutation rule: repBinaryOp;<,!=
mutate pos: 983
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "<" "!=" 983
pos_left_this_mutator: [3] ['820', '983', '961']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.07587265968323
succeed? True
instantReward: 6.454451416127707e-09
EndTime: 1659.3058955669403
----------
mutation rule: add2If;
mutate pos: 1044
mutate cmd: ./exefile/add2If-mul ./main.c --   1044
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1670.1362285614014
----------
mutation rule: repVarSameScope;
mutate pos: 965
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   965
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1680.4986786842346
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1680.5770053863525
----------
mutation rule: addQualifier;restrict
mutate pos: 713
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 713
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1680.903779745102
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1680.9257345199585
----------
mutation rule: delStmt;
mutate pos: 942
mutate cmd: ./exefile/delStmt-mul ./main.c --   942
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1680.9490866661072
----------
mutation rule: addVarDecl;
mutate pos: 1094
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   1094
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1691.6413497924805
----------
mutation rule: dupStmt;
mutate pos: 1094
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1094
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1702.2743573188782
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1704.5263197422028
----------
mutation rule: optOff;
mutate pos: 593
mutate cmd: ./exefile/optOff-mul ./main.c --   593
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1715.0791296958923
----------
mutation rule: repBinaryOp;<,==
mutate pos: 820
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "<" "==" 820
pos_left_this_mutator: [3] ['820', '983', '961']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1725.7103815078735
----------
mutation rule: addIf;
mutate pos: 1227
mutate cmd: ./exefile/addIf-mul ./main.c --   1227
pos_left_this_mutator: [10] ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1725.9369332790375
----------
mutation rule: repLoopCond;0
mutate pos: 846
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1736.6647481918335
----------
mutation rule: repLoopCond;0
mutate pos: 1045
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.5694375038147
succeed? True
instantReward: 1.2864880163641276e-05
EndTime: 1786.0837547779083
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1786.651112318039
----------
mutation rule: disableLoopVect;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.62182426452637
succeed? True
instantReward: 1.6220964644593104e-08
EndTime: 1845.0904281139374
----------
mutation rule: repVarSameScope;
mutate pos: 1030
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1030
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1845.108063697815
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1845.2115478515625
----------
mutation rule: addInline;
mutate pos: 593
mutate cmd: ./exefile/addInline-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1845.2321619987488
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1845.2516963481903
----------
mutation rule: add2Loop;
mutate pos: 1083
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1083
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1855.8315377235413
----------
mutation rule: optOff;
mutate pos: 1061
mutate cmd: ./exefile/optOff-mul ./main.c --   1061
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1866.4596529006958
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1866.4890213012695
----------
mutation rule: delIf;
mutate pos: 938
mutate cmd: ./exefile/delIf-mul ./main.c --   938
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1866.5135281085968
----------
mutation rule: addVarDecl;
mutate pos: 873
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   873
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1877.1477327346802
----------
mutation rule: addWhile;
mutate pos: 1057
mutate cmd: ./exefile/addWhile-mul ./main.c --   1057
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.15426516532898
succeed? True
instantReward: 1.2866038803973032e-05
EndTime: 1926.5262055397034
----------
mutation rule: TurnConstantVar;
mutate pos: 869
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   869
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.815507888793945
succeed? True
instantReward: 1.2866038803973032e-05
EndTime: 1976.1744964122772
----------
mutation rule: disableLoopVect;
mutate pos: 1045
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.11359405517578
succeed? True
instantReward: 0.0
EndTime: 2035.0615553855896
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2035.0787925720215
----------
mutation rule: add2If;
mutate pos: 1049
mutate cmd: ./exefile/add2If-mul ./main.c --   1049
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.848881244659424
succeed? True
instantReward: 1.2866038803973032e-05
EndTime: 2084.891525745392
----------
mutation rule: addGoto;
mutate pos: 1231
mutate cmd: ./exefile/addGoto-mul ./main.c --   1231 1239
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.947232484817505
succeed? True
instantReward: 3.9750841051677376e-07
EndTime: 2142.655002593994
----------
mutation rule: moveStmt;
mutate pos: 1094
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1094
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2143.0075845718384
----------
mutation rule: repVarSameScope;
mutate pos: 1213
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1213
pos_left_this_mutator: [18] ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2143.0339958667755
----------
mutation rule: moveStmt;
mutate pos: 1094
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1094
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2143.396372795105
----------
mutation rule: TurnConstantVar;
mutate pos: 779
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   779
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.41077709197998
succeed? True
instantReward: 2.259698800676619e-08
EndTime: 2201.812829017639
----------
mutation rule: repIntConstant;*0
mutate pos: 799
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 799
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.78048849105835
succeed? True
instantReward: 1.2890750886239123e-05
EndTime: 2250.386344909668
----------
mutation rule: optOff;
mutate pos: 593
mutate cmd: ./exefile/optOff-mul ./main.c --   593
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.09465575218201
succeed? True
instantReward: 1.7947905680296096e-08
EndTime: 2309.2070260047913
----------
mutation rule: TurnConstantVar;
mutate pos: 869
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   869
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2309.2341351509094
----------
mutation rule: addInline;
mutate pos: 593
mutate cmd: ./exefile/addInline-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2309.2538390159607
----------
mutation rule: repIntConstant;*-1
mutate pos: 1235
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 1235
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2319.9174621105194
----------
mutation rule: addGoto;
mutate pos: 1239
mutate cmd: ./exefile/addGoto-mul ./main.c --   1239 846
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2320.295159101486
----------
mutation rule: repRemUnaryOp;post++,delete
mutate pos: 828
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "delete" 828
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2330.6982746124268
----------
mutation rule: add2Loop;
mutate pos: 1151
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1151
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.44020915031433
succeed? True
instantReward: 1.2891747992110251e-05
EndTime: 2378.3117957115173
----------
mutation rule: disableLoopUnroll;
mutate pos: 1061
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2378.651792049408
----------
mutation rule: delIf;
mutate pos: 1231
mutate cmd: ./exefile/delIf-mul ./main.c --   1231
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2378.835261106491
----------
mutation rule: addGoto;
mutate pos: 842
mutate cmd: ./exefile/addGoto-mul ./main.c --   842 1087
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.59053874015808
succeed? True
instantReward: 1.5669914821601287e-05
EndTime: 2437.4792635440826
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2437.6084225177765
----------
mutation rule: repRemUnaryOp;post++,pre++
mutate pos: 1041
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "pre++" 1041
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.877382040023804
succeed? True
instantReward: 1.3716480351141898e-05
EndTime: 2486.280830144882
----------
mutation rule: repRemUnaryOp;post++,pre--
mutate pos: 1041
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "pre--" 1041
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.28412413597107
succeed? True
instantReward: 1.3716480351141898e-05
EndTime: 2534.394292831421
----------
mutation rule: repBinaryExpr;
mutate pos: 1166
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1166
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.440833568573
succeed? True
instantReward: 0.0
EndTime: 2592.672477245331
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2592.694489479065
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2592.8390288352966
----------
mutation rule: delLoop;
mutate pos: 942
mutate cmd: ./exefile/delLoop-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2592.859657764435
----------
mutation rule: dupStmt;
mutate pos: 1014
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1014
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2592.8795964717865
----------
mutation rule: addGoto;
mutate pos: 842
mutate cmd: ./exefile/addGoto-mul ./main.c --   842 846
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2603.286944627762
----------
mutation rule: addWhile;
mutate pos: 1239
mutate cmd: ./exefile/addWhile-mul ./main.c --   1239
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.95516514778137
succeed? True
instantReward: 2.0559752574977452e-07
EndTime: 2662.2835173606873
----------
mutation rule: delIf;
mutate pos: 1231
mutate cmd: ./exefile/delIf-mul ./main.c --   1231
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2662.3056263923645
----------
mutation rule: addQualifier;restrict
mutate pos: 766
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 766
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2662.678950071335
----------
mutation rule: TurnConstantVar;
mutate pos: 954
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   954
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.55723476409912
succeed? True
instantReward: 1.3726270709510933e-05
EndTime: 2712.143767118454
----------
mutation rule: addVarDecl;
mutate pos: 942
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   942
pos_left_this_mutator: [22] ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2712.5255918502808
----------
mutation rule: addGoto;
mutate pos: 1227
mutate cmd: ./exefile/addGoto-mul ./main.c --   1227 1061
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2712.550888299942
----------
mutation rule: addInline;
mutate pos: 593
mutate cmd: ./exefile/addInline-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2712.573386669159
----------
mutation rule: disableLoopVect;
mutate pos: 1045
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.429039478302
succeed? True
instantReward: 0.0
EndTime: 2770.844750881195
----------
mutation rule: addRepModifier;unsigned
mutate pos: 693
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 693
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2781.5119433403015
----------
mutation rule: repLoopVar;2
mutate pos: 1061
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "2" 1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2781.6222598552704
----------
mutation rule: add2Loop;
mutate pos: 842
mutate cmd: ./exefile/add2Loop-mul ./main.c --   842
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 49.53254461288452
succeed? True
instantReward: 1.3726270709510933e-05
EndTime: 2832.2482674121857
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2832.346611022949
----------
mutation rule: addLoopIf;
mutate pos: 1227
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1227
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2832.767566919327
----------
mutation rule: delIf;
mutate pos: 1094
mutate cmd: ./exefile/delIf-mul ./main.c --   1094
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.1607449054718
succeed? True
instantReward: 2.18169409919942e-06
EndTime: 2892.883813381195
----------
mutation rule: dupStmt;
mutate pos: 1094
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1094
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2903.5878336429596
----------
mutation rule: add2Loop;
mutate pos: 1231
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1231
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2904.260669231415
----------
mutation rule: repLoopVar;2
mutate pos: 846
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "2" 846
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2904.370203256607
----------
mutation rule: addQualifier;const
mutate pos: 677
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 677
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2904.9291088581085
----------
mutation rule: repRemUnaryOp;post++,~
mutate pos: 1041
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "~" 1041
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.74032950401306
succeed? True
instantReward: 0.0
EndTime: 2952.62211894989
----------
mutation rule: TurnConstantVar;
mutate pos: 869
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   869
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2952.648809671402
----------
mutation rule: addRepModifier;unsigned
mutate pos: 713
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 713
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.3842887878418
succeed? True
instantReward: 1.7144053566803957e-07
EndTime: 3010.908350467682
----------
mutation rule: addQualifier;volatile
mutate pos: 766
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 766
pos_left_this_mutator: [9] ['856', '512', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3010.9651832580566
----------
mutation rule: dupStmt;
mutate pos: 1231
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1231
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3010.986875772476
----------
mutation rule: delLoop;
mutate pos: 942
mutate cmd: ./exefile/delLoop-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3011.008487701416
----------
mutation rule: delLoop;
mutate pos: 1061
mutate cmd: ./exefile/delLoop-mul ./main.c --   1061
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3011.028703927994
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3011.1939980983734
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3012.432004213333
----------
mutation rule: repLoopCond;0
mutate pos: 1045
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3012.497369289398
----------
mutation rule: repRemUnaryOp;post++,delete
mutate pos: 1041
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "delete" 1041
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.32499670982361
succeed? True
instantReward: 1.382858091102691e-05
EndTime: 3060.704383611679
----------
mutation rule: add2If;
mutate pos: 927
mutate cmd: ./exefile/add2If-mul ./main.c --   927
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3060.921394109726
----------
mutation rule: disableLoopUnroll;
mutate pos: 1045
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3061.3418271541595
----------
mutation rule: add2If;
mutate pos: 842
mutate cmd: ./exefile/add2If-mul ./main.c --   842
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 49.16246151924133
succeed? True
instantReward: 0.0
EndTime: 3121.6290826797485
----------
mutation rule: addFuncArg;
mutate pos: 593
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3121.6489627361298
----------
mutation rule: addWhile;
mutate pos: 846
mutate cmd: ./exefile/addWhile-mul ./main.c --   846
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3132.3011569976807
----------
mutation rule: remModifierQualifier;const
mutate pos: 512
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "const" 512
pos_left_this_mutator: [1] ['512']
mutator_left_this_class: [1] ['remModifierQualifier;const']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3132.32586145401
----------
mutation rule: repRemUnaryOp;post++,post--
mutate pos: 828
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "post--" 828
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3146.1815626621246
----------
mutation rule: repRemUnaryOp;post++,pre++
mutate pos: 969
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "pre++" 969
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3156.892594099045
----------
mutation rule: addRepModifier;unsigned
mutate pos: 713
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 713
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3157.0168941020966
----------
mutation rule: optOff;
mutate pos: 742
mutate cmd: ./exefile/optOff-mul ./main.c --   742
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.77293825149536
succeed? True
instantReward: 1.382858091102691e-05
EndTime: 3206.6240351200104
----------
mutation rule: repLoopVar;2
mutate pos: 942
mutate cmd: ./exefile/repLoopVar-mul ./main.c -- "2" 942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 3206.732481479645
----------
mutation rule: repLoopCond;1
mutate pos: 1045
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 1045
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.071375608444214
succeed? True
instantReward: 2.765716182205382e-05
EndTime: 3255.6833169460297
----------
mutation rule: repBinaryExpr;
mutate pos: 820
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   820
pos_left_this_mutator: [5] ['1083', '961', '820', '983', '1166']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 50.164669036865234
succeed? True
instantReward: 0.0
EndTime: 3316.652277469635
----------
mutation rule: delStmt;
mutate pos: 1014
mutate cmd: ./exefile/delStmt-mul ./main.c --   1014
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3316.673506259918
----------
mutation rule: addInline;
mutate pos: 742
mutate cmd: ./exefile/addInline-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3316.7911961078644
----------
mutation rule: add2If;
mutate pos: 1045
mutate cmd: ./exefile/add2If-mul ./main.c --   1045
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.03346276283264
succeed? True
instantReward: 1.382858091102691e-05
EndTime: 3365.9769418239594
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3366.6925427913666
----------
mutation rule: addWhile;
mutate pos: 942
mutate cmd: ./exefile/addWhile-mul ./main.c --   942
pos_left_this_mutator: [19] ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.79232335090637
succeed? True
instantReward: 1.382858091102691e-05
EndTime: 3416.6085159778595
----------
mutation rule: repBinaryOp;<,>
mutate pos: 983
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "<" ">" 983
pos_left_this_mutator: [3] ['820', '983', '961']
mutator_left_this_class: [10] ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,==']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.98217153549194
succeed? True
instantReward: 0.0
EndTime: 3475.658111810684
----------
mutation rule: addFuncArg;
mutate pos: 742
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   742
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 48.71636772155762
succeed? True
instantReward: 0.0
EndTime: 3535.2576863765717
----------
mutation rule: repIfCond;!
mutate pos: 1049
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 1049
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3535.3288638591766
----------
mutation rule: disableLoopUnroll;
mutate pos: 942
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3535.8039150238037
----------
mutation rule: optOff;
mutate pos: 942
mutate cmd: ./exefile/optOff-mul ./main.c --   942
pos_left_this_mutator: [7] ['1045', '593', '1061', '942', '742', '1117', '846']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.99176263809204
succeed? True
instantReward: 0.0
EndTime: 3594.488482236862
----------
mutation rule: TurnConstantVar;
mutate pos: 779
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   779
pos_left_this_mutator: [10] ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3594.6838071346283
----------
mutation rule: addFuncArg;
mutate pos: 593
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   593
pos_left_this_mutator: [2] ['742', '593']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3594.7021753787994
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3594.8809807300568
----------
mutation rule: addQualifier;const
mutate pos: 766
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 766
pos_left_this_mutator: [8] ['856', '636', '661', '677', '693', '713', '766', '786']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3595.294994831085
----------
mutation rule: repIfCond;1
mutate pos: 1231
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1231
pos_left_this_mutator: [6] ['1231', '1049', '1057', '938', '946', '1094']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3595.3454418182373
----------
mutation rule: disableLoopUnroll;
mutate pos: 942
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   942
pos_left_this_mutator: [4] ['942', '1045', '1061', '846']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3595.762793302536
----------
mutation rule: repRemUnaryOp;post++,pre++
mutate pos: 828
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post++" "pre++" 828
pos_left_this_mutator: [3] ['828', '1041', '969']
mutator_left_this_class: [5] ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete']
pos_left_each_mutator: [424] [('addQualifier;volatile', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;const', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addQualifier;restrict', ['856', '512', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;unsigned', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;signed', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;short', ['856', '636', '661', '677', '693', '713', '766', '786']), ('addRepModifier;long', ['856', '636', '661', '677', '693', '713', '766', '786']), ('remModifierQualifier;const', ['512']), ('repBinaryOp;<,>', ['820', '983', '961']), ('repBinaryOp;<,>=', ['820', '983', '961']), ('repBinaryOp;<,<=', ['820', '983', '961']), ('repBinaryOp;<,==', ['820', '983', '961']), ('repBinaryOp;<,!=', ['820', '983', '961']), ('repBinaryOp;!=,>', ['1166']), ('repBinaryOp;!=,>=', ['1166']), ('repBinaryOp;!=,<', ['1166']), ('repBinaryOp;!=,<=', ['1166']), ('repBinaryOp;!=,==', ['1166']), ('repIntConstant;+1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*-1', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repIntConstant;*0', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repRemUnaryOp;post++,pre++', ['828', '1041', '969']), ('repRemUnaryOp;post++,pre--', ['828', '1041', '969']), ('repRemUnaryOp;post++,post--', ['828', '1041', '969']), ('repRemUnaryOp;post++,~', ['828', '1041', '969']), ('repRemUnaryOp;post++,delete', ['828', '1041', '969']), ('repVarSameScope;', ['1213', '876', '1030', '883', '1037', '890', '1138', '897', '1155', '1068', '1075', '950', '965', '809', '972', '824', '987', '1004']), ('addIf;', ['1227', '1044', '1045', '1053', '927', '1057', '938', '942', '1090', '842']), ('addWhile;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addGoto;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addFunction;', ['-1']), ('add2Loop;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('addLoopIf;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delLoop;', ['942', '1045', '1061', '846']), ('repLoopCond;!', ['942', '1045', '1061', '846']), ('repLoopCond;0', ['942', '1045', '1061', '846']), ('repLoopCond;1', ['942', '1045', '1061', '846']), ('repLoopVar;0', ['942', '1045', '1061', '846']), ('repLoopVar;1', ['942', '1045', '1061', '846']), ('repLoopVar;2', ['942', '1045', '1061', '846']), ('add2If;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delIf;', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;!', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;0', ['1231', '1049', '1057', '938', '946', '1094']), ('repIfCond;1', ['1231', '1049', '1057', '938', '946', '1094']), ('addVarDecl;', ['-1', '806', '842', '846', '873', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('dupStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('delStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('moveStmt;', ['842', '846', '927', '938', '942', '946', '1014', '1044', '1045', '1049', '1057', '1061', '1083', '1087', '1094', '1151', '1227', '1231', '1239']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['742', '593']), ('addInline;', ['742', '593']), ('TurnConstantVar;', ['869', '1235', '706', '1079', '779', '954', '799', '813', '976', '1159']), ('repBinaryExpr;', ['1083', '961', '820', '983', '1166']), ('optOff;', ['1045', '593', '1061', '942', '742', '1117', '846']), ('disableLoopUnroll;', ['942', '1045', '1061', '846']), ('disableLoopVect;', ['942', '1045', '1061', '846'])]
mutator_left_each_class: [58] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;const'], ['repBinaryOp;<,>', 'repBinaryOp;<,>=', 'repBinaryOp;<,<=', 'repBinaryOp;<,==', 'repBinaryOp;<,!=', 'repBinaryOp;!=,>', 'repBinaryOp;!=,>=', 'repBinaryOp;!=,<', 'repBinaryOp;!=,<=', 'repBinaryOp;!=,=='], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;post++,pre++', 'repRemUnaryOp;post++,pre--', 'repRemUnaryOp;post++,post--', 'repRemUnaryOp;post++,~', 'repRemUnaryOp;post++,delete'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['repLoopVar;2', 'repLoopVar;0', 'repLoopVar;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3606.511787414551
