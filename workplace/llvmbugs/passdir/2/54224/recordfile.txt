----------
mutation rule: delIf;
mutate pos: 685
mutate cmd: ./exefile/delIf-mul ./main.c --   685
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 71.76203727722168
succeed? True
instantReward: 1.6851187166135853e-05
EndTime: 72.42015624046326
----------
mutation rule: repIfCond;1
mutate pos: 841
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 841
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.65482711791992
succeed? True
instantReward: 1.6851187166135853e-05
EndTime: 118.9672863483429
----------
mutation rule: add2Loop;
mutate pos: 681
mutate cmd: ./exefile/add2Loop-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.82426309585571
succeed? True
instantReward: 1.6851187166135853e-05
EndTime: 165.74123454093933
----------
mutation rule: addIf;
mutate pos: 837
mutate cmd: ./exefile/addIf-mul ./main.c --   837
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 165.96582007408142
----------
mutation rule: repBinaryExpr;
mutate pos: 724
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   724
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.0580370426178
succeed? True
instantReward: 1.4200518401352356e-08
EndTime: 212.83369421958923
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 213.3744421005249
----------
mutation rule: repRemUnaryOp;post--,~
mutate pos: 628
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post--" "~" 628
pos_left_this_mutator: [1] ['628']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 223.68318128585815
----------
mutation rule: repVarSameScope;
mutate pos: 861
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   861
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 233.9906222820282
----------
mutation rule: dupStmt;
mutate pos: 899
mutate cmd: ./exefile/dupStmt-mul ./main.c --   899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 234.26970672607422
----------
mutation rule: repVarSameScope;
mutate pos: 689
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   689
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 244.57768774032593
----------
mutation rule: addVarDecl;
mutate pos: 598
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   598
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.03842210769653
succeed? True
instantReward: 0.0
EndTime: 291.37506103515625
----------
mutation rule: TurnConstantVar;
mutate pos: 749
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   749
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.26839280128479
succeed? True
instantReward: 1.6854027269816123e-05
EndTime: 338.35314679145813
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 45.6667263507843
succeed? True
instantReward: 8.87039103284799e-08
EndTime: 384.84606170654297
----------
mutation rule: repBinaryExpr;
mutate pos: 710
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   710
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 45.701040744781494
succeed? True
instantReward: 0.0
EndTime: 431.314306974411
----------
mutation rule: addRepModifier;short
mutate pos: 604
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 604
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.716413259506226
succeed? True
instantReward: 1.686881125487087e-05
EndTime: 480.72672152519226
----------
mutation rule: addVarDecl;
mutate pos: 681
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   681
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 481.0267565250397
----------
mutation rule: repIntConstant;-1
mutate pos: 676
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "-1" 676
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.257288694381714
succeed? True
instantReward: 1.686881125487087e-05
EndTime: 527.9827597141266
----------
mutation rule: add2Loop;
mutate pos: 885
mutate cmd: ./exefile/add2Loop-mul ./main.c --   885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 538.5298895835876
----------
mutation rule: add2If;
mutate pos: 724
mutate cmd: ./exefile/add2If-mul ./main.c --   724
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 549.074524641037
----------
mutation rule: repBinaryExpr;
mutate pos: 710
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   710
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 549.1352782249451
----------
mutation rule: addVarDecl;
mutate pos: 871
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   871
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.273956298828125
succeed? True
instantReward: 0.0
EndTime: 596.2607388496399
----------
mutation rule: addRepModifier;signed
mutate pos: 848
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "signed" 848
pos_left_this_mutator: [4] ['512', '585', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.04195499420166
succeed? True
instantReward: 0.0
EndTime: 643.1444206237793
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 643.8432729244232
----------
mutation rule: repIntConstant;*0
mutate pos: 697
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 697
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.12476301193237
succeed? True
instantReward: 1.686881125487087e-05
EndTime: 690.954829454422
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.85425639152527
succeed? True
instantReward: 0.0
EndTime: 738.6258645057678
----------
mutation rule: addLoopIf;
mutate pos: 662
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.10840654373169
succeed? True
instantReward: 1.686881125487087e-05
EndTime: 786.1157820224762
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 537
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 537
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 796.4674344062805
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 806.8177945613861
----------
mutation rule: optOff;
mutate pos: 681
mutate cmd: ./exefile/optOff-mul ./main.c --   681
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.65359282493591
succeed? True
instantReward: 0.0
EndTime: 854.2524318695068
----------
mutation rule: addVarDecl;
mutate pos: 621
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   621
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 854.958336353302
----------
mutation rule: addVarDecl;
mutate pos: 753
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   753
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 855.2828509807587
----------
mutation rule: repRemUnaryOp;post--,pre--
mutate pos: 628
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post--" "pre--" 628
pos_left_this_mutator: [1] ['628']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 856.0042896270752
----------
mutation rule: moveStmt;
mutate pos: 885
mutate cmd: ./exefile/moveStmt-mul ./main.c --   885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.83562207221985
succeed? True
instantReward: 1.686881125487087e-05
EndTime: 903.6289718151093
----------
mutation rule: repVarSameScope;
mutate pos: 635
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   635
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.742207765579224
succeed? True
instantReward: 0.0
EndTime: 953.2923905849457
----------
mutation rule: addRepModifier;unsigned
mutate pos: 512
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 512
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.51301431655884
succeed? True
instantReward: 1.1588694518824163e-07
EndTime: 1000.6886513233185
----------
mutation rule: optOff;
mutate pos: 681
mutate cmd: ./exefile/optOff-mul ./main.c --   681
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.18945837020874
succeed? True
instantReward: 0.0
EndTime: 1048.6811981201172
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1049.9934613704681
----------
mutation rule: disableLoopUnroll;
mutate pos: 681
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1050.3290622234344
----------
mutation rule: addIf;
mutate pos: 837
mutate cmd: ./exefile/addIf-mul ./main.c --   837
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1050.5529515743256
----------
mutation rule: addQualifier;volatile
mutate pos: 537
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 537
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.52245831489563
succeed? True
instantReward: 1.6879346431706163e-05
EndTime: 1097.8775424957275
----------
mutation rule: addLoopIf;
mutate pos: 841
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   841
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.066489934921265
succeed? True
instantReward: 1.6879346431706163e-05
EndTime: 1147.179405450821
----------
mutation rule: repBinaryOp;-,+
mutate pos: 710
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "+" 710
pos_left_this_mutator: [1] ['710']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.255728244781494
succeed? True
instantReward: 1.6879346431706163e-05
EndTime: 1194.4172112941742
----------
mutation rule: repBinaryExpr;
mutate pos: 710
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   710
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1194.5020234584808
----------
mutation rule: add2Loop;
mutate pos: 681
mutate cmd: ./exefile/add2Loop-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.94979524612427
succeed? True
instantReward: 1.6879346431706163e-05
EndTime: 1241.4194746017456
----------
mutation rule: add2If;
mutate pos: 896
mutate cmd: ./exefile/add2If-mul ./main.c --   896
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.15832829475403
succeed? True
instantReward: 1.0688723065048174e-07
EndTime: 1288.580947637558
----------
mutation rule: dupStmt;
mutate pos: 681
mutate cmd: ./exefile/dupStmt-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1298.9529194831848
----------
mutation rule: add2If;
mutate pos: 841
mutate cmd: ./exefile/add2If-mul ./main.c --   841
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1299.527914762497
----------
mutation rule: add2Loop;
mutate pos: 896
mutate cmd: ./exefile/add2Loop-mul ./main.c --   896
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 45.81397247314453
succeed? True
instantReward: 2.138827673406644e-08
EndTime: 1346.4450204372406
----------
mutation rule: repRemUnaryOp;~,pre++
mutate pos: 718
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre++" 718
pos_left_this_mutator: [4] ['718', '868', '701', '642']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1346.7993593215942
----------
mutation rule: repVarSameScope;
mutate pos: 878
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   878
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1346.819121837616
----------
mutation rule: addIf;
mutate pos: 754
mutate cmd: ./exefile/addIf-mul ./main.c --   754
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1347.379702091217
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 45.586857080459595
succeed? True
instantReward: 0.0
EndTime: 1393.8745896816254
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1393.971518754959
----------
mutation rule: repBinaryExpr;
mutate pos: 885
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   885
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.382381439208984
succeed? True
instantReward: 0.0
EndTime: 1441.2288691997528
----------
mutation rule: addWhile;
mutate pos: 885
mutate cmd: ./exefile/addWhile-mul ./main.c --   885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.57503700256348
succeed? True
instantReward: 0.0
EndTime: 1489.0014979839325
----------
mutation rule: addRepModifier;short
mutate pos: 848
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 848
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 45.814523696899414
succeed? True
instantReward: 1.9694175417821766e-07
EndTime: 1535.719678401947
----------
mutation rule: repBinaryOp;>,==
mutate pos: 776
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "==" 776
pos_left_this_mutator: [2] ['745', '776']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.52474641799927
succeed? True
instantReward: 1.6901027582477016e-05
EndTime: 1583.0143721103668
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1583.6025140285492
----------
mutation rule: addRepModifier;long
mutate pos: 848
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 848
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.16891312599182
succeed? True
instantReward: 0.0
EndTime: 1631.6829357147217
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 1631.9385950565338
----------
mutation rule: repBinaryExpr;
mutate pos: 776
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   776
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1632.6898775100708
----------
mutation rule: repIntConstant;*0
mutate pos: 903
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 903
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1632.705183506012
----------
mutation rule: repBinaryExpr;
mutate pos: 776
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   776
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1633.4508264064789
----------
mutation rule: repRemUnaryOp;~,post--
mutate pos: 642
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post--" 642
pos_left_this_mutator: [4] ['718', '868', '701', '642']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.381006479263306
succeed? True
instantReward: 1.6901027582477016e-05
EndTime: 1682.837082862854
----------
mutation rule: repVarSameScope;
mutate pos: 635
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   635
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1682.8800110816956
----------
mutation rule: delIf;
mutate pos: 758
mutate cmd: ./exefile/delIf-mul ./main.c --   758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.89968943595886
succeed? True
instantReward: 1.6901027582477016e-05
EndTime: 1729.578824043274
----------
mutation rule: repIfCond;0
mutate pos: 899
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 899
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.355802059173584
succeed? True
instantReward: 1.6901027582477016e-05
EndTime: 1776.7728168964386
----------
mutation rule: disableLoopUnroll;
mutate pos: 754
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1777.2132623195648
----------
mutation rule: addIf;
mutate pos: 754
mutate cmd: ./exefile/addIf-mul ./main.c --   754
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1777.8132252693176
----------
mutation rule: optOff;
mutate pos: 681
mutate cmd: ./exefile/optOff-mul ./main.c --   681
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.022258043289185
succeed? True
instantReward: 0.0
EndTime: 1824.7339253425598
----------
mutation rule: add2If;
mutate pos: 628
mutate cmd: ./exefile/add2If-mul ./main.c --   628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1835.367912530899
----------
mutation rule: repBinaryExpr;
mutate pos: 885
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   885
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 1835.4880170822144
----------
mutation rule: addGoto;
mutate pos: 758
mutate cmd: ./exefile/addGoto-mul ./main.c --   758 899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.620301246643066
succeed? True
instantReward: 1.6901027582477016e-05
EndTime: 1881.9919559955597
----------
mutation rule: repIntConstant;+1
mutate pos: 676
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 676
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 45.98923993110657
succeed? True
instantReward: 0.0
EndTime: 1928.860029220581
----------
mutation rule: optOff;
mutate pos: 754
mutate cmd: ./exefile/optOff-mul ./main.c --   754
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.350902795791626
succeed? True
instantReward: 0.0
EndTime: 1977.1517622470856
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 45.46884894371033
succeed? True
instantReward: 0.0
EndTime: 2023.5565218925476
----------
mutation rule: repBinaryOp;>,<=
mutate pos: 745
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "<=" 745
pos_left_this_mutator: [2] ['745', '776']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2033.982970237732
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2044.4266662597656
----------
mutation rule: delLoop;
mutate pos: 754
mutate cmd: ./exefile/delLoop-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.422784090042114
succeed? True
instantReward: 1.6901027582477016e-05
EndTime: 2090.7246131896973
----------
mutation rule: repBinaryExpr;
mutate pos: 648
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   648
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.276326179504395
succeed? True
instantReward: 0.0
EndTime: 2138.9488892555237
----------
mutation rule: moveStmt;
mutate pos: 662
mutate cmd: ./exefile/moveStmt-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2138.9683005809784
----------
mutation rule: disableLoopUnroll;
mutate pos: 754
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2139.363314151764
----------
mutation rule: repIntConstant;*0
mutate pos: 676
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 676
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2139.4626128673553
----------
mutation rule: optOff;
mutate pos: 754
mutate cmd: ./exefile/optOff-mul ./main.c --   754
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2140.259051322937
----------
mutation rule: repIntConstant;*0
mutate pos: 903
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 903
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2140.2753536701202
----------
mutation rule: add2If;
mutate pos: 628
mutate cmd: ./exefile/add2If-mul ./main.c --   628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2150.9234323501587
----------
mutation rule: repBinaryExpr;
mutate pos: 724
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   724
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2151.039844751358
----------
mutation rule: add2If;
mutate pos: 724
mutate cmd: ./exefile/add2If-mul ./main.c --   724
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2151.667364835739
----------
mutation rule: repBinaryExpr;
mutate pos: 648
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   648
pos_left_this_mutator: [6] ['710', '885', '724', '745', '648', '776']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2151.849329471588
----------
mutation rule: add2If;
mutate pos: 754
mutate cmd: ./exefile/add2If-mul ./main.c --   754
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.94464826583862
succeed? True
instantReward: 1.6901027582477016e-05
EndTime: 2198.916154384613
----------
mutation rule: moveStmt;
mutate pos: 841
mutate cmd: ./exefile/moveStmt-mul ./main.c --   841
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.42485213279724
succeed? True
instantReward: 1.5088162051175988e-07
EndTime: 2246.2468197345734
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2247.0185871124268
----------
mutation rule: addWhile;
mutate pos: 837
mutate cmd: ./exefile/addWhile-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2247.2320783138275
----------
mutation rule: addVarDecl;
mutate pos: 754
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   754
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2247.811736345291
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2258.2465744018555
----------
mutation rule: add2Loop;
mutate pos: 753
mutate cmd: ./exefile/add2Loop-mul ./main.c --   753
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2259.286285877228
----------
mutation rule: addWhile;
mutate pos: 662
mutate cmd: ./exefile/addWhile-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2269.957575082779
----------
mutation rule: TurnConstantVar;
mutate pos: 766
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   766
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.469780683517456
succeed? True
instantReward: 1.690788583795482e-05
EndTime: 2317.30633687973
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.57270956039429
succeed? True
instantReward: 0.0
EndTime: 2364.757219314575
----------
mutation rule: repIfCond;!
mutate pos: 899
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 899
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2375.1937510967255
----------
mutation rule: repIfCond;1
mutate pos: 758
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2385.6412160396576
----------
mutation rule: repIfCond;0
mutate pos: 758
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "0" 758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.294007539749146
succeed? True
instantReward: 1.690788583795482e-05
EndTime: 2432.7769379615784
----------
mutation rule: addIf;
mutate pos: 837
mutate cmd: ./exefile/addIf-mul ./main.c --   837
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2433.0112092494965
----------
mutation rule: dupStmt;
mutate pos: 885
mutate cmd: ./exefile/dupStmt-mul ./main.c --   885
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2433.436588525772
----------
mutation rule: addLoopIf;
mutate pos: 907
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   907
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 45.69827842712402
succeed? True
instantReward: 2.540173350720049e-07
EndTime: 2480.4974660873413
----------
mutation rule: delStmt;
mutate pos: 754
mutate cmd: ./exefile/delStmt-mul ./main.c --   754
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2480.5433881282806
----------
mutation rule: dupStmt;
mutate pos: 681
mutate cmd: ./exefile/dupStmt-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2491.274339914322
----------
mutation rule: addIf;
mutate pos: 896
mutate cmd: ./exefile/addIf-mul ./main.c --   896
pos_left_this_mutator: [6] ['896', '753', '754', '680', '837', '681']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2491.908003807068
----------
mutation rule: delStmt;
mutate pos: 907
mutate cmd: ./exefile/delStmt-mul ./main.c --   907
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2492.7279195785522
----------
mutation rule: repIntConstant;+1
mutate pos: 766
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 766
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2493.5610241889954
----------
mutation rule: disableLoopUnroll;
mutate pos: 754
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2493.991959810257
----------
mutation rule: repLoopCond;0
mutate pos: 754
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "0" 754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.972503900527954
succeed? True
instantReward: 1.6918469893582825e-05
EndTime: 2541.8868255615234
----------
mutation rule: repVarSameScope;
mutate pos: 762
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   762
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2541.9030482769012
----------
mutation rule: repIfCond;!
mutate pos: 758
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2552.3422677516937
----------
mutation rule: delStmt;
mutate pos: 681
mutate cmd: ./exefile/delStmt-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2562.8294711112976
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2573.320111989975
----------
mutation rule: optOff;
mutate pos: 681
mutate cmd: ./exefile/optOff-mul ./main.c --   681
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.068193674087524
succeed? True
instantReward: 0.0
EndTime: 2620.2570266723633
----------
mutation rule: add2Loop;
mutate pos: 837
mutate cmd: ./exefile/add2Loop-mul ./main.c --   837
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 2620.4800901412964
----------
mutation rule: repLoopCond;1
mutate pos: 681
mutate cmd: ./exefile/repLoopCond-mul ./main.c -- "1" 681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [3] ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2620.4954018592834
----------
mutation rule: addVarDecl;
mutate pos: 598
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   598
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2620.6642560958862
----------
mutation rule: repIntConstant;*0
mutate pos: 617
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2631.102243900299
----------
mutation rule: disableLoopUnroll;
mutate pos: 681
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2631.5810956954956
----------
mutation rule: addGoto;
mutate pos: 753
mutate cmd: ./exefile/addGoto-mul ./main.c --   753 662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2632.420291662216
----------
mutation rule: repRemUnaryOp;post--,pre--
mutate pos: 628
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "post--" "pre--" 628
pos_left_this_mutator: [1] ['628']
mutator_left_this_class: [10] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2633.2723093032837
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2633.437124490738
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2634.1723623275757
----------
mutation rule: repBinaryOp;-,/
mutate pos: 710
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "/" 710
pos_left_this_mutator: [1] ['710']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.161128520965576
succeed? True
instantReward: 1.6918469893582825e-05
EndTime: 2682.223423242569
----------
mutation rule: moveStmt;
mutate pos: 685
mutate cmd: ./exefile/moveStmt-mul ./main.c --   685
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2692.7025723457336
----------
mutation rule: repBinaryOp;-,+
mutate pos: 710
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "+" 710
pos_left_this_mutator: [1] ['710']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2692.8154447078705
----------
mutation rule: addQualifier;restrict
mutate pos: 512
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 512
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2693.280679702759
----------
mutation rule: repBinaryOp;>,<=
mutate pos: 776
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "<=" 776
pos_left_this_mutator: [2] ['745', '776']
mutator_left_this_class: [9] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.650681495666504
succeed? True
instantReward: -5.565912657217885e-06
EndTime: 2740.9742131233215
----------
mutation rule: TurnConstantVar;
mutate pos: 617
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2741.8673570156097
----------
mutation rule: repIfCond;1
mutate pos: 841
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 841
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2741.8933460712433
----------
mutation rule: addVarDecl;
mutate pos: 871
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   871
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 2742.0711884498596
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 537
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 537
pos_left_this_mutator: [2] ['537', '585']
mutator_left_this_class: [1] ['remModifierQualifier;unsigned']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2752.565182209015
----------
mutation rule: add2Loop;
mutate pos: 662
mutate cmd: ./exefile/add2Loop-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.90083122253418
succeed? True
instantReward: 1.737257218303742e-05
EndTime: 2799.5661492347717
----------
mutation rule: repVarSameScope;
mutate pos: 624
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   624
pos_left_this_mutator: [14] ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 2799.5819005966187
----------
mutation rule: add2If;
mutate pos: 899
mutate cmd: ./exefile/add2If-mul ./main.c --   899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.72059464454651
succeed? True
instantReward: 0.0
EndTime: 2846.43736076355
----------
mutation rule: addWhile;
mutate pos: 662
mutate cmd: ./exefile/addWhile-mul ./main.c --   662
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2857.1370816230774
----------
mutation rule: TurnConstantVar;
mutate pos: 697
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   697
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 45.46873068809509
succeed? True
instantReward: 1.737257218303742e-05
EndTime: 2904.5387592315674
----------
mutation rule: moveStmt;
mutate pos: 628
mutate cmd: ./exefile/moveStmt-mul ./main.c --   628
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.15293335914612
succeed? True
instantReward: 0.0
EndTime: 2952.620632648468
----------
mutation rule: disableLoopVect;
mutate pos: 754
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   754
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 47.45265197753906
succeed? True
instantReward: 0.0
EndTime: 3001.020009994507
----------
mutation rule: addWhile;
mutate pos: 681
mutate cmd: ./exefile/addWhile-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 47.07210969924927
succeed? True
instantReward: 3.474514436607484e-05
EndTime: 3049.2135140895844
----------
mutation rule: repIfCond;!
mutate pos: 758
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 758
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3059.6902406215668
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3060.3840827941895
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3070.878233909607
----------
mutation rule: repIntConstant;*-1
mutate pos: 617
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 617
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3081.394916534424
----------
mutation rule: addRepModifier;short
mutate pos: 512
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "short" 512
pos_left_this_mutator: [3] ['512', '604', '848']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 64.22035002708435
succeed? True
instantReward: 8.752533717432988e-09
EndTime: 3146.594973564148
----------
mutation rule: addLoopIf;
mutate pos: 724
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   724
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.218745470047
succeed? True
instantReward: 1.7372873994544918e-05
EndTime: 3206.039610385895
----------
mutation rule: addVarDecl;
mutate pos: 621
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   621
pos_left_this_mutator: [19] ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 46.58254146575928
succeed? True
instantReward: 0.0
EndTime: 3253.6438302993774
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_exist
EndTime: 3253.840720176697
----------
mutation rule: disableLoopVect;
mutate pos: 681
mutate cmd: ./exefile/disableLoopVect-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopVect;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 72.82344150543213
succeed? True
instantReward: 0.0
EndTime: 3327.5865144729614
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3328.3043587207794
----------
mutation rule: delIf;
mutate pos: 841
mutate cmd: ./exefile/delIf-mul ./main.c --   841
pos_left_this_mutator: [4] ['899', '758', '841', '685']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: fake_passing
EndTime: 3328.325042963028
----------
mutation rule: optOff;
mutate pos: 561
mutate cmd: ./exefile/optOff-mul ./main.c --   561
pos_left_this_mutator: [3] ['561', '754', '681']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 52.38230872154236
succeed? True
instantReward: 1.7372873994544918e-05
EndTime: 3381.6103744506836
----------
mutation rule: repIntConstant;*0
mutate pos: 766
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 766
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 60.5758273601532
succeed? True
instantReward: 1.7372873994544918e-05
EndTime: 3443.3099348545074
----------
mutation rule: addQualifier;restrict
mutate pos: 604
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 604
pos_left_this_mutator: [5] ['512', '537', '585', '604', '848']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3443.779821872711
----------
mutation rule: add2Loop;
mutate pos: 681
mutate cmd: ./exefile/add2Loop-mul ./main.c --   681
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: fail
Collect cov Gap-Time: 69.65002083778381
succeed? True
instantReward: 1.3524679913035163e-07
EndTime: 3514.6789622306824
----------
mutation rule: disableLoopUnroll;
mutate pos: 681
mutate cmd: ./exefile/disableLoopUnroll-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['disableLoopUnroll;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3515.151561498642
----------
mutation rule: TurnConstantVar;
mutate pos: 676
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   676
pos_left_this_mutator: [6] ['697', '903', '617', '749', '766', '676']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 46.765743255615234
succeed? True
instantReward: 1.737710045701774e-05
EndTime: 3562.9552817344666
----------
mutation rule: delLoop;
mutate pos: 681
mutate cmd: ./exefile/delLoop-mul ./main.c --   681
pos_left_this_mutator: [2] ['754', '681']
mutator_left_this_class: [1] ['delLoop;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3573.452965259552
----------
mutation rule: delStmt;
mutate pos: 899
mutate cmd: ./exefile/delStmt-mul ./main.c --   899
pos_left_this_mutator: [15] ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [297] [('addQualifier;volatile', ['512', '537', '585', '604', '848']), ('addQualifier;const', ['512', '537', '585', '604', '848']), ('addQualifier;restrict', ['512', '537', '585', '604', '848']), ('addRepModifier;unsigned', ['512', '604', '848']), ('addRepModifier;signed', ['512', '585', '604', '848']), ('addRepModifier;short', ['512', '604', '848']), ('addRepModifier;long', ['512', '604', '848']), ('remModifierQualifier;unsigned', ['537', '585']), ('repBinaryOp;-,+', ['710']), ('repBinaryOp;-,*', ['710']), ('repBinaryOp;-,/', ['710']), ('repBinaryOp;-,%', ['710']), ('repBinaryOp;>,>=', ['745', '776']), ('repBinaryOp;>,<', ['745', '776']), ('repBinaryOp;>,<=', ['745', '776']), ('repBinaryOp;>,==', ['745', '776']), ('repBinaryOp;>,!=', ['745', '776']), ('repIntConstant;+1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*-1', ['697', '903', '617', '749', '766', '676']), ('repIntConstant;*0', ['697', '903', '617', '749', '766', '676']), ('repRemUnaryOp;post--,pre++', ['628']), ('repRemUnaryOp;post--,pre--', ['628']), ('repRemUnaryOp;post--,post++', ['628']), ('repRemUnaryOp;post--,~', ['628']), ('repRemUnaryOp;post--,delete', ['628']), ('repRemUnaryOp;~,pre++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,pre--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post++', ['718', '868', '701', '642']), ('repRemUnaryOp;~,post--', ['718', '868', '701', '642']), ('repRemUnaryOp;~,delete', ['718', '868', '701', '642']), ('repVarSameScope;', ['689', '693', '861', '874', '878', '889', '728', '732', '624', '631', '635', '762', '666', '823']), ('addIf;', ['896', '753', '754', '680', '837', '681']), ('addWhile;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addGoto;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addFunction;', ['-1']), ('add2Loop;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('addLoopIf;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delLoop;', ['754', '681']), ('repLoopCond;!', ['754', '681']), ('repLoopCond;0', ['754', '681']), ('repLoopCond;1', ['754', '681']), ('add2If;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delIf;', ['899', '758', '841', '685']), ('repIfCond;!', ['899', '758', '841', '685']), ('repIfCond;0', ['899', '758', '841', '685']), ('repIfCond;1', ['899', '758', '841', '685']), ('addVarDecl;', ['-1', '598', '621', '628', '662', '680', '681', '685', '724', '753', '754', '758', '837', '841', '871', '885', '896', '899', '907']), ('dupStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('delStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('moveStmt;', ['885', '724', '899', '896', '907', '628', '753', '754', '758', '837', '662', '841', '680', '681', '685']), ('repStmtFunction;', ['-1']), ('TurnConstantVar;', ['697', '903', '617', '749', '766', '676']), ('repBinaryExpr;', ['710', '885', '724', '745', '648', '776']), ('optOff;', ['561', '754', '681']), ('disableLoopUnroll;', ['754', '681']), ('disableLoopVect;', ['754', '681'])]
mutator_left_each_class: [57] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;post--,pre++', 'repRemUnaryOp;post--,pre--', 'repRemUnaryOp;post--,post++', 'repRemUnaryOp;post--,~', 'repRemUnaryOp;post--,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['delLoop;'], ['repLoopCond;!', 'repLoopCond;0', 'repLoopCond;1'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;'], ['disableLoopUnroll;'], ['disableLoopVect;']]
Get: pass
Collect cov Gap-Time: 48.01277256011963
succeed? True
instantReward: 0.0
EndTime: 3622.5208134651184
