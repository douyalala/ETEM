----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 0.9420933723449707
----------
mutation rule: TurnConstantVar;
mutate pos: 1149
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   1149
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 1.6160144805908203
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1.8407256603240967
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 2.517378807067871
----------
mutation rule: dupStmt;
mutate pos: 800
mutate cmd: ./exefile/dupStmt-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2.7938075065612793
----------
mutation rule: repIfCond;1
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 139.13331961631775
succeed? True
instantReward: 1.59821000479463e-05
EndTime: 142.8325457572937
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 68.39329099655151
succeed? True
instantReward: 1.53261412043945e-09
EndTime: 212.0167350769043
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 212.43195843696594
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 212.80640125274658
----------
mutation rule: repBinaryExpr;
mutate pos: 800
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   800
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 213.48316097259521
----------
mutation rule: repBinaryExpr;
mutate pos: 1031
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1031
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 214.23021388053894
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 214.89520859718323
----------
mutation rule: repVarSameScope;
mutate pos: 804
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   804
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 215.31040477752686
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 220.64740920066833
----------
mutation rule: repVarSameScope;
mutate pos: 1070
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1070
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 220.68727278709412
----------
mutation rule: addVarDecl;
mutate pos: 772
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   772
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 221.3444640636444
----------
mutation rule: repBinaryExpr;
mutate pos: 954
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   954
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 222.59466338157654
----------
mutation rule: dupStmt;
mutate pos: 1141
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 222.6204867362976
----------
mutation rule: addQualifier;volatile
mutate pos: 598
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 598
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 55.66243577003479
succeed? True
instantReward: 1.598261091931978e-05
EndTime: 279.0794129371643
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 279.1012136936188
----------
mutation rule: TurnConstantVar;
mutate pos: 900
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   900
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 51.56005787849426
succeed? True
instantReward: 1.598261091931978e-05
EndTime: 331.3910412788391
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 331.61963272094727
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 52.00384449958801
succeed? True
instantReward: 1.4051882292356963e-08
EndTime: 384.46164417266846
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 73.21478986740112
succeed? True
instantReward: 1.7215430524455066e-06
EndTime: 458.5653283596039
----------
mutation rule: addGoto;
mutate pos: 838
mutate cmd: ./exefile/addGoto-mul ./main.c --   838 1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 458.874475479126
----------
mutation rule: repIntConstant;*-1
mutate pos: 1149
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 1149
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 459.5658209323883
----------
mutation rule: repRemUnaryOp;~,delete
mutate pos: 944
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "delete" 944
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.935567140579224
succeed? True
instantReward: 1.632972990626735e-05
EndTime: 509.23595356941223
----------
mutation rule: optOff;
mutate pos: 859
mutate cmd: ./exefile/optOff-mul ./main.c --   859
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.8525824546814
succeed? True
instantReward: 1.632972990626735e-05
EndTime: 558.8133420944214
----------
mutation rule: delStmt;
mutate pos: 1153
mutate cmd: ./exefile/delStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.5137677192688
succeed? True
instantReward: 6.19322192215753e-07
EndTime: 610.151246547699
----------
mutation rule: repRemUnaryOp;~,post++
mutate pos: 1039
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post++" 1039
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 610.4444386959076
----------
mutation rule: repVarSameScope;
mutate pos: 820
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   820
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 610.738569021225
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 610.7634665966034
----------
mutation rule: addQualifier;volatile
mutate pos: 621
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "volatile" 621
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.24066662788391
succeed? True
instantReward: 5.474622635960472e-08
EndTime: 660.9242615699768
----------
mutation rule: addRepModifier;unsigned
mutate pos: 652
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 652
pos_left_this_mutator: [9] ['967', '512', '537', '575', '598', '621', '652', '682', '759']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 661.6700594425201
----------
mutation rule: repIntConstant;*0
mutate pos: 824
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 824
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 661.6882946491241
----------
mutation rule: optOff;
mutate pos: 859
mutate cmd: ./exefile/optOff-mul ./main.c --   859
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.792577028274536
succeed? True
instantReward: 1.642602539463526e-05
EndTime: 712.286571264267
----------
mutation rule: delStmt;
mutate pos: 1153
mutate cmd: ./exefile/delStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 712.3597345352173
----------
mutation rule: addWhile;
mutate pos: 914
mutate cmd: ./exefile/addWhile-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 722.8934640884399
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 722.9634819030762
----------
mutation rule: addLoopIf;
mutate pos: 800
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 55.3372061252594
succeed? True
instantReward: 0.0
EndTime: 779.8964810371399
----------
mutation rule: addGoto;
mutate pos: 838
mutate cmd: ./exefile/addGoto-mul ./main.c --   838 1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 780.3166980743408
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 781.107589006424
----------
mutation rule: addGoto;
mutate pos: 1141
mutate cmd: ./exefile/addGoto-mul ./main.c --   1141 914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 781.1598494052887
----------
mutation rule: add2Loop;
mutate pos: 1153
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 782.6023240089417
----------
mutation rule: repBinaryExpr;
mutate pos: 1080
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1080
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 783.7462692260742
----------
mutation rule: addQualifier;const
mutate pos: 652
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 652
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 784.1216549873352
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 784.3273282051086
----------
mutation rule: add2Loop;
mutate pos: 800
mutate cmd: ./exefile/add2Loop-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 785.2656424045563
----------
mutation rule: repBinaryExpr;
mutate pos: 954
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   954
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 786.053774356842
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 786.4616739749908
----------
mutation rule: repVarSameScope;
mutate pos: 695
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   695
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 787.6129579544067
----------
mutation rule: addRepModifier;long
mutate pos: 921
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 921
pos_left_this_mutator: [7] ['512', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 56.45534133911133
succeed? True
instantReward: 1.642602539463526e-05
EndTime: 845.6951344013214
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 845.7547678947449
----------
mutation rule: delStmt;
mutate pos: 1153
mutate cmd: ./exefile/delStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 845.8205876350403
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 553
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 553
pos_left_this_mutator: [2] ['553', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 74.69078183174133
succeed? True
instantReward: 1.642602539463526e-05
EndTime: 921.4234261512756
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.49800181388855
succeed? True
instantReward: 1.642602539463526e-05
EndTime: 970.7198235988617
----------
mutation rule: optOff;
mutate pos: 716
mutate cmd: ./exefile/optOff-mul ./main.c --   716
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.11617684364319
succeed? True
instantReward: 1.642602539463526e-05
EndTime: 1021.5695102214813
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1021.6309626102448
----------
mutation rule: repIntConstant;*-1
mutate pos: 984
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*-1" 984
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.431002616882324
succeed? True
instantReward: 0.0
EndTime: 1071.812737941742
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1071.8326840400696
----------
mutation rule: addLoopIf;
mutate pos: 914
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.368356227874756
succeed? True
instantReward: 1.642602539463526e-05
EndTime: 1121.406554222107
----------
mutation rule: repBinaryOp;>,!=
mutate pos: 1080
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" "!=" 1080
pos_left_this_mutator: [1] ['1080']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.107746839523315
succeed? True
instantReward: 1.642602539463526e-05
EndTime: 1172.4939637184143
----------
mutation rule: delStmt;
mutate pos: 838
mutate cmd: ./exefile/delStmt-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.39538025856018
succeed? True
instantReward: 1.1337788074984763e-07
EndTime: 1221.7485105991364
----------
mutation rule: dupStmt;
mutate pos: 1153
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1222.1291329860687
----------
mutation rule: repBinaryOp;>,>=
mutate pos: 1080
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" ">=" 1080
pos_left_this_mutator: [1] ['1080']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.98075294494629
succeed? True
instantReward: 1.643412381468882e-05
EndTime: 1270.860904932022
----------
mutation rule: repVarSameScope;
mutate pos: 793
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   793
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.523608446121216
succeed? True
instantReward: 1.643412381468882e-05
EndTime: 1319.1393127441406
----------
mutation rule: repBinaryExpr;
mutate pos: 1052
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1052
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.585158586502075
succeed? True
instantReward: 0.0
EndTime: 1367.6020076274872
----------
mutation rule: repIntConstant;*0
mutate pos: 824
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "*0" 824
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1367.6198325157166
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1368.7232930660248
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1368.8101239204407
----------
mutation rule: moveStmt;
mutate pos: 1153
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1369.1412181854248
----------
mutation rule: repBinaryOp;-,+
mutate pos: 994
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "+" 994
pos_left_this_mutator: [2] ['1019', '994']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.58308792114258
succeed? True
instantReward: 0.0
EndTime: 1418.6484785079956
----------
mutation rule: repIfCond;1
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1418.6901235580444
----------
mutation rule: addQualifier;const
mutate pos: 652
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 652
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1419.041307926178
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1419.2653970718384
----------
mutation rule: addGoto;
mutate pos: 1153
mutate cmd: ./exefile/addGoto-mul ./main.c --   1153 800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1419.6334228515625
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1419.6578419208527
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1419.7676892280579
----------
mutation rule: add2If;
mutate pos: 838
mutate cmd: ./exefile/add2If-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.80385208129883
succeed? True
instantReward: 8.642857693419437e-09
EndTime: 1468.6912496089935
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1468.7947263717651
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 50.86121606826782
succeed? True
instantReward: 0.0
EndTime: 1520.5518939495087
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1520.6541390419006
----------
mutation rule: repVarSameScope;
mutate pos: 1042
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1042
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.202500343322754
succeed? True
instantReward: 6.71554186768735e-07
EndTime: 1570.7482633590698
----------
mutation rule: addQualifier;restrict
mutate pos: 512
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 512
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1571.1217312812805
----------
mutation rule: addLoopIf;
mutate pos: 914
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.18976187705994
succeed? True
instantReward: 1.6476636129967705e-05
EndTime: 1620.5562734603882
----------
mutation rule: add2If;
mutate pos: 838
mutate cmd: ./exefile/add2If-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.802950859069824
succeed? True
instantReward: 0.0
EndTime: 1669.4363241195679
----------
mutation rule: addQualifier;const
mutate pos: 537
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 537
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.08539700508118
succeed? True
instantReward: 1.6476636129967705e-05
EndTime: 1720.3673958778381
----------
mutation rule: remModifierQualifier;short
mutate pos: 921
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "short" 921
pos_left_this_mutator: [6] ['598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.05306625366211
succeed? True
instantReward: 0.0
EndTime: 1769.2052638530731
----------
mutation rule: repRemUnaryOp;~,pre--
mutate pos: 1039
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "pre--" 1039
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 1769.5707898139954
----------
mutation rule: add2Loop;
mutate pos: 800
mutate cmd: ./exefile/add2Loop-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.821228981018066
succeed? True
instantReward: 0.0
EndTime: 1818.59081697464
----------
mutation rule: repBinaryOp;^,&
mutate pos: 1031
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "^" "&" 1031
pos_left_this_mutator: [1] ['1031']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 50.11639761924744
succeed? True
instantReward: 1.6476636129967705e-05
EndTime: 1869.5630626678467
----------
mutation rule: addRepModifier;long
mutate pos: 759
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 759
pos_left_this_mutator: [7] ['512', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.81932330131531
succeed? True
instantReward: 0.0
EndTime: 1918.324172258377
----------
mutation rule: addRepModifier;long
mutate pos: 921
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 921
pos_left_this_mutator: [7] ['512', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1918.3894414901733
----------
mutation rule: addLoopIf;
mutate pos: 1153
mutate cmd: ./exefile/addLoopIf-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addLoopIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.04735040664673
succeed? True
instantReward: 6.305570835275819e-07
EndTime: 1967.7716479301453
----------
mutation rule: moveStmt;
mutate pos: 1141
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1967.80433344841
----------
mutation rule: repIfCond;1
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1967.840178489685
----------
mutation rule: repVarSameScope;
mutate pos: 588
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   588
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: Mutate Diff=0
EndTime: 1968.22110414505
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 1968.4577910900116
----------
mutation rule: moveStmt;
mutate pos: 1141
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 1968.4837446212769
----------
mutation rule: repVarSameScope;
mutate pos: 665
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   665
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.924081563949585
succeed? True
instantReward: 0.0
EndTime: 2018.3748199939728
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2018.4871838092804
----------
mutation rule: addVarDecl;
mutate pos: 772
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   772
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.20260214805603
succeed? True
instantReward: 0.0
EndTime: 2067.68577003479
----------
mutation rule: TurnConstantVar;
mutate pos: 900
mutate cmd: ./exefile/TurnConstantVar-mul ./main.c --   900
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [1] ['TurnConstantVar;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2067.712967157364
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2067.9575140476227
----------
mutation rule: addWhile;
mutate pos: 800
mutate cmd: ./exefile/addWhile-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.640629291534424
succeed? True
instantReward: 0.0
EndTime: 2116.7521233558655
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2117.043566942215
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 553
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 553
pos_left_this_mutator: [2] ['553', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2117.122528553009
----------
mutation rule: repBinaryOp;>,>=
mutate pos: 1080
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" ">=" 1080
pos_left_this_mutator: [1] ['1080']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2117.17365026474
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2117.2003226280212
----------
mutation rule: moveStmt;
mutate pos: 1141
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2117.2228269577026
----------
mutation rule: addVarDecl;
mutate pos: 838
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   838
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.90059471130371
succeed? True
instantReward: 0.0
EndTime: 2165.9957225322723
----------
mutation rule: moveStmt;
mutate pos: 914
mutate cmd: ./exefile/moveStmt-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2166.0168356895447
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2166.0382974147797
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2166.0563538074493
----------
mutation rule: optOff;
mutate pos: 859
mutate cmd: ./exefile/optOff-mul ./main.c --   859
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.15996980667114
succeed? True
instantReward: 1.650982334489021e-05
EndTime: 2215.0554597377777
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2215.167617559433
----------
mutation rule: addRepModifier;long
mutate pos: 621
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "long" 621
pos_left_this_mutator: [7] ['512', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.976725816726685
succeed? True
instantReward: 1.3088751041432246e-07
EndTime: 2265.058881521225
----------
mutation rule: repRemUnaryOp;~,delete
mutate pos: 944
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "delete" 944
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2265.103352546692
----------
mutation rule: repIfCond;1
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2265.1462774276733
----------
mutation rule: add2Loop;
mutate pos: 1153
mutate cmd: ./exefile/add2Loop-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.07768249511719
succeed? True
instantReward: 0.0
EndTime: 2315.363575696945
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2315.499454498291
----------
mutation rule: addQualifier;restrict
mutate pos: 921
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 921
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2315.913773059845
----------
mutation rule: addQualifier;restrict
mutate pos: 575
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 575
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2316.343740463257
----------
mutation rule: add2Loop;
mutate pos: 914
mutate cmd: ./exefile/add2Loop-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2Loop;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.83203363418579
succeed? True
instantReward: 1.6516367720410927e-05
EndTime: 2366.2547538280487
----------
mutation rule: addQualifier;const
mutate pos: 598
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "const" 598
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.728086709976196
succeed? True
instantReward: 1.6516367720410927e-05
EndTime: 2415.8546195030212
----------
mutation rule: repVarSameScope;
mutate pos: 1070
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1070
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.238303422927856
succeed? True
instantReward: 1.6516367720410927e-05
EndTime: 2463.9902160167694
----------
mutation rule: addGoto;
mutate pos: 1145
mutate cmd: ./exefile/addGoto-mul ./main.c --   1145 1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.345422983169556
succeed? True
instantReward: 1.6516367720410927e-05
EndTime: 2514.21164393425
----------
mutation rule: addGoto;
mutate pos: 1141
mutate cmd: ./exefile/addGoto-mul ./main.c --   1141 914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 2514.2359986305237
----------
mutation rule: repVarSameScope;
mutate pos: 1002
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   1002
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2514.6454453468323
----------
mutation rule: repBinaryExpr;
mutate pos: 1052
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   1052
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2514.7861800193787
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 921
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 921
pos_left_this_mutator: [2] ['553', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.632814168930054
succeed? True
instantReward: 1.6516367720410927e-05
EndTime: 2563.50546169281
----------
mutation rule: add2If;
mutate pos: 800
mutate cmd: ./exefile/add2If-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.71063995361328
succeed? True
instantReward: 0.0
EndTime: 2612.3910512924194
----------
mutation rule: addQualifier;restrict
mutate pos: 575
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 575
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2612.852739572525
----------
mutation rule: addRepModifier;unsigned
mutate pos: 598
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 598
pos_left_this_mutator: [9] ['967', '512', '537', '575', '598', '621', '652', '682', '759']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.63987493515015
succeed? True
instantReward: 1.6516367720410927e-05
EndTime: 2662.3737938404083
----------
mutation rule: dupStmt;
mutate pos: 914
mutate cmd: ./exefile/dupStmt-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2662.8042154312134
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.66856598854065
succeed? True
instantReward: 0.0
EndTime: 2712.509885072708
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2713.170073747635
----------
mutation rule: addQualifier;restrict
mutate pos: 652
mutate cmd: ./exefile/addQualifier-mul ./main.c -- "restrict" 652
pos_left_this_mutator: [11] ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']
mutator_left_this_class: [3] ['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2713.659882545471
----------
mutation rule: repIntConstant;+1
mutate pos: 1149
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 1149
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.62283205986023
succeed? True
instantReward: 4.472961051209907e-07
EndTime: 2763.300836801529
----------
mutation rule: repBinaryOp;|,^
mutate pos: 1052
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "|" "^" 1052
pos_left_this_mutator: [1] ['1052']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.156514167785645
succeed? True
instantReward: 1.6533571416761736e-05
EndTime: 2811.3991379737854
----------
mutation rule: repIfCond;!
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "!" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.273686170578
succeed? True
instantReward: 1.993676982073203e-07
EndTime: 2861.6564757823944
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2861.788893699646
----------
mutation rule: repVarSameScope;
mutate pos: 634
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   634
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2862.217171907425
----------
mutation rule: addRepModifier;unsigned
mutate pos: 621
mutate cmd: ./exefile/addRepModifier-mul ./main.c -- "unsigned" 621
pos_left_this_mutator: [9] ['967', '512', '537', '575', '598', '621', '652', '682', '759']
mutator_left_this_class: [4] ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.33525061607361
succeed? True
instantReward: 0.0
EndTime: 2910.5569422245026
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2911.2998898029327
----------
mutation rule: addVarDecl;
mutate pos: 800
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   800
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.220269203186035
succeed? True
instantReward: 0.0
EndTime: 2960.5422201156616
----------
mutation rule: dupStmt;
mutate pos: 838
mutate cmd: ./exefile/dupStmt-mul ./main.c --   838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 2961.0068638324738
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 2961.151966571808
----------
mutation rule: repBinaryExpr;
mutate pos: 914
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   914
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.34383487701416
succeed? True
instantReward: 0.0
EndTime: 3010.4808826446533
----------
mutation rule: repIfCond;1
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3010.537172794342
----------
mutation rule: addGoto;
mutate pos: 914
mutate cmd: ./exefile/addGoto-mul ./main.c --   914 800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3010.9778985977173
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3011.0041909217834
----------
mutation rule: repRemUnaryOp;~,post--
mutate pos: 944
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post--" 944
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.046430587768555
succeed? True
instantReward: 1.6540955405584227e-05
EndTime: 3060.9179949760437
----------
mutation rule: repIfCond;1
mutate pos: 1145
mutate cmd: ./exefile/repIfCond-mul ./main.c -- "1" 1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [3] ['repIfCond;!', 'repIfCond;0', 'repIfCond;1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3060.973293542862
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.10205578804016
succeed? True
instantReward: 0.0
EndTime: 3111.0337924957275
----------
mutation rule: delStmt;
mutate pos: 1145
mutate cmd: ./exefile/delStmt-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['delStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3111.055116176605
----------
mutation rule: addInline;
mutate pos: 716
mutate cmd: ./exefile/addInline-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addInline;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3111.198768377304
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3111.3691267967224
----------
mutation rule: repBinaryOp;^,&
mutate pos: 1031
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "^" "&" 1031
pos_left_this_mutator: [1] ['1031']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3111.4734835624695
----------
mutation rule: repIntConstant;+1
mutate pos: 984
mutate cmd: ./exefile/repIntConstant-mul ./main.c -- "+1" 984
pos_left_this_mutator: [5] ['984', '1149', '824', '900', '737']
mutator_left_this_class: [4] ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
succeed? False
Why not: other_fail
EndTime: 3112.30925321579
----------
mutation rule: moveStmt;
mutate pos: 1141
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3112.334150791168
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3114.2558608055115
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3115.1785202026367
----------
mutation rule: repVarSameScope;
mutate pos: 934
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   934
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3115.6686794757843
----------
mutation rule: moveStmt;
mutate pos: 914
mutate cmd: ./exefile/moveStmt-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.19841957092285
succeed? True
instantReward: 1.6540955405584227e-05
EndTime: 3165.7386140823364
----------
mutation rule: add2If;
mutate pos: 1145
mutate cmd: ./exefile/add2If-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.64887309074402
succeed? True
instantReward: 1.6540955405584227e-05
EndTime: 3216.4740710258484
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3216.4995925426483
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3216.682049512863
----------
mutation rule: repBinaryOp;>,>=
mutate pos: 1080
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- ">" ">=" 1080
pos_left_this_mutator: [1] ['1080']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3216.7546355724335
----------
mutation rule: addGoto;
mutate pos: 914
mutate cmd: ./exefile/addGoto-mul ./main.c --   914 1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.986743450164795
succeed? True
instantReward: 1.6540955405584227e-05
EndTime: 3265.586413383484
----------
mutation rule: dupStmt;
mutate pos: 914
mutate cmd: ./exefile/dupStmt-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3266.0532371997833
----------
mutation rule: optOff;
mutate pos: 859
mutate cmd: ./exefile/optOff-mul ./main.c --   859
pos_left_this_mutator: [2] ['716', '859']
mutator_left_this_class: [1] ['optOff;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 49.31735801696777
succeed? True
instantReward: 1.6540955405584227e-05
EndTime: 3316.193175792694
----------
mutation rule: addGoto;
mutate pos: 1153
mutate cmd: ./exefile/addGoto-mul ./main.c --   1153 838
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3316.654786348343
----------
mutation rule: add2If;
mutate pos: 800
mutate cmd: ./exefile/add2If-mul ./main.c --   800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['add2If;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 47.84938454627991
succeed? True
instantReward: 0.0
EndTime: 3365.701953649521
----------
mutation rule: moveStmt;
mutate pos: 1145
mutate cmd: ./exefile/moveStmt-mul ./main.c --   1145
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3365.723622083664
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 49.376152992248535
succeed? True
instantReward: 0.0
EndTime: 3416.121248483658
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3416.843474626541
----------
mutation rule: addVarDecl;
mutate pos: -1
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   -1
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.52457618713379
succeed? True
instantReward: 0.0
EndTime: 3466.400952577591
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3467.1111330986023
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3467.8172760009766
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 921
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 921
pos_left_this_mutator: [2] ['553', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3467.8826706409454
----------
mutation rule: addVarDecl;
mutate pos: 800
mutate cmd: ./exefile/addVarDecl-mul ./main.c --   800
pos_left_this_mutator: [10] ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']
mutator_left_this_class: [1] ['addVarDecl;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3468.0208117961884
----------
mutation rule: repBinaryOp;-,/
mutate pos: 1019
mutate cmd: ./exefile/repBinaryOp-mul ./main.c -- "-" "/" 1019
pos_left_this_mutator: [2] ['1019', '994']
mutator_left_this_class: [14] ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 47.409122943878174
succeed? True
instantReward: 0.0
EndTime: 3516.519511461258
----------
mutation rule: addFunction;
mutate pos: -1
mutate cmd: ./exefile/addFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['addFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3517.2470779418945
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3517.4360835552216
----------
mutation rule: repVarSameScope;
mutate pos: 934
mutate cmd: ./exefile/repVarSameScope-mul ./main.c --   934
pos_left_this_mutator: [20] ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']
mutator_left_this_class: [1] ['repVarSameScope;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3517.913710832596
----------
mutation rule: repBinaryExpr;
mutate pos: 838
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   838
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: fail
Collect cov Gap-Time: 48.78939652442932
succeed? True
instantReward: 0.0
EndTime: 3567.74555850029
----------
mutation rule: addIf;
mutate pos: 1141
mutate cmd: ./exefile/addIf-mul ./main.c --   1141
pos_left_this_mutator: [1] ['1141']
mutator_left_this_class: [1] ['addIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3567.96768116951
----------
mutation rule: addFuncArg;
mutate pos: 716
mutate cmd: ./exefile/addFuncArg-mul ./main.c --   716
pos_left_this_mutator: [1] ['716']
mutator_left_this_class: [1] ['addFuncArg;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3568.575294971466
----------
mutation rule: remModifierQualifier;unsigned
mutate pos: 553
mutate cmd: ./exefile/remModifierQualifier-mul ./main.c -- "unsigned" 553
pos_left_this_mutator: [2] ['553', '921']
mutator_left_this_class: [3] ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3568.720137357712
----------
mutation rule: dupStmt;
mutate pos: 1153
mutate cmd: ./exefile/dupStmt-mul ./main.c --   1153
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['dupStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3569.2111961841583
----------
mutation rule: repBinaryExpr;
mutate pos: 914
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   914
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3569.4072620868683
----------
mutation rule: addGoto;
mutate pos: 1153
mutate cmd: ./exefile/addGoto-mul ./main.c --   1153 800
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addGoto;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3569.911323785782
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3570.108631372452
----------
mutation rule: repStmtFunction;
mutate pos: -1
mutate cmd: ./exefile/repStmtFunction-mul ./main.c --   -1
pos_left_this_mutator: [1] ['-1']
mutator_left_this_class: [1] ['repStmtFunction;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3570.2932341098785
----------
mutation rule: repRemUnaryOp;~,post--
mutate pos: 1039
mutate cmd: ./exefile/repRemUnaryOp-mul ./main.c -- "~" "post--" 1039
pos_left_this_mutator: [3] ['944', '1060', '1039']
mutator_left_this_class: [5] ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_opt checkpass_fail
EndTime: 3570.7779824733734
----------
mutation rule: repBinaryExpr;
mutate pos: 838
mutate cmd: ./exefile/repBinaryExpr-mul ./main.c --   838
pos_left_this_mutator: [10] ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']
mutator_left_this_class: [1] ['repBinaryExpr;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: pass_exist
EndTime: 3571.0017297267914
----------
mutation rule: delIf;
mutate pos: 1145
mutate cmd: ./exefile/delIf-mul ./main.c --   1145
pos_left_this_mutator: [1] ['1145']
mutator_left_this_class: [1] ['delIf;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3571.0226192474365
----------
mutation rule: addWhile;
mutate pos: 1141
mutate cmd: ./exefile/addWhile-mul ./main.c --   1141
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['addWhile;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
succeed? False
Why not: fake_passing
EndTime: 3571.247305870056
----------
mutation rule: moveStmt;
mutate pos: 914
mutate cmd: ./exefile/moveStmt-mul ./main.c --   914
pos_left_this_mutator: [6] ['800', '1141', '1145', '1153', '838', '914']
mutator_left_this_class: [1] ['moveStmt;']
pos_left_each_mutator: [231] [('addQualifier;volatile', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;const', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addQualifier;restrict', ['967', '512', '537', '553', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;unsigned', ['967', '512', '537', '575', '598', '621', '652', '682', '759']), ('addRepModifier;signed', ['967', '512', '537', '575', '598', '621', '652', '682', '759', '921']), ('addRepModifier;short', ['512', '537', '575', '967']), ('addRepModifier;long', ['512', '598', '621', '652', '682', '759', '921']), ('remModifierQualifier;unsigned', ['553', '921']), ('remModifierQualifier;short', ['598', '621', '652', '682', '759', '921']), ('remModifierQualifier;long', ['537', '575', '967']), ('repBinaryOp;-,+', ['1019', '994']), ('repBinaryOp;-,*', ['1019', '994']), ('repBinaryOp;-,/', ['1019', '994']), ('repBinaryOp;-,%', ['1019', '994']), ('repBinaryOp;>,>=', ['1080']), ('repBinaryOp;>,<', ['1080']), ('repBinaryOp;>,<=', ['1080']), ('repBinaryOp;>,==', ['1080']), ('repBinaryOp;>,!=', ['1080']), ('repBinaryOp;|,^', ['1052']), ('repBinaryOp;|,&', ['1052']), ('repBinaryOp;^,&', ['1031']), ('repBinaryOp;^,|', ['1031']), ('repBinaryOp;>>,<<', ['954']), ('repIntConstant;+1', ['984', '1149', '824', '900', '737']), ('repIntConstant;-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*-1', ['984', '1149', '824', '900', '737']), ('repIntConstant;*0', ['984', '1149', '824', '900', '737']), ('repRemUnaryOp;~,pre++', ['944', '1060', '1039']), ('repRemUnaryOp;~,pre--', ['944', '1060', '1039']), ('repRemUnaryOp;~,post++', ['944', '1060', '1039']), ('repRemUnaryOp;~,post--', ['944', '1060', '1039']), ('repRemUnaryOp;~,delete', ['944', '1060', '1039']), ('repVarSameScope;', ['588', '634', '665', '695', '775', '779', '793', '804', '820', '880', '890', '934', '947', '980', '1002', '1006', '1042', '1066', '1070', '1127']), ('addIf;', ['1141']), ('addWhile;', ['800', '1141', '1145', '1153', '838', '914']), ('addGoto;', ['800', '1141', '1145', '1153', '838', '914']), ('addFunction;', ['-1']), ('add2Loop;', ['800', '1141', '1145', '1153', '838', '914']), ('addLoopIf;', ['800', '1141', '1145', '1153', '838', '914']), ('add2If;', ['800', '1141', '1145', '1153', '838', '914']), ('delIf;', ['1145']), ('repIfCond;!', ['1145']), ('repIfCond;0', ['1145']), ('repIfCond;1', ['1145']), ('addVarDecl;', ['-1', '800', '961', '1141', '1145', '914', '1153', '838', '772', '1063']), ('dupStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('delStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('moveStmt;', ['800', '1141', '1145', '1153', '838', '914']), ('repStmtFunction;', ['-1']), ('addFuncArg;', ['716']), ('addInline;', ['716']), ('TurnConstantVar;', ['984', '1149', '824', '900', '737']), ('repBinaryExpr;', ['954', '800', '1080', '1052', '994', '838', '1019', '1031', '907', '914']), ('optOff;', ['716', '859'])]
mutator_left_each_class: [55] [['addQualifier;volatile', 'addQualifier;const', 'addQualifier;restrict'], ['addRepModifier;unsigned', 'addRepModifier;signed', 'addRepModifier;short', 'addRepModifier;long'], ['remModifierQualifier;unsigned', 'remModifierQualifier;short', 'remModifierQualifier;long'], ['repBinaryOp;>,>=', 'repBinaryOp;>,<', 'repBinaryOp;>,<=', 'repBinaryOp;>,==', 'repBinaryOp;>,!=', 'repBinaryOp;|,^', 'repBinaryOp;|,&', 'repBinaryOp;^,&', 'repBinaryOp;^,|', 'repBinaryOp;>>,<<', 'repBinaryOp;-,+', 'repBinaryOp;-,*', 'repBinaryOp;-,/', 'repBinaryOp;-,%'], ['repIntConstant;*-1', 'repIntConstant;*0', 'repIntConstant;+1', 'repIntConstant;-1'], ['repRemUnaryOp;~,post++', 'repRemUnaryOp;~,post--', 'repRemUnaryOp;~,delete', 'repRemUnaryOp;~,pre++', 'repRemUnaryOp;~,pre--'], ['repVarSameScope;'], ['addIf;'], ['addWhile;'], ['addGoto;'], ['addFunction;'], ['add2Loop;'], ['addLoopIf;'], ['add2If;'], ['delIf;'], ['repIfCond;!', 'repIfCond;0', 'repIfCond;1'], ['addVarDecl;'], ['dupStmt;'], ['delStmt;'], ['moveStmt;'], ['repStmtFunction;'], ['addFuncArg;'], ['addInline;'], ['TurnConstantVar;'], ['repBinaryExpr;'], ['optOff;']]
Get: pass
Collect cov Gap-Time: 48.701613903045654
succeed? True
instantReward: 3.3081910811168454e-05
EndTime: 3620.9245767593384
